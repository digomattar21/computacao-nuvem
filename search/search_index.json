{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"","title":"Home"},{"location":"license/","text":"License \u00b6 MIT License Copyright \u00a9 2016-2022 Martin Donath Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"License"},{"location":"license/#license","text":"MIT License Copyright \u00a9 2016-2022 Martin Donath Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"License"},{"location":"adicional/","text":"Video - Vint Cerf \u00b6 O primeiro passo para trabalharmos com redes \u00e9 compreender o contexto ao qual estamos inseridos e tamb\u00e9m saber o que deve ser protegido e implementado. Neste sentido, seria interessante voc\u00eas acessarem o v\u00eddeo dispon\u00edvel no link abaixo. Nele um dos criadores do TCP/IP Vint Cerf vai abordar os principais acontecimentos tecnol\u00f3gicos para entendermos o que \u00e9 a Internet e as redes de computadores. Video - OpenInfra 2022 \u00b6 OpenStack \u00e9 a plataforma de nuvem de c\u00f3digo aberto l\u00edder mundial. Ele \u00e9 usado por centenas de provedores locais de nuvem p\u00fablica , telcos e milhares de empresas , com mais de 25 milh\u00f5es de n\u00facleos sendo executados em produ\u00e7\u00e3o, de acordo com a OpenStack User Survey 2021. O OpenStack, sem d\u00favida, dominou o mercado e se tornou o padr\u00e3o de fato para c\u00f3digo aberto implementa\u00e7\u00f5es de infraestrutura em nuvem. Sua ado\u00e7\u00e3o continua a crescer e sua participa\u00e7\u00e3o de mercado deve chegar a US$ 8 bilh\u00f5es em 2023.","title":"Governanca Internet"},{"location":"adicional/#video-vint-cerf","text":"O primeiro passo para trabalharmos com redes \u00e9 compreender o contexto ao qual estamos inseridos e tamb\u00e9m saber o que deve ser protegido e implementado. Neste sentido, seria interessante voc\u00eas acessarem o v\u00eddeo dispon\u00edvel no link abaixo. Nele um dos criadores do TCP/IP Vint Cerf vai abordar os principais acontecimentos tecnol\u00f3gicos para entendermos o que \u00e9 a Internet e as redes de computadores.","title":"Video - Vint Cerf"},{"location":"adicional/#video-openinfra-2022","text":"OpenStack \u00e9 a plataforma de nuvem de c\u00f3digo aberto l\u00edder mundial. Ele \u00e9 usado por centenas de provedores locais de nuvem p\u00fablica , telcos e milhares de empresas , com mais de 25 milh\u00f5es de n\u00facleos sendo executados em produ\u00e7\u00e3o, de acordo com a OpenStack User Survey 2021. O OpenStack, sem d\u00favida, dominou o mercado e se tornou o padr\u00e3o de fato para c\u00f3digo aberto implementa\u00e7\u00f5es de infraestrutura em nuvem. Sua ado\u00e7\u00e3o continua a crescer e sua participa\u00e7\u00e3o de mercado deve chegar a US$ 8 bilh\u00f5es em 2023.","title":"Video - OpenInfra 2022"},{"location":"projetos/0.Cloud_Intro/","text":"Objetivos \u00b6 Introduzir os conceitos b\u00e1sicos sobre cloud computing. Entender os conceitos b\u00e1sicos sobre IaaS. Pr\u00e9-requisitos: Realizar leitura pr\u00e9via: Produtos da AWS Public vs Private Cloud, AWS compared to Openstack Realizar a leitura sobre Cloud Computing. [Kavis - cap. 2 e Earl et al - cap. 4] Primeira Inst\u00e2ncia \u00b6 Vamos come\u00e7ar conhecendo o ferramental b\u00e1sico da AWS para virtual machines . Acessar o dashboard do EC2 de North Virginia ( us-east-1 ). Criar uma inst\u00e2ncia t2.micro com Ubuntu 18.04 LTS server e 8Gb de disco. Renomear a m\u00e1quina com o seu nome ( Tag ). Verifique se o security group liberou a conex\u00e3o SSH externa. Importar em Key Pair a sua public key gerada na primeira aula. Coloque o seu nome na chave. Endere\u00e7o IP p\u00fablico da m\u00e1quina: Teste a conex\u00e3o SSH (n\u00e3o se esque\u00e7a da chave privada). . Voc\u00ea criou uma policy para seu usu\u00e1rio. O que s\u00e3o Policies ? Por que elas s\u00e3o importantes e devem ser bem definidas? . Dentro do contexto de Cloud Computing, defina os termos: instance , image , region , VPC , subnet , security-group . . O poder computacional das inst\u00e2ncias \u00e9 medido em vCPU. O que \u00e9 vCPU? Primeiro Deploy - Ghost Blog Platform \u00b6 Vamos fazer um deploy completo e r\u00e1pido com poucos comandos. Acesse o terminal da inst\u00e2ncia criada e execute os seguintes comandos: Atualize o S.O. $ sudo apt update Instale o conjure-up usando o snap $ sudo snap install conjure-up --classic Agora instale a plataforma Ghost $ juju add-credential aws Insira um nome e a regi\u00e3o correspondente: us-east-1 Entre com o par Access Key ID / Secret Access Key $ conjure-up battlemidget/ghost aws/us-east-1 Aguarde. Teste o deploy $ juju status Anote o IP da aplica\u00e7\u00e3o HAProxy. Acesse a plataforma: https://[IP P\u00fablico]/admin Destrua tudo: Anote o nome do controller no juju status $ juju kill-controller [controller-name] Aguarde e destrua a inst\u00e2ncia que voc\u00ea criou na AWS . Quantas inst\u00e2ncias foram criadas automaticamente? Criar inst\u00e2ncias automaticamente \u00e9 um atributo positivo ou negativo? . Quanto custou o prot\u00f3tipo? Assuma que usou uma semana de cada inst\u00e2ncia. . Dada a quantidade de computadores apontada na quest\u00e3o anterior, descreva como voc\u00ea montaria um ambiente Ghost em um Datacenter pr\u00f3prio. Assuma que voc\u00ea ainda n\u00e3o possui nenhum hardware dispon\u00edvel, apenas um or\u00e7amento aprovado. . Agora, somando o fato de que hardware deprecia com o tempo e possui um custo mensal de manuten\u00e7\u00e3o, compare em termos de custo uma Public Cloud e um Datacenter pr\u00f3prio. Como podem perceber a infraestrutura acima n\u00e3o custa barato ao longo do tempo. Talvez o uso do conjure-up/juju n\u00e3o seja o mais adequado para pequenos projetos. Outras alternativas para realizar provisionamento/implanta\u00e7\u00e3o: Terraform: https://www.terraform.io/ Ansible: https://www.ansible.com/ Puppet: https://puppet.com/ Escalabilidade \u00b6 Conforme visto na Aula 01, vamos agora fazer uso de uma das mais poderosas caracter\u00edsticas da nuvem. Crie uma inst\u00e2ncia t2.micro com Ubuntu 18.04 LTS: Renomeie a inst\u00e2ncia para Webserver $ sudo apt update; sudo apt install nodejs build-essential -y Edite um arquivo server.js: #!/usr/bin/env nodejs var http = require ( 'http' ); var os = require ( 'os' ); var crypto = require ( 'crypto' ); http . createServer ( function ( req , res ) { res . writeHead ( 200 , { 'Content-Type' : 'text/plain' }); var nonce = 1 ; var seed = Math . random (); var h = crypto . createHash ( 'sha256' ); h . update ( new Buffer ( nonce + \" Hello World \" + seed )); while ( h . digest ( \"hex\" ). substr ( 0 , 3 ) != '000' ) { h = crypto . createHash ( 'sha256' ); nonce ++ ; h . update ( new Buffer ( nonce + \" Hello World \" + seed )); } res . end ( '{ \"host\": ' + os . hostname () + ', \"nonce\": ' + nonce + '}' ); }). listen ( 8080 , '' ); console . log ( 'Server running at http://localhost:8080/' ); Execute o servi\u00e7o: $ chmod +x ./server.js $ ./server.js Libere a porta no security group correspondente. Teste o servi\u00e7o no browser. Ajustando o final: $ crontab -e\\ @reboot /home/ubuntu/server.js $ sudo reboot Teste novamente no browser. Pesquise o que faz o crontab? Simulando carga no servidor \u00b6 Uma das grande d\u00favidas de quem utiliza nuvem diz respeito a capacidade das inst\u00e2ncias utilizadas e se elas est\u00e3o dimensiondas corretamente. Nessa etapa vamos estimar essa capacidade. Crie duas novas inst\u00e2ncias t2.micro com Ubuntu 18.04 Renomeie como: Locust-master e Locust-worker Em ambas as m\u00e1quinas: $ sudo apt update && sudo apt install python3-pip -y $ pip3 install locust crie um arquivo locustfile.py no home: \\vspace{0.3cm} from locust import HttpUser , task , between class QuickstartUser ( HttpUser ): @task def index_page ( self ): self . client . get ( \"/\" ) \\vspace{0.3cm} * no master: * liberar no security group as portas 8089 e 5557 * $ python3 -m locust -f /home/ubuntu/locustfile.py --master * No worker: * ajuste o n\u00famero de conex\u00f5es no Linux:\\ $ sudo nano /etc/sysctl.conf * adicione a linha:\\ fs.file-max = 5000000 * aplique as altera\u00e7\u00f5es:\\ $ sudo sysctl -p * acerte o crontab para rodar na inicializa\u00e7\u00e3o:\\ python3 -m locust -f /home/ubuntu/locustfile.py --worker --master-host=[IP do master] * $ sudo reboot Realizando a simula\u00e7\u00e3o: acesse o locust master via browser aguarde o worker se conectar no master inicie um teste 300/10 - 300 usu\u00e1rios e hatch rate de 10 novos usu\u00e1rios por segundo. N\u00e3o caiu! - Talvez haja algumas poucas falhas. verifique que essa aplica\u00e7\u00e3o suporta cerca de 100 rps (requisi\u00e7\u00f5es por segundo). Multiplicando os usu\u00e1rios: crie uma imagem do locust-worker. Caf\u00e9. crie mais 2 inst\u00e2ncias dessa AMI, Execute um teste 600/20 - observe que h\u00e1 algumas falhas mas ainda em um percentual baixo. Agora execute um teste 1000/50 - agora complicou. Escalando Verticalmente \u00b6 pare a m\u00e1quina com o servidor http. troque para t2.2xlarge. atualize o IP no locust master, reinicie os workers e repita o teste 1000/50. Escalando Horizontalmente \u00b6 Crie uma imagem do servidor web. Caf\u00e9. Rebaixe a m\u00e1quina para t2.micro de novo. Crie mais 2 inst\u00e2ncias a partir da AMI criada. N\u00e3o esque\u00e7a de reutilizar o security group. Crie um Application LoadBalancer que mapeia inst\u00e2ncias:8080 para loadbalancer:80. Marcar todas as Availability Zones . Adicione as 3 inst\u00e2ncias no Target Group . Teste o acesso ao LoadBalancer :\\vspace{0.5cm} Endere\u00e7o DNS:\\vspace{0.5cm} Verifique no navegador que h\u00e1 uma altern\u00e2ncia do servidor. Execute novamente o teste 1000/50. Voil\u00e0! Agora vamos ativar a elasticidade da nuvem. Remova as inst\u00e2ncias do LoadBalancer. Destrue-as. Crie um Autoscalling Group : Criar um Launch Configuration da mesma configura\u00e7\u00e3o em que foi criada a inst\u00e2ncia original. Reutilizar o Security Group com as devidas libera\u00e7\u00f5es. Come\u00e7ar com 1 inst\u00e2ncia. Selecionar todas as subnets . Anexar o Target Group criado anteriormente. Selecionar: Use scaling policies to adjust the capacity of this group . Usar Request Count Per Target em 3000 (50 rps x 60 segundos) Aguarde a primeira inst\u00e2ncia subir e teste o LoadBalancer de novo. Execute o teste 1000/50 novamente. Em 3 minutos ele se ajustar\u00e1 sozinho \u00e0 demanda. Encerre o teste e em 15 minutos ir\u00e1 desativar a capacidade ociosa automaticamente. Remova tudo e n\u00e3o deixe nada rodando (Cuidado com os recursos do seu colega).","title":"Primeiros Passos"},{"location":"projetos/0.Cloud_Intro/#objetivos","text":"Introduzir os conceitos b\u00e1sicos sobre cloud computing. Entender os conceitos b\u00e1sicos sobre IaaS. Pr\u00e9-requisitos: Realizar leitura pr\u00e9via: Produtos da AWS Public vs Private Cloud, AWS compared to Openstack Realizar a leitura sobre Cloud Computing. [Kavis - cap. 2 e Earl et al - cap. 4]","title":"Objetivos"},{"location":"projetos/0.Cloud_Intro/#primeira-instancia","text":"Vamos come\u00e7ar conhecendo o ferramental b\u00e1sico da AWS para virtual machines . Acessar o dashboard do EC2 de North Virginia ( us-east-1 ). Criar uma inst\u00e2ncia t2.micro com Ubuntu 18.04 LTS server e 8Gb de disco. Renomear a m\u00e1quina com o seu nome ( Tag ). Verifique se o security group liberou a conex\u00e3o SSH externa. Importar em Key Pair a sua public key gerada na primeira aula. Coloque o seu nome na chave. Endere\u00e7o IP p\u00fablico da m\u00e1quina: Teste a conex\u00e3o SSH (n\u00e3o se esque\u00e7a da chave privada). . Voc\u00ea criou uma policy para seu usu\u00e1rio. O que s\u00e3o Policies ? Por que elas s\u00e3o importantes e devem ser bem definidas? . Dentro do contexto de Cloud Computing, defina os termos: instance , image , region , VPC , subnet , security-group . . O poder computacional das inst\u00e2ncias \u00e9 medido em vCPU. O que \u00e9 vCPU?","title":"Primeira Inst\u00e2ncia"},{"location":"projetos/0.Cloud_Intro/#primeiro-deploy-ghost-blog-platform","text":"Vamos fazer um deploy completo e r\u00e1pido com poucos comandos. Acesse o terminal da inst\u00e2ncia criada e execute os seguintes comandos: Atualize o S.O. $ sudo apt update Instale o conjure-up usando o snap $ sudo snap install conjure-up --classic Agora instale a plataforma Ghost $ juju add-credential aws Insira um nome e a regi\u00e3o correspondente: us-east-1 Entre com o par Access Key ID / Secret Access Key $ conjure-up battlemidget/ghost aws/us-east-1 Aguarde. Teste o deploy $ juju status Anote o IP da aplica\u00e7\u00e3o HAProxy. Acesse a plataforma: https://[IP P\u00fablico]/admin Destrua tudo: Anote o nome do controller no juju status $ juju kill-controller [controller-name] Aguarde e destrua a inst\u00e2ncia que voc\u00ea criou na AWS . Quantas inst\u00e2ncias foram criadas automaticamente? Criar inst\u00e2ncias automaticamente \u00e9 um atributo positivo ou negativo? . Quanto custou o prot\u00f3tipo? Assuma que usou uma semana de cada inst\u00e2ncia. . Dada a quantidade de computadores apontada na quest\u00e3o anterior, descreva como voc\u00ea montaria um ambiente Ghost em um Datacenter pr\u00f3prio. Assuma que voc\u00ea ainda n\u00e3o possui nenhum hardware dispon\u00edvel, apenas um or\u00e7amento aprovado. . Agora, somando o fato de que hardware deprecia com o tempo e possui um custo mensal de manuten\u00e7\u00e3o, compare em termos de custo uma Public Cloud e um Datacenter pr\u00f3prio. Como podem perceber a infraestrutura acima n\u00e3o custa barato ao longo do tempo. Talvez o uso do conjure-up/juju n\u00e3o seja o mais adequado para pequenos projetos. Outras alternativas para realizar provisionamento/implanta\u00e7\u00e3o: Terraform: https://www.terraform.io/ Ansible: https://www.ansible.com/ Puppet: https://puppet.com/","title":"Primeiro Deploy - Ghost Blog Platform"},{"location":"projetos/0.Cloud_Intro/#escalabilidade","text":"Conforme visto na Aula 01, vamos agora fazer uso de uma das mais poderosas caracter\u00edsticas da nuvem. Crie uma inst\u00e2ncia t2.micro com Ubuntu 18.04 LTS: Renomeie a inst\u00e2ncia para Webserver $ sudo apt update; sudo apt install nodejs build-essential -y Edite um arquivo server.js: #!/usr/bin/env nodejs var http = require ( 'http' ); var os = require ( 'os' ); var crypto = require ( 'crypto' ); http . createServer ( function ( req , res ) { res . writeHead ( 200 , { 'Content-Type' : 'text/plain' }); var nonce = 1 ; var seed = Math . random (); var h = crypto . createHash ( 'sha256' ); h . update ( new Buffer ( nonce + \" Hello World \" + seed )); while ( h . digest ( \"hex\" ). substr ( 0 , 3 ) != '000' ) { h = crypto . createHash ( 'sha256' ); nonce ++ ; h . update ( new Buffer ( nonce + \" Hello World \" + seed )); } res . end ( '{ \"host\": ' + os . hostname () + ', \"nonce\": ' + nonce + '}' ); }). listen ( 8080 , '' ); console . log ( 'Server running at http://localhost:8080/' ); Execute o servi\u00e7o: $ chmod +x ./server.js $ ./server.js Libere a porta no security group correspondente. Teste o servi\u00e7o no browser. Ajustando o final: $ crontab -e\\ @reboot /home/ubuntu/server.js $ sudo reboot Teste novamente no browser. Pesquise o que faz o crontab?","title":"Escalabilidade"},{"location":"projetos/0.Cloud_Intro/#simulando-carga-no-servidor","text":"Uma das grande d\u00favidas de quem utiliza nuvem diz respeito a capacidade das inst\u00e2ncias utilizadas e se elas est\u00e3o dimensiondas corretamente. Nessa etapa vamos estimar essa capacidade. Crie duas novas inst\u00e2ncias t2.micro com Ubuntu 18.04 Renomeie como: Locust-master e Locust-worker Em ambas as m\u00e1quinas: $ sudo apt update && sudo apt install python3-pip -y $ pip3 install locust crie um arquivo locustfile.py no home: \\vspace{0.3cm} from locust import HttpUser , task , between class QuickstartUser ( HttpUser ): @task def index_page ( self ): self . client . get ( \"/\" ) \\vspace{0.3cm} * no master: * liberar no security group as portas 8089 e 5557 * $ python3 -m locust -f /home/ubuntu/locustfile.py --master * No worker: * ajuste o n\u00famero de conex\u00f5es no Linux:\\ $ sudo nano /etc/sysctl.conf * adicione a linha:\\ fs.file-max = 5000000 * aplique as altera\u00e7\u00f5es:\\ $ sudo sysctl -p * acerte o crontab para rodar na inicializa\u00e7\u00e3o:\\ python3 -m locust -f /home/ubuntu/locustfile.py --worker --master-host=[IP do master] * $ sudo reboot Realizando a simula\u00e7\u00e3o: acesse o locust master via browser aguarde o worker se conectar no master inicie um teste 300/10 - 300 usu\u00e1rios e hatch rate de 10 novos usu\u00e1rios por segundo. N\u00e3o caiu! - Talvez haja algumas poucas falhas. verifique que essa aplica\u00e7\u00e3o suporta cerca de 100 rps (requisi\u00e7\u00f5es por segundo). Multiplicando os usu\u00e1rios: crie uma imagem do locust-worker. Caf\u00e9. crie mais 2 inst\u00e2ncias dessa AMI, Execute um teste 600/20 - observe que h\u00e1 algumas falhas mas ainda em um percentual baixo. Agora execute um teste 1000/50 - agora complicou.","title":"Simulando carga no servidor"},{"location":"projetos/0.Cloud_Intro/#escalando-verticalmente","text":"pare a m\u00e1quina com o servidor http. troque para t2.2xlarge. atualize o IP no locust master, reinicie os workers e repita o teste 1000/50.","title":"Escalando Verticalmente"},{"location":"projetos/0.Cloud_Intro/#escalando-horizontalmente","text":"Crie uma imagem do servidor web. Caf\u00e9. Rebaixe a m\u00e1quina para t2.micro de novo. Crie mais 2 inst\u00e2ncias a partir da AMI criada. N\u00e3o esque\u00e7a de reutilizar o security group. Crie um Application LoadBalancer que mapeia inst\u00e2ncias:8080 para loadbalancer:80. Marcar todas as Availability Zones . Adicione as 3 inst\u00e2ncias no Target Group . Teste o acesso ao LoadBalancer :\\vspace{0.5cm} Endere\u00e7o DNS:\\vspace{0.5cm} Verifique no navegador que h\u00e1 uma altern\u00e2ncia do servidor. Execute novamente o teste 1000/50. Voil\u00e0! Agora vamos ativar a elasticidade da nuvem. Remova as inst\u00e2ncias do LoadBalancer. Destrue-as. Crie um Autoscalling Group : Criar um Launch Configuration da mesma configura\u00e7\u00e3o em que foi criada a inst\u00e2ncia original. Reutilizar o Security Group com as devidas libera\u00e7\u00f5es. Come\u00e7ar com 1 inst\u00e2ncia. Selecionar todas as subnets . Anexar o Target Group criado anteriormente. Selecionar: Use scaling policies to adjust the capacity of this group . Usar Request Count Per Target em 3000 (50 rps x 60 segundos) Aguarde a primeira inst\u00e2ncia subir e teste o LoadBalancer de novo. Execute o teste 1000/50 novamente. Em 3 minutos ele se ajustar\u00e1 sozinho \u00e0 demanda. Encerre o teste e em 15 minutos ir\u00e1 desativar a capacidade ociosa automaticamente. Remova tudo e n\u00e3o deixe nada rodando (Cuidado com os recursos do seu colega).","title":"Escalando Horizontalmente"},{"location":"projetos/1.ELB/","text":"Elastic Load Balancer \u00b6 O Elastic Load Balancer (ELB) da AWS \u00e9 um servi\u00e7o que distribui o tr\u00e1fego de entrada de aplicativos em v\u00e1rios destinos, como inst\u00e2ncias do Amazon EC2, cont\u00eaineres e endere\u00e7os IP. Ele aumenta a escalabilidade, a disponibilidade e a capacidade de gerenciamento de seus aplicativos. Tipos de ELBs \u00b6 A AWS oferece tr\u00eas tipos de ELBs: Classic Load Balancer \u00b6 O Classic Load Balancer \u00e9 o tipo original de ELB da AWS. Ele fornece balanceamento de carga para aplicativos que foram criados em apenas uma \u00fanica regi\u00e3o da AWS. Application Load Balancer \u00b6 O Application Load Balancer (ALB) \u00e9 um balanceador de carga de camada 7 que direciona o tr\u00e1fego para aplicativos baseados em HTTP/HTTPS. Ele fornece recursos avan\u00e7ados de roteamento, como a capacidade de rotear tr\u00e1fego para diferentes destinos com base no conte\u00fado da solicita\u00e7\u00e3o. Network Load Balancer \u00b6 O Network Load Balancer (NLB) \u00e9 um balanceador de carga de camada 4 que \u00e9 capaz de lidar com milh\u00f5es de solicita\u00e7\u00f5es por segundo. Ele \u00e9 projetado para aplicativos que exigem lat\u00eancia ultra baixa e alto desempenho. Recursos do ELB \u00b6 O ELB oferece v\u00e1rios recursos, incluindo: Balanceamento de carga: Distribui o tr\u00e1fego de entrada entre v\u00e1rios destinos para garantir que seus aplicativos estejam sempre dispon\u00edveis. Auto Scaling: O ELB pode ser integrado com o servi\u00e7o de Auto Scaling da AWS para aumentar ou diminuir a capacidade de seus aplicativos com base nas demandas do tr\u00e1fego. Monitoramento: O ELB fornece m\u00e9tricas detalhadas sobre o tr\u00e1fego e o desempenho do aplicativo para ajud\u00e1-lo a solucionar problemas rapidamente. Certificados SSL/TLS: O ELB suporta a criptografia SSL/TLS para garantir a seguran\u00e7a dos dados transmitidos pelos seus aplicativos. Conclus\u00e3o \u00b6 O Elastic Load Balancer \u00e9 um servi\u00e7o fundamental para garantir a disponibilidade, escalabilidade e confiabilidade de seus aplicativos. Com sua ampla gama de recursos e op\u00e7\u00f5es de configura\u00e7\u00e3o, o ELB \u00e9 uma excelente escolha para qualquer aplicativo que precise lidar com alto volume de tr\u00e1fego.","title":"1. Elastic Load Balancer"},{"location":"projetos/1.ELB/#elastic-load-balancer","text":"O Elastic Load Balancer (ELB) da AWS \u00e9 um servi\u00e7o que distribui o tr\u00e1fego de entrada de aplicativos em v\u00e1rios destinos, como inst\u00e2ncias do Amazon EC2, cont\u00eaineres e endere\u00e7os IP. Ele aumenta a escalabilidade, a disponibilidade e a capacidade de gerenciamento de seus aplicativos.","title":"Elastic Load Balancer"},{"location":"projetos/1.ELB/#tipos-de-elbs","text":"A AWS oferece tr\u00eas tipos de ELBs:","title":"Tipos de ELBs"},{"location":"projetos/1.ELB/#classic-load-balancer","text":"O Classic Load Balancer \u00e9 o tipo original de ELB da AWS. Ele fornece balanceamento de carga para aplicativos que foram criados em apenas uma \u00fanica regi\u00e3o da AWS.","title":"Classic Load Balancer"},{"location":"projetos/1.ELB/#application-load-balancer","text":"O Application Load Balancer (ALB) \u00e9 um balanceador de carga de camada 7 que direciona o tr\u00e1fego para aplicativos baseados em HTTP/HTTPS. Ele fornece recursos avan\u00e7ados de roteamento, como a capacidade de rotear tr\u00e1fego para diferentes destinos com base no conte\u00fado da solicita\u00e7\u00e3o.","title":"Application Load Balancer"},{"location":"projetos/1.ELB/#network-load-balancer","text":"O Network Load Balancer (NLB) \u00e9 um balanceador de carga de camada 4 que \u00e9 capaz de lidar com milh\u00f5es de solicita\u00e7\u00f5es por segundo. Ele \u00e9 projetado para aplicativos que exigem lat\u00eancia ultra baixa e alto desempenho.","title":"Network Load Balancer"},{"location":"projetos/1.ELB/#recursos-do-elb","text":"O ELB oferece v\u00e1rios recursos, incluindo: Balanceamento de carga: Distribui o tr\u00e1fego de entrada entre v\u00e1rios destinos para garantir que seus aplicativos estejam sempre dispon\u00edveis. Auto Scaling: O ELB pode ser integrado com o servi\u00e7o de Auto Scaling da AWS para aumentar ou diminuir a capacidade de seus aplicativos com base nas demandas do tr\u00e1fego. Monitoramento: O ELB fornece m\u00e9tricas detalhadas sobre o tr\u00e1fego e o desempenho do aplicativo para ajud\u00e1-lo a solucionar problemas rapidamente. Certificados SSL/TLS: O ELB suporta a criptografia SSL/TLS para garantir a seguran\u00e7a dos dados transmitidos pelos seus aplicativos.","title":"Recursos do ELB"},{"location":"projetos/1.ELB/#conclusao","text":"O Elastic Load Balancer \u00e9 um servi\u00e7o fundamental para garantir a disponibilidade, escalabilidade e confiabilidade de seus aplicativos. Com sua ampla gama de recursos e op\u00e7\u00f5es de configura\u00e7\u00e3o, o ELB \u00e9 uma excelente escolha para qualquer aplicativo que precise lidar com alto volume de tr\u00e1fego.","title":"Conclus\u00e3o"},{"location":"projetos/10.EKS/","text":"Servi\u00e7o AWS EKS \u00b6 O Amazon Elastic Kubernetes Service (EKS) \u00e9 um servi\u00e7o gerenciado que permite executar aplicativos em cont\u00eaineres Kubernetes na nuvem da AWS. Ele ajuda a implantar e gerenciar aplicativos em cont\u00eaineres com facilidade e seguran\u00e7a, usando um ambiente escal\u00e1vel e flex\u00edvel. Caracter\u00edsticas do AWS EKS \u00b6 Algumas das principais caracter\u00edsticas do AWS EKS s\u00e3o: Gerenciamento de cont\u00eaineres escal\u00e1vel : O EKS \u00e9 um servi\u00e7o altamente escal\u00e1vel que permite executar milhares de cont\u00eaineres Kubernetes em uma \u00fanica inst\u00e2ncia. Alta disponibilidade : O EKS \u00e9 projetado para oferecer alta disponibilidade, reduzindo a possibilidade de interrup\u00e7\u00f5es de servi\u00e7o. Integra\u00e7\u00e3o com outros servi\u00e7os da AWS : O EKS \u00e9 integrado com outros servi\u00e7os da AWS, como o Elastic Load Balancer, o Amazon S3 e o Amazon VPC. Suporte a v\u00e1rios tipos de cont\u00eaineres : O EKS oferece suporte a v\u00e1rios tipos de cont\u00eaineres, incluindo Docker e containerd. Integra\u00e7\u00e3o com o AWS Fargate : O EKS \u00e9 integrado com o AWS Fargate, o que permite executar cont\u00eaineres sem precisar gerenciar inst\u00e2ncias EC2. Como funciona o AWS EKS \u00b6 O AWS EKS \u00e9 composto de v\u00e1rios componentes, incluindo clusters, worker nodes e servi\u00e7os Kubernetes. O EKS usa o Amazon EC2 ou o AWS Fargate para executar worker nodes que executam os cont\u00eaineres Kubernetes. Para usar o AWS EKS, siga estes passos simples: Crie um cluster : Crie um cluster EKS para executar seus aplicativos em cont\u00eaineres Kubernetes. Os clusters s\u00e3o criados usando o console do EKS ou a API do EKS. Crie worker nodes : Crie um ou mais worker nodes que executem os cont\u00eaineres Kubernetes. Implante aplicativos : Implantar aplicativos em cont\u00eaineres Kubernetes no cluster EKS usando servi\u00e7os Kubernetes. Gerencie os servi\u00e7os : Gerencie os servi\u00e7os implantados para garantir que eles estejam sempre em execu\u00e7\u00e3o e dispon\u00edveis. Conclus\u00e3o \u00b6 O Amazon Elastic Kubernetes Service (EKS) \u00e9 uma plataforma eficiente para executar e gerenciar aplicativos em cont\u00eaineres Kubernetes na nuvem da AWS. Com sua alta escalabilidade e flexibilidade, o EKS \u00e9 uma solu\u00e7\u00e3o ideal para empresas que buscam uma forma segura e confi\u00e1vel de executar aplicativos em cont\u00eaineres Kubernetes. Ao integrar-se com outros servi\u00e7os da AWS, como o Elastic Load Balancer, o Amazon S3 e o Amazon VPC, o EKS permite que voc\u00ea crie uma infraestrutura de aplicativos em cont\u00eaineres Kubernetes altamente personalizada que atenda \u00e0s suas necessidades espec\u00edficas. Al\u00e9m disso, a integra\u00e7\u00e3o com o AWS Fargate torna o EKS ainda mais flex\u00edvel, permitindo que voc\u00ea execute cont\u00eaineres sem precisar gerenciar inst\u00e2ncias EC2.","title":"10. EKS"},{"location":"projetos/10.EKS/#servico-aws-eks","text":"O Amazon Elastic Kubernetes Service (EKS) \u00e9 um servi\u00e7o gerenciado que permite executar aplicativos em cont\u00eaineres Kubernetes na nuvem da AWS. Ele ajuda a implantar e gerenciar aplicativos em cont\u00eaineres com facilidade e seguran\u00e7a, usando um ambiente escal\u00e1vel e flex\u00edvel.","title":"Servi\u00e7o AWS EKS"},{"location":"projetos/10.EKS/#caracteristicas-do-aws-eks","text":"Algumas das principais caracter\u00edsticas do AWS EKS s\u00e3o: Gerenciamento de cont\u00eaineres escal\u00e1vel : O EKS \u00e9 um servi\u00e7o altamente escal\u00e1vel que permite executar milhares de cont\u00eaineres Kubernetes em uma \u00fanica inst\u00e2ncia. Alta disponibilidade : O EKS \u00e9 projetado para oferecer alta disponibilidade, reduzindo a possibilidade de interrup\u00e7\u00f5es de servi\u00e7o. Integra\u00e7\u00e3o com outros servi\u00e7os da AWS : O EKS \u00e9 integrado com outros servi\u00e7os da AWS, como o Elastic Load Balancer, o Amazon S3 e o Amazon VPC. Suporte a v\u00e1rios tipos de cont\u00eaineres : O EKS oferece suporte a v\u00e1rios tipos de cont\u00eaineres, incluindo Docker e containerd. Integra\u00e7\u00e3o com o AWS Fargate : O EKS \u00e9 integrado com o AWS Fargate, o que permite executar cont\u00eaineres sem precisar gerenciar inst\u00e2ncias EC2.","title":"Caracter\u00edsticas do AWS EKS"},{"location":"projetos/10.EKS/#como-funciona-o-aws-eks","text":"O AWS EKS \u00e9 composto de v\u00e1rios componentes, incluindo clusters, worker nodes e servi\u00e7os Kubernetes. O EKS usa o Amazon EC2 ou o AWS Fargate para executar worker nodes que executam os cont\u00eaineres Kubernetes. Para usar o AWS EKS, siga estes passos simples: Crie um cluster : Crie um cluster EKS para executar seus aplicativos em cont\u00eaineres Kubernetes. Os clusters s\u00e3o criados usando o console do EKS ou a API do EKS. Crie worker nodes : Crie um ou mais worker nodes que executem os cont\u00eaineres Kubernetes. Implante aplicativos : Implantar aplicativos em cont\u00eaineres Kubernetes no cluster EKS usando servi\u00e7os Kubernetes. Gerencie os servi\u00e7os : Gerencie os servi\u00e7os implantados para garantir que eles estejam sempre em execu\u00e7\u00e3o e dispon\u00edveis.","title":"Como funciona o AWS EKS"},{"location":"projetos/10.EKS/#conclusao","text":"O Amazon Elastic Kubernetes Service (EKS) \u00e9 uma plataforma eficiente para executar e gerenciar aplicativos em cont\u00eaineres Kubernetes na nuvem da AWS. Com sua alta escalabilidade e flexibilidade, o EKS \u00e9 uma solu\u00e7\u00e3o ideal para empresas que buscam uma forma segura e confi\u00e1vel de executar aplicativos em cont\u00eaineres Kubernetes. Ao integrar-se com outros servi\u00e7os da AWS, como o Elastic Load Balancer, o Amazon S3 e o Amazon VPC, o EKS permite que voc\u00ea crie uma infraestrutura de aplicativos em cont\u00eaineres Kubernetes altamente personalizada que atenda \u00e0s suas necessidades espec\u00edficas. Al\u00e9m disso, a integra\u00e7\u00e3o com o AWS Fargate torna o EKS ainda mais flex\u00edvel, permitindo que voc\u00ea execute cont\u00eaineres sem precisar gerenciar inst\u00e2ncias EC2.","title":"Conclus\u00e3o"},{"location":"projetos/11.KMS/","text":"AWS KMS \u00b6 O AWS Key Management Service (KMS) \u00e9 um servi\u00e7o gerenciado que ajuda a criar e controlar o acesso a chaves criptogr\u00e1ficas para proteger dados confidenciais na nuvem da AWS. Com o KMS, \u00e9 poss\u00edvel gerenciar suas pr\u00f3prias chaves criptogr\u00e1ficas e controlar quem pode us\u00e1-las. Caracter\u00edsticas do AWS KMS \u00b6 Algumas das principais caracter\u00edsticas do AWS KMS s\u00e3o: Gerenciamento de chaves criptogr\u00e1ficas : O KMS permite criar, gerenciar e usar suas pr\u00f3prias chaves criptogr\u00e1ficas, al\u00e9m de oferecer integra\u00e7\u00e3o com outras ferramentas da AWS. Seguran\u00e7a de dados : O KMS ajuda a proteger seus dados confidenciais por meio do uso de criptografia avan\u00e7ada e controles de acesso granulares. Conformidade com regulamenta\u00e7\u00f5es : O KMS \u00e9 compat\u00edvel com uma variedade de regulamenta\u00e7\u00f5es de seguran\u00e7a, como PCI DSS, HIPAA, FedRAMP e outras. Integra\u00e7\u00e3o com outros servi\u00e7os da AWS : O KMS \u00e9 integrado com outros servi\u00e7os da AWS, como o Amazon S3, o Amazon EBS e o Amazon Redshift. Controles de acesso granulares : O KMS oferece controle de acesso granular para suas chaves criptogr\u00e1ficas, permitindo que voc\u00ea gerencie quem pode us\u00e1-las e como elas s\u00e3o usadas. Como funciona o AWS KMS \u00b6 O AWS KMS funciona atrav\u00e9s da cria\u00e7\u00e3o, gerenciamento e uso de chaves criptogr\u00e1ficas. Para usar o KMS, siga estes passos: Crie uma chave criptogr\u00e1fica : Crie uma chave criptogr\u00e1fica no console do KMS ou usando a API do KMS. \u00c9 poss\u00edvel criar chaves sim\u00e9tricas ou assim\u00e9tricas. Configure permiss\u00f5es de chave : Configure permiss\u00f5es de chave para controlar quem pode usar a chave criptogr\u00e1fica e como ela pode ser usada. Criptografe e descriptografe dados : Use a chave criptogr\u00e1fica para criptografar e descriptografar dados. Rotacione as chaves criptogr\u00e1ficas : Rotacione as chaves criptogr\u00e1ficas regularmente para garantir a seguran\u00e7a dos dados. Conclus\u00e3o \u00b6 O AWS Key Management Service (KMS) \u00e9 uma solu\u00e7\u00e3o eficiente para gerenciar chaves criptogr\u00e1ficas na nuvem da AWS. Com sua seguran\u00e7a avan\u00e7ada e controle de acesso granular, o KMS ajuda a proteger seus dados confidenciais contra amea\u00e7as de seguran\u00e7a. Ao integrar-se com outros servi\u00e7os da AWS, como o Amazon S3, o Amazon EBS e o Amazon Redshift, o KMS permite que voc\u00ea proteja seus dados em tr\u00e2nsito e em repouso, garantindo a conformidade com regulamenta\u00e7\u00f5es de seguran\u00e7a. Se voc\u00ea precisa de uma solu\u00e7\u00e3o robusta de gerenciamento de chaves criptogr\u00e1ficas, o AWS KMS \u00e9 uma excelente escolha.","title":"11. KMS"},{"location":"projetos/11.KMS/#aws-kms","text":"O AWS Key Management Service (KMS) \u00e9 um servi\u00e7o gerenciado que ajuda a criar e controlar o acesso a chaves criptogr\u00e1ficas para proteger dados confidenciais na nuvem da AWS. Com o KMS, \u00e9 poss\u00edvel gerenciar suas pr\u00f3prias chaves criptogr\u00e1ficas e controlar quem pode us\u00e1-las.","title":"AWS KMS"},{"location":"projetos/11.KMS/#caracteristicas-do-aws-kms","text":"Algumas das principais caracter\u00edsticas do AWS KMS s\u00e3o: Gerenciamento de chaves criptogr\u00e1ficas : O KMS permite criar, gerenciar e usar suas pr\u00f3prias chaves criptogr\u00e1ficas, al\u00e9m de oferecer integra\u00e7\u00e3o com outras ferramentas da AWS. Seguran\u00e7a de dados : O KMS ajuda a proteger seus dados confidenciais por meio do uso de criptografia avan\u00e7ada e controles de acesso granulares. Conformidade com regulamenta\u00e7\u00f5es : O KMS \u00e9 compat\u00edvel com uma variedade de regulamenta\u00e7\u00f5es de seguran\u00e7a, como PCI DSS, HIPAA, FedRAMP e outras. Integra\u00e7\u00e3o com outros servi\u00e7os da AWS : O KMS \u00e9 integrado com outros servi\u00e7os da AWS, como o Amazon S3, o Amazon EBS e o Amazon Redshift. Controles de acesso granulares : O KMS oferece controle de acesso granular para suas chaves criptogr\u00e1ficas, permitindo que voc\u00ea gerencie quem pode us\u00e1-las e como elas s\u00e3o usadas.","title":"Caracter\u00edsticas do AWS KMS"},{"location":"projetos/11.KMS/#como-funciona-o-aws-kms","text":"O AWS KMS funciona atrav\u00e9s da cria\u00e7\u00e3o, gerenciamento e uso de chaves criptogr\u00e1ficas. Para usar o KMS, siga estes passos: Crie uma chave criptogr\u00e1fica : Crie uma chave criptogr\u00e1fica no console do KMS ou usando a API do KMS. \u00c9 poss\u00edvel criar chaves sim\u00e9tricas ou assim\u00e9tricas. Configure permiss\u00f5es de chave : Configure permiss\u00f5es de chave para controlar quem pode usar a chave criptogr\u00e1fica e como ela pode ser usada. Criptografe e descriptografe dados : Use a chave criptogr\u00e1fica para criptografar e descriptografar dados. Rotacione as chaves criptogr\u00e1ficas : Rotacione as chaves criptogr\u00e1ficas regularmente para garantir a seguran\u00e7a dos dados.","title":"Como funciona o AWS KMS"},{"location":"projetos/11.KMS/#conclusao","text":"O AWS Key Management Service (KMS) \u00e9 uma solu\u00e7\u00e3o eficiente para gerenciar chaves criptogr\u00e1ficas na nuvem da AWS. Com sua seguran\u00e7a avan\u00e7ada e controle de acesso granular, o KMS ajuda a proteger seus dados confidenciais contra amea\u00e7as de seguran\u00e7a. Ao integrar-se com outros servi\u00e7os da AWS, como o Amazon S3, o Amazon EBS e o Amazon Redshift, o KMS permite que voc\u00ea proteja seus dados em tr\u00e2nsito e em repouso, garantindo a conformidade com regulamenta\u00e7\u00f5es de seguran\u00e7a. Se voc\u00ea precisa de uma solu\u00e7\u00e3o robusta de gerenciamento de chaves criptogr\u00e1ficas, o AWS KMS \u00e9 uma excelente escolha.","title":"Conclus\u00e3o"},{"location":"projetos/12.Lambda/","text":"AWS Lambda \u00b6 AWS Lambda \u00e9 um servi\u00e7o de computa\u00e7\u00e3o sem servidor oferecido pela Amazon Web Services (AWS) que executa c\u00f3digo em resposta a eventos e gerencia automaticamente os recursos necess\u00e1rios para executar esse c\u00f3digo. Como funciona \u00b6 Com o AWS Lambda, voc\u00ea pode escrever e carregar seu pr\u00f3prio c\u00f3digo em uma variedade de linguagens de programa\u00e7\u00e3o suportadas pela AWS, como Python, Node.js, Java, C# e Go. Em seguida, voc\u00ea pode criar fun\u00e7\u00f5es que s\u00e3o acionadas por eventos, como altera\u00e7\u00f5es em dados armazenados no Amazon S3, novas mensagens em um t\u00f3pico do Amazon SNS ou novos registros em um stream do Amazon Kinesis. Quando uma fun\u00e7\u00e3o \u00e9 acionada, o servi\u00e7o AWS Lambda cria um cont\u00eainer ef\u00eamero, carrega o c\u00f3digo da fun\u00e7\u00e3o e executa o c\u00f3digo em resposta ao evento. Quando a fun\u00e7\u00e3o \u00e9 conclu\u00edda, o cont\u00eainer \u00e9 desativado e seus recursos s\u00e3o liberados. Benef\u00edcios \u00b6 Escala autom\u00e1tica : O AWS Lambda escala automaticamente a capacidade de execu\u00e7\u00e3o de suas fun\u00e7\u00f5es com base na frequ\u00eancia dos eventos que acionam suas fun\u00e7\u00f5es. N\u00e3o \u00e9 necess\u00e1rio gerenciar a capacidade de execu\u00e7\u00e3o manualmente. Pagamento por uso : Voc\u00ea paga apenas pelo tempo de execu\u00e7\u00e3o da sua fun\u00e7\u00e3o, sem taxas m\u00ednimas ou compromissos de longo prazo. Conectividade com outros servi\u00e7os AWS : O AWS Lambda pode ser facilmente conectado a outros servi\u00e7os da AWS, como Amazon S3, Amazon DynamoDB, Amazon Kinesis e Amazon SNS, permitindo que voc\u00ea crie aplicativos altamente escal\u00e1veis e integrados. Integra\u00e7\u00e3o com ferramentas de desenvolvimento : O AWS Lambda \u00e9 facilmente integrado com ferramentas de desenvolvimento populares, como o AWS Toolkit for Visual Studio, o AWS Toolkit para JetBrains, o AWS CLI e o AWS CloudFormation. Limita\u00e7\u00f5es \u00b6 Tempo limite de execu\u00e7\u00e3o : Cada execu\u00e7\u00e3o da fun\u00e7\u00e3o do Lambda tem um tempo m\u00e1ximo de dura\u00e7\u00e3o de 900 segundos (15 minutos). Restri\u00e7\u00f5es de tamanho do pacote : O tamanho m\u00e1ximo do pacote de c\u00f3digo da fun\u00e7\u00e3o \u00e9 de 50 MB, incluindo todas as depend\u00eancias. Limites de recursos : O AWS Lambda tem limites de recursos, como o n\u00famero m\u00e1ximo de cont\u00eaineres em execu\u00e7\u00e3o, a quantidade m\u00e1xima de mem\u00f3ria alocada por fun\u00e7\u00e3o e o n\u00famero m\u00e1ximo de solicita\u00e7\u00f5es simult\u00e2neas por fun\u00e7\u00e3o. Exemplo de c\u00f3digo \u00b6 Aqui est\u00e1 um exemplo simples de uma fun\u00e7\u00e3o do AWS Lambda escrita em Python que responde a eventos do Amazon S3: import json import boto3 def lambda_handler ( event , context ): # Obt\u00e9m o nome do bucket S3 e a chave do objeto que acionou o evento bucket = event [ 'Records' ][ 0 ][ 's3' ][ 'bucket' ][ 'name' ] key = event [ 'Records' ][ 0 ][ 's3' ][ 'object' ][ 'key' ] # Obt\u00e9m o objeto S3 s3 = boto3 . resource ( 's3' ) obj = s3 . Object ( bucket , key ) # L\u00ea o conte\u00fado do objeto body = obj . get ()[ 'Body' ] . read () # Imprime o conte\u00fado do objeto print ( \"Conte\u00fado do objeto:\" ) print ( body . decode ( 'utf-8' )) # Retorna uma resposta return { 'statusCode' : 200 , 'body' : json . dumps ( 'Hello from Cloudinho Nuvem!' ) } Conclus\u00e3o \u00b6 O AWS Lambda \u00e9 uma solu\u00e7\u00e3o sem servidor poderosa para criar aplicativos escal\u00e1veis e altamente integrados na AWS. Ele oferece escala autom\u00e1tica, pagamento por uso, conectividade com outros servi\u00e7os da AWS e integra\u00e7\u00e3o com ferramentas de desenvolvimento populares. No entanto, ele tamb\u00e9m tem algumas limita\u00e7\u00f5es, como tempo m\u00e1ximo de execu\u00e7\u00e3o, restri\u00e7\u00f5es de tamanho de pacote e limites de recursos. Em resumo, o AWS Lambda \u00e9 uma ferramenta poderosa para desenvolvedores que procuram criar aplicativos escal\u00e1veis sem se preocupar com a infraestrutura subjacente. Com sua facilidade de uso e integra\u00e7\u00e3o com outras ferramentas da AWS, o Lambda permite que os desenvolvedores se concentrem na l\u00f3gica de neg\u00f3cios em vez de gerenciar a infraestrutura. Se voc\u00ea ainda n\u00e3o experimentou o AWS Lambda, vale a pena dar uma olhada e descobrir como ele pode ajudar a impulsionar seus aplicativos na nuvem.","title":"12. AWS Lambda"},{"location":"projetos/12.Lambda/#aws-lambda","text":"AWS Lambda \u00e9 um servi\u00e7o de computa\u00e7\u00e3o sem servidor oferecido pela Amazon Web Services (AWS) que executa c\u00f3digo em resposta a eventos e gerencia automaticamente os recursos necess\u00e1rios para executar esse c\u00f3digo.","title":"AWS Lambda"},{"location":"projetos/12.Lambda/#como-funciona","text":"Com o AWS Lambda, voc\u00ea pode escrever e carregar seu pr\u00f3prio c\u00f3digo em uma variedade de linguagens de programa\u00e7\u00e3o suportadas pela AWS, como Python, Node.js, Java, C# e Go. Em seguida, voc\u00ea pode criar fun\u00e7\u00f5es que s\u00e3o acionadas por eventos, como altera\u00e7\u00f5es em dados armazenados no Amazon S3, novas mensagens em um t\u00f3pico do Amazon SNS ou novos registros em um stream do Amazon Kinesis. Quando uma fun\u00e7\u00e3o \u00e9 acionada, o servi\u00e7o AWS Lambda cria um cont\u00eainer ef\u00eamero, carrega o c\u00f3digo da fun\u00e7\u00e3o e executa o c\u00f3digo em resposta ao evento. Quando a fun\u00e7\u00e3o \u00e9 conclu\u00edda, o cont\u00eainer \u00e9 desativado e seus recursos s\u00e3o liberados.","title":"Como funciona"},{"location":"projetos/12.Lambda/#beneficios","text":"Escala autom\u00e1tica : O AWS Lambda escala automaticamente a capacidade de execu\u00e7\u00e3o de suas fun\u00e7\u00f5es com base na frequ\u00eancia dos eventos que acionam suas fun\u00e7\u00f5es. N\u00e3o \u00e9 necess\u00e1rio gerenciar a capacidade de execu\u00e7\u00e3o manualmente. Pagamento por uso : Voc\u00ea paga apenas pelo tempo de execu\u00e7\u00e3o da sua fun\u00e7\u00e3o, sem taxas m\u00ednimas ou compromissos de longo prazo. Conectividade com outros servi\u00e7os AWS : O AWS Lambda pode ser facilmente conectado a outros servi\u00e7os da AWS, como Amazon S3, Amazon DynamoDB, Amazon Kinesis e Amazon SNS, permitindo que voc\u00ea crie aplicativos altamente escal\u00e1veis e integrados. Integra\u00e7\u00e3o com ferramentas de desenvolvimento : O AWS Lambda \u00e9 facilmente integrado com ferramentas de desenvolvimento populares, como o AWS Toolkit for Visual Studio, o AWS Toolkit para JetBrains, o AWS CLI e o AWS CloudFormation.","title":"Benef\u00edcios"},{"location":"projetos/12.Lambda/#limitacoes","text":"Tempo limite de execu\u00e7\u00e3o : Cada execu\u00e7\u00e3o da fun\u00e7\u00e3o do Lambda tem um tempo m\u00e1ximo de dura\u00e7\u00e3o de 900 segundos (15 minutos). Restri\u00e7\u00f5es de tamanho do pacote : O tamanho m\u00e1ximo do pacote de c\u00f3digo da fun\u00e7\u00e3o \u00e9 de 50 MB, incluindo todas as depend\u00eancias. Limites de recursos : O AWS Lambda tem limites de recursos, como o n\u00famero m\u00e1ximo de cont\u00eaineres em execu\u00e7\u00e3o, a quantidade m\u00e1xima de mem\u00f3ria alocada por fun\u00e7\u00e3o e o n\u00famero m\u00e1ximo de solicita\u00e7\u00f5es simult\u00e2neas por fun\u00e7\u00e3o.","title":"Limita\u00e7\u00f5es"},{"location":"projetos/12.Lambda/#exemplo-de-codigo","text":"Aqui est\u00e1 um exemplo simples de uma fun\u00e7\u00e3o do AWS Lambda escrita em Python que responde a eventos do Amazon S3: import json import boto3 def lambda_handler ( event , context ): # Obt\u00e9m o nome do bucket S3 e a chave do objeto que acionou o evento bucket = event [ 'Records' ][ 0 ][ 's3' ][ 'bucket' ][ 'name' ] key = event [ 'Records' ][ 0 ][ 's3' ][ 'object' ][ 'key' ] # Obt\u00e9m o objeto S3 s3 = boto3 . resource ( 's3' ) obj = s3 . Object ( bucket , key ) # L\u00ea o conte\u00fado do objeto body = obj . get ()[ 'Body' ] . read () # Imprime o conte\u00fado do objeto print ( \"Conte\u00fado do objeto:\" ) print ( body . decode ( 'utf-8' )) # Retorna uma resposta return { 'statusCode' : 200 , 'body' : json . dumps ( 'Hello from Cloudinho Nuvem!' ) }","title":"Exemplo de c\u00f3digo"},{"location":"projetos/12.Lambda/#conclusao","text":"O AWS Lambda \u00e9 uma solu\u00e7\u00e3o sem servidor poderosa para criar aplicativos escal\u00e1veis e altamente integrados na AWS. Ele oferece escala autom\u00e1tica, pagamento por uso, conectividade com outros servi\u00e7os da AWS e integra\u00e7\u00e3o com ferramentas de desenvolvimento populares. No entanto, ele tamb\u00e9m tem algumas limita\u00e7\u00f5es, como tempo m\u00e1ximo de execu\u00e7\u00e3o, restri\u00e7\u00f5es de tamanho de pacote e limites de recursos. Em resumo, o AWS Lambda \u00e9 uma ferramenta poderosa para desenvolvedores que procuram criar aplicativos escal\u00e1veis sem se preocupar com a infraestrutura subjacente. Com sua facilidade de uso e integra\u00e7\u00e3o com outras ferramentas da AWS, o Lambda permite que os desenvolvedores se concentrem na l\u00f3gica de neg\u00f3cios em vez de gerenciar a infraestrutura. Se voc\u00ea ainda n\u00e3o experimentou o AWS Lambda, vale a pena dar uma olhada e descobrir como ele pode ajudar a impulsionar seus aplicativos na nuvem.","title":"Conclus\u00e3o"},{"location":"projetos/13.Fargate/","text":"AWS Fargate \u00b6 O AWS Fargate \u00e9 um servi\u00e7o de computa\u00e7\u00e3o sem servidor para cont\u00eaineres que permite executar cont\u00eaineres do Docker no Amazon Elastic Container Service (ECS) e no Amazon Elastic Kubernetes Service (EKS) sem a necessidade de gerenciar a infraestrutura subjacente. Como funciona \u00b6 Com o AWS Fargate, voc\u00ea pode executar cont\u00eaineres do Docker em um ambiente completamente gerenciado. Voc\u00ea s\u00f3 precisa criar um cluster do ECS ou do EKS, definir suas tarefas de cont\u00eainer e o Fargate gerenciar\u00e1 a infraestrutura subjacente necess\u00e1ria para executar essas tarefas. Isso inclui recursos como inst\u00e2ncias do Amazon EC2, escalabilidade, patching de seguran\u00e7a e muito mais. Benef\u00edcios \u00b6 Sem infraestrutura para gerenciar : O AWS Fargate gerencia toda a infraestrutura necess\u00e1ria para executar suas tarefas de cont\u00eainer, permitindo que voc\u00ea se concentre em desenvolver seu aplicativo. Escala autom\u00e1tica : O Fargate escalona automaticamente seus cont\u00eaineres com base na demanda do aplicativo. Seguran\u00e7a : O Fargate usa inst\u00e2ncias EC2 dedicadas e isoladas para executar suas tarefas de cont\u00eainer, garantindo um alto n\u00edvel de seguran\u00e7a. Flexibilidade : O Fargate \u00e9 compat\u00edvel com todas as ferramentas e servi\u00e7os do ecossistema do Docker, permitindo que voc\u00ea use suas ferramentas e configura\u00e7\u00f5es favoritas para criar e implantar cont\u00eaineres. Limita\u00e7\u00f5es \u00b6 Limita\u00e7\u00f5es de tamanho do cont\u00eainer : O tamanho m\u00e1ximo do cont\u00eainer \u00e9 de 4 GB. Restri\u00e7\u00f5es de recursos : O AWS Fargate tem limites de recursos, como a quantidade m\u00e1xima de vCPUs e mem\u00f3ria alocados por tarefa de cont\u00eainer. Exemplo de uso \u00b6 Aqui est\u00e1 um exemplo simples de como executar um cont\u00eainer do Docker usando o AWS Fargate no Amazon ECS: Crie um cluster do Amazon ECS. Defina sua tarefa de cont\u00eainer, que inclui informa\u00e7\u00f5es sobre a imagem do cont\u00eainer, a porta exposta e outras configura\u00e7\u00f5es. Crie um servi\u00e7o do ECS que usa o Fargate como plataforma de computa\u00e7\u00e3o. version : \"3\" services : myapp : image : mydockerimage ports : - \"80:80\" logging : driver : awslogs options : awslogs-group : \"my-logs-group\" awslogs-region : \"us-east-1\" cpu : 256 memory : 512 network_mode : awsvpc execution_role_arn : arn:aws:iam::25072000:role/ecsTaskExecutionRole Inicie o servi\u00e7o e o Fargate gerenciar\u00e1 a execu\u00e7\u00e3o dos cont\u00eaineres para voc\u00ea. Conclus\u00e3o \u00b6 O AWS Fargate \u00e9 uma solu\u00e7\u00e3o ideal para desenvolvedores que desejam executar cont\u00eaineres do Docker sem ter que gerenciar a infraestrutura subjacente. Ele oferece escalabilidade autom\u00e1tica, seguran\u00e7a e compatibilidade com todas as ferramentas e servi\u00e7os do ecossistema do Docker. No entanto, ele tamb\u00e9m tem algumas limita\u00e7\u00f5es, como tamanho m\u00e1ximo do cont\u00eainer e limites de recursos. Em resumo, o AWS Fargate \u00e9 uma ferramenta poderosa para desenvolvedores que procuram uma maneira simples e f\u00e1cil de executar cont\u00eaineres do Docker sem ter que lidar com a infraestrutura. Com sua escalabilidade autom\u00e1tica, gerenciamento de seguran\u00e7a e compatibilidade com o ecossistema do Docker, o Fargate \u00e9 uma solu\u00e7\u00e3o atraente para equipes de desenvolvimento que buscam aumentar a efici\u00eancia e a produtividade. Se voc\u00ea ainda n\u00e3o experimentou o AWS Fargate, vale a pena dar uma olhada e descobrir como ele pode ajudar a impulsionar seus aplicativos na nuvem.","title":"13. AWS Fargate"},{"location":"projetos/13.Fargate/#aws-fargate","text":"O AWS Fargate \u00e9 um servi\u00e7o de computa\u00e7\u00e3o sem servidor para cont\u00eaineres que permite executar cont\u00eaineres do Docker no Amazon Elastic Container Service (ECS) e no Amazon Elastic Kubernetes Service (EKS) sem a necessidade de gerenciar a infraestrutura subjacente.","title":"AWS Fargate"},{"location":"projetos/13.Fargate/#como-funciona","text":"Com o AWS Fargate, voc\u00ea pode executar cont\u00eaineres do Docker em um ambiente completamente gerenciado. Voc\u00ea s\u00f3 precisa criar um cluster do ECS ou do EKS, definir suas tarefas de cont\u00eainer e o Fargate gerenciar\u00e1 a infraestrutura subjacente necess\u00e1ria para executar essas tarefas. Isso inclui recursos como inst\u00e2ncias do Amazon EC2, escalabilidade, patching de seguran\u00e7a e muito mais.","title":"Como funciona"},{"location":"projetos/13.Fargate/#beneficios","text":"Sem infraestrutura para gerenciar : O AWS Fargate gerencia toda a infraestrutura necess\u00e1ria para executar suas tarefas de cont\u00eainer, permitindo que voc\u00ea se concentre em desenvolver seu aplicativo. Escala autom\u00e1tica : O Fargate escalona automaticamente seus cont\u00eaineres com base na demanda do aplicativo. Seguran\u00e7a : O Fargate usa inst\u00e2ncias EC2 dedicadas e isoladas para executar suas tarefas de cont\u00eainer, garantindo um alto n\u00edvel de seguran\u00e7a. Flexibilidade : O Fargate \u00e9 compat\u00edvel com todas as ferramentas e servi\u00e7os do ecossistema do Docker, permitindo que voc\u00ea use suas ferramentas e configura\u00e7\u00f5es favoritas para criar e implantar cont\u00eaineres.","title":"Benef\u00edcios"},{"location":"projetos/13.Fargate/#limitacoes","text":"Limita\u00e7\u00f5es de tamanho do cont\u00eainer : O tamanho m\u00e1ximo do cont\u00eainer \u00e9 de 4 GB. Restri\u00e7\u00f5es de recursos : O AWS Fargate tem limites de recursos, como a quantidade m\u00e1xima de vCPUs e mem\u00f3ria alocados por tarefa de cont\u00eainer.","title":"Limita\u00e7\u00f5es"},{"location":"projetos/13.Fargate/#exemplo-de-uso","text":"Aqui est\u00e1 um exemplo simples de como executar um cont\u00eainer do Docker usando o AWS Fargate no Amazon ECS: Crie um cluster do Amazon ECS. Defina sua tarefa de cont\u00eainer, que inclui informa\u00e7\u00f5es sobre a imagem do cont\u00eainer, a porta exposta e outras configura\u00e7\u00f5es. Crie um servi\u00e7o do ECS que usa o Fargate como plataforma de computa\u00e7\u00e3o. version : \"3\" services : myapp : image : mydockerimage ports : - \"80:80\" logging : driver : awslogs options : awslogs-group : \"my-logs-group\" awslogs-region : \"us-east-1\" cpu : 256 memory : 512 network_mode : awsvpc execution_role_arn : arn:aws:iam::25072000:role/ecsTaskExecutionRole Inicie o servi\u00e7o e o Fargate gerenciar\u00e1 a execu\u00e7\u00e3o dos cont\u00eaineres para voc\u00ea.","title":"Exemplo de uso"},{"location":"projetos/13.Fargate/#conclusao","text":"O AWS Fargate \u00e9 uma solu\u00e7\u00e3o ideal para desenvolvedores que desejam executar cont\u00eaineres do Docker sem ter que gerenciar a infraestrutura subjacente. Ele oferece escalabilidade autom\u00e1tica, seguran\u00e7a e compatibilidade com todas as ferramentas e servi\u00e7os do ecossistema do Docker. No entanto, ele tamb\u00e9m tem algumas limita\u00e7\u00f5es, como tamanho m\u00e1ximo do cont\u00eainer e limites de recursos. Em resumo, o AWS Fargate \u00e9 uma ferramenta poderosa para desenvolvedores que procuram uma maneira simples e f\u00e1cil de executar cont\u00eaineres do Docker sem ter que lidar com a infraestrutura. Com sua escalabilidade autom\u00e1tica, gerenciamento de seguran\u00e7a e compatibilidade com o ecossistema do Docker, o Fargate \u00e9 uma solu\u00e7\u00e3o atraente para equipes de desenvolvimento que buscam aumentar a efici\u00eancia e a produtividade. Se voc\u00ea ainda n\u00e3o experimentou o AWS Fargate, vale a pena dar uma olhada e descobrir como ele pode ajudar a impulsionar seus aplicativos na nuvem.","title":"Conclus\u00e3o"},{"location":"projetos/14.S3/","text":"AWS S3 \u00b6 O Amazon Simple Storage Service (S3) \u00e9 um servi\u00e7o de armazenamento de objetos na nuvem projetado para armazenar e recuperar qualquer quantidade de dados de qualquer lugar da web. Como funciona \u00b6 Com o AWS S3, voc\u00ea pode armazenar e recuperar arquivos de qualquer tamanho de qualquer lugar do mundo. Voc\u00ea s\u00f3 precisa criar um bucket do S3, carregar seus arquivos e definir as configura\u00e7\u00f5es de permiss\u00f5es e seguran\u00e7a, e o S3 gerenciar\u00e1 o restante para voc\u00ea. O AWS S3 \u00e9 altamente escal\u00e1vel e dur\u00e1vel, com redund\u00e2ncia em v\u00e1rias zonas de disponibilidade. Benef\u00edcios \u00b6 Escalabilidade : O S3 \u00e9 altamente escal\u00e1vel e pode ser usado para armazenar qualquer quantidade de dados. Durabilidade : O S3 tem redund\u00e2ncia em v\u00e1rias zonas de disponibilidade, garantindo que seus dados estejam protegidos contra falhas de hardware. Seguran\u00e7a : O S3 oferece recursos de seguran\u00e7a avan\u00e7ados, como controle de acesso baseado em pol\u00edticas, criptografia e muito mais. Acessibilidade : O S3 pode ser acessado de qualquer lugar do mundo com uma conex\u00e3o \u00e0 Internet. Limita\u00e7\u00f5es \u00b6 Custo : O custo do armazenamento no S3 pode variar dependendo da quantidade de dados armazenados e dos acessos aos dados. Desempenho : O desempenho do S3 pode ser afetado por diversos fatores, como a regi\u00e3o em que o bucket est\u00e1 localizado e o tipo de acesso aos dados. Exemplo de uso \u00b6 Aqui est\u00e1 um exemplo simples de como usar o AWS S3: Crie um bucket do S3 na regi\u00e3o desejada. Carregue seus arquivos no bucket do S3. Defina as configura\u00e7\u00f5es de permiss\u00f5es e seguran\u00e7a para o bucket do S3. Acesse seus arquivos de qualquer lugar do mundo com uma conex\u00e3o \u00e0 Internet. Conclus\u00e3o \u00b6 O AWS S3 \u00e9 uma ferramenta essencial para empresas que precisam armazenar e recuperar grandes quantidades de dados de maneira segura e escal\u00e1vel. Com recursos de seguran\u00e7a avan\u00e7ados, escalabilidade e durabilidade, o S3 \u00e9 uma solu\u00e7\u00e3o atraente para empresas de todos os tamanhos. No entanto, \u00e9 importante estar ciente das limita\u00e7\u00f5es, como o custo e o desempenho, ao planejar o uso do S3. Se voc\u00ea ainda n\u00e3o experimentou o AWS S3, vale a pena dar uma olhada e descobrir como ele pode ajudar a impulsionar seus aplicativos na nuvem.","title":"14. AWS S3"},{"location":"projetos/14.S3/#aws-s3","text":"O Amazon Simple Storage Service (S3) \u00e9 um servi\u00e7o de armazenamento de objetos na nuvem projetado para armazenar e recuperar qualquer quantidade de dados de qualquer lugar da web.","title":"AWS S3"},{"location":"projetos/14.S3/#como-funciona","text":"Com o AWS S3, voc\u00ea pode armazenar e recuperar arquivos de qualquer tamanho de qualquer lugar do mundo. Voc\u00ea s\u00f3 precisa criar um bucket do S3, carregar seus arquivos e definir as configura\u00e7\u00f5es de permiss\u00f5es e seguran\u00e7a, e o S3 gerenciar\u00e1 o restante para voc\u00ea. O AWS S3 \u00e9 altamente escal\u00e1vel e dur\u00e1vel, com redund\u00e2ncia em v\u00e1rias zonas de disponibilidade.","title":"Como funciona"},{"location":"projetos/14.S3/#beneficios","text":"Escalabilidade : O S3 \u00e9 altamente escal\u00e1vel e pode ser usado para armazenar qualquer quantidade de dados. Durabilidade : O S3 tem redund\u00e2ncia em v\u00e1rias zonas de disponibilidade, garantindo que seus dados estejam protegidos contra falhas de hardware. Seguran\u00e7a : O S3 oferece recursos de seguran\u00e7a avan\u00e7ados, como controle de acesso baseado em pol\u00edticas, criptografia e muito mais. Acessibilidade : O S3 pode ser acessado de qualquer lugar do mundo com uma conex\u00e3o \u00e0 Internet.","title":"Benef\u00edcios"},{"location":"projetos/14.S3/#limitacoes","text":"Custo : O custo do armazenamento no S3 pode variar dependendo da quantidade de dados armazenados e dos acessos aos dados. Desempenho : O desempenho do S3 pode ser afetado por diversos fatores, como a regi\u00e3o em que o bucket est\u00e1 localizado e o tipo de acesso aos dados.","title":"Limita\u00e7\u00f5es"},{"location":"projetos/14.S3/#exemplo-de-uso","text":"Aqui est\u00e1 um exemplo simples de como usar o AWS S3: Crie um bucket do S3 na regi\u00e3o desejada. Carregue seus arquivos no bucket do S3. Defina as configura\u00e7\u00f5es de permiss\u00f5es e seguran\u00e7a para o bucket do S3. Acesse seus arquivos de qualquer lugar do mundo com uma conex\u00e3o \u00e0 Internet.","title":"Exemplo de uso"},{"location":"projetos/14.S3/#conclusao","text":"O AWS S3 \u00e9 uma ferramenta essencial para empresas que precisam armazenar e recuperar grandes quantidades de dados de maneira segura e escal\u00e1vel. Com recursos de seguran\u00e7a avan\u00e7ados, escalabilidade e durabilidade, o S3 \u00e9 uma solu\u00e7\u00e3o atraente para empresas de todos os tamanhos. No entanto, \u00e9 importante estar ciente das limita\u00e7\u00f5es, como o custo e o desempenho, ao planejar o uso do S3. Se voc\u00ea ainda n\u00e3o experimentou o AWS S3, vale a pena dar uma olhada e descobrir como ele pode ajudar a impulsionar seus aplicativos na nuvem.","title":"Conclus\u00e3o"},{"location":"projetos/15.CloudWatch/","text":"AWS CloudWatch \u00b6 O Amazon CloudWatch \u00e9 um servi\u00e7o de monitoramento e observabilidade da AWS que permite monitorar e coletar m\u00e9tricas, logs e eventos de seus recursos e aplicativos na nuvem. Com o CloudWatch, voc\u00ea pode monitorar e analisar o desempenho de seus aplicativos, identificar e solucionar problemas e garantir a conformidade e a seguran\u00e7a. Como funciona \u00b6 O CloudWatch coleta e armazena m\u00e9tricas, logs e eventos de seus recursos e aplicativos na nuvem, como inst\u00e2ncias do Amazon EC2, grupos de autoescalabilidade, aplicativos da web e muito mais. Voc\u00ea pode usar esses dados para monitorar o desempenho de seus aplicativos, identificar problemas e solucion\u00e1-los. O CloudWatch tamb\u00e9m pode ser usado para criar alarmes que disparam a\u00e7\u00f5es automatizadas em resposta a eventos espec\u00edficos. Benef\u00edcios \u00b6 Monitoramento : O CloudWatch permite monitorar e analisar o desempenho de seus aplicativos e recursos na nuvem. Identifica\u00e7\u00e3o de problemas : Com o CloudWatch, voc\u00ea pode identificar problemas e solucion\u00e1-los antes que afetem seus usu\u00e1rios. Conformidade e seguran\u00e7a : O CloudWatch permite monitorar a conformidade e a seguran\u00e7a de seus aplicativos e recursos na nuvem. Automa\u00e7\u00e3o : O CloudWatch permite criar alarmes que disparam a\u00e7\u00f5es automatizadas em resposta a eventos espec\u00edficos. Limita\u00e7\u00f5es \u00b6 Custo : O custo do CloudWatch pode variar dependendo da quantidade de m\u00e9tricas, logs e eventos coletados. Complexidade : O CloudWatch pode ser complexo de configurar e gerenciar, especialmente para aplicativos e recursos mais complexos. Exemplo de uso \u00b6 Aqui est\u00e1 um exemplo simples de como usar o CloudWatch: Crie um grupo de autoescalabilidade do Amazon EC2. Configure o CloudWatch para coletar m\u00e9tricas, logs e eventos do grupo de autoescalabilidade. Crie um painel do CloudWatch para monitorar as m\u00e9tricas coletadas. Crie um alarme no CloudWatch que dispara uma a\u00e7\u00e3o automatizada quando um evento espec\u00edfico ocorre. Conclus\u00e3o \u00b6 O Amazon CloudWatch \u00e9 uma ferramenta essencial para empresas que precisam monitorar e analisar o desempenho de seus aplicativos e recursos na nuvem. Com recursos avan\u00e7ados de monitoramento, identifica\u00e7\u00e3o de problemas, conformidade e seguran\u00e7a, o CloudWatch \u00e9 uma solu\u00e7\u00e3o atraente para empresas de todos os tamanhos. No entanto, \u00e9 importante estar ciente das limita\u00e7\u00f5es, como o custo e a complexidade, ao planejar o uso do CloudWatch. Se voc\u00ea ainda n\u00e3o experimentou o Amazon CloudWatch, vale a pena dar uma olhada e descobrir como ele pode ajudar a impulsionar seus aplicativos na nuvem.","title":"15. AWS CloudWatch"},{"location":"projetos/15.CloudWatch/#aws-cloudwatch","text":"O Amazon CloudWatch \u00e9 um servi\u00e7o de monitoramento e observabilidade da AWS que permite monitorar e coletar m\u00e9tricas, logs e eventos de seus recursos e aplicativos na nuvem. Com o CloudWatch, voc\u00ea pode monitorar e analisar o desempenho de seus aplicativos, identificar e solucionar problemas e garantir a conformidade e a seguran\u00e7a.","title":"AWS CloudWatch"},{"location":"projetos/15.CloudWatch/#como-funciona","text":"O CloudWatch coleta e armazena m\u00e9tricas, logs e eventos de seus recursos e aplicativos na nuvem, como inst\u00e2ncias do Amazon EC2, grupos de autoescalabilidade, aplicativos da web e muito mais. Voc\u00ea pode usar esses dados para monitorar o desempenho de seus aplicativos, identificar problemas e solucion\u00e1-los. O CloudWatch tamb\u00e9m pode ser usado para criar alarmes que disparam a\u00e7\u00f5es automatizadas em resposta a eventos espec\u00edficos.","title":"Como funciona"},{"location":"projetos/15.CloudWatch/#beneficios","text":"Monitoramento : O CloudWatch permite monitorar e analisar o desempenho de seus aplicativos e recursos na nuvem. Identifica\u00e7\u00e3o de problemas : Com o CloudWatch, voc\u00ea pode identificar problemas e solucion\u00e1-los antes que afetem seus usu\u00e1rios. Conformidade e seguran\u00e7a : O CloudWatch permite monitorar a conformidade e a seguran\u00e7a de seus aplicativos e recursos na nuvem. Automa\u00e7\u00e3o : O CloudWatch permite criar alarmes que disparam a\u00e7\u00f5es automatizadas em resposta a eventos espec\u00edficos.","title":"Benef\u00edcios"},{"location":"projetos/15.CloudWatch/#limitacoes","text":"Custo : O custo do CloudWatch pode variar dependendo da quantidade de m\u00e9tricas, logs e eventos coletados. Complexidade : O CloudWatch pode ser complexo de configurar e gerenciar, especialmente para aplicativos e recursos mais complexos.","title":"Limita\u00e7\u00f5es"},{"location":"projetos/15.CloudWatch/#exemplo-de-uso","text":"Aqui est\u00e1 um exemplo simples de como usar o CloudWatch: Crie um grupo de autoescalabilidade do Amazon EC2. Configure o CloudWatch para coletar m\u00e9tricas, logs e eventos do grupo de autoescalabilidade. Crie um painel do CloudWatch para monitorar as m\u00e9tricas coletadas. Crie um alarme no CloudWatch que dispara uma a\u00e7\u00e3o automatizada quando um evento espec\u00edfico ocorre.","title":"Exemplo de uso"},{"location":"projetos/15.CloudWatch/#conclusao","text":"O Amazon CloudWatch \u00e9 uma ferramenta essencial para empresas que precisam monitorar e analisar o desempenho de seus aplicativos e recursos na nuvem. Com recursos avan\u00e7ados de monitoramento, identifica\u00e7\u00e3o de problemas, conformidade e seguran\u00e7a, o CloudWatch \u00e9 uma solu\u00e7\u00e3o atraente para empresas de todos os tamanhos. No entanto, \u00e9 importante estar ciente das limita\u00e7\u00f5es, como o custo e a complexidade, ao planejar o uso do CloudWatch. Se voc\u00ea ainda n\u00e3o experimentou o Amazon CloudWatch, vale a pena dar uma olhada e descobrir como ele pode ajudar a impulsionar seus aplicativos na nuvem.","title":"Conclus\u00e3o"},{"location":"projetos/2.RDS/","text":"Relational Database Service (RDS) \u00b6 O Amazon RDS (Relational Database Service) \u00e9 um servi\u00e7o de banco de dados relacional gerenciado pela Amazon Web Services (AWS). Ele oferece suporte para v\u00e1rios mecanismos de banco de dados, incluindo MySQL, PostgreSQL, Oracle e SQL Server. Vantagens do Amazon RDS \u00b6 Gerenciamento f\u00e1cil: O Amazon RDS permite gerenciar facilmente os bancos de dados relacionais na nuvem, sem precisar se preocupar com o gerenciamento de hardware e software subjacente. Escalabilidade autom\u00e1tica: O RDS da AWS facilita a escalabilidade horizontal do banco de dados, permitindo aumentar ou diminuir a capacidade do banco de dados de acordo com a demanda. Backup e recupera\u00e7\u00e3o: O Amazon RDS faz backups autom\u00e1ticos do banco de dados, permitindo a recupera\u00e7\u00e3o r\u00e1pida em caso de falha ou erro. Seguran\u00e7a: O RDS da AWS oferece recursos de seguran\u00e7a robustos, incluindo criptografia de dados em repouso e em tr\u00e2nsito, controle de acesso baseado em fun\u00e7\u00f5es e conformidade com v\u00e1rias normas de seguran\u00e7a. Mecanismos de banco de dados suportados pelo Amazon RDS \u00b6 O Amazon RDS oferece suporte para os seguintes mecanismos de banco de dados: MySQL PostgreSQL Oracle SQL Server MariaDB Pre\u00e7os do Amazon RDS \u00b6 O Amazon RDS \u00e9 oferecido em v\u00e1rios planos de pre\u00e7os, dependendo do tipo de mecanismo de banco de dados, do tamanho do banco de dados e da capacidade de computa\u00e7\u00e3o. Os pre\u00e7os variam de acordo com a regi\u00e3o da AWS em que o banco de dados \u00e9 implantado. Conclus\u00e3o \u00b6 O Amazon RDS \u00e9 uma solu\u00e7\u00e3o conveniente e confi\u00e1vel para gerenciamento de banco de dados relacional na nuvem. Com recursos avan\u00e7ados de escalabilidade, backup e seguran\u00e7a, o RDS da AWS \u00e9 uma excelente escolha para empresas que desejam uma solu\u00e7\u00e3o de banco de dados gerenciada.","title":"2. Relational Database Service (RDS)"},{"location":"projetos/2.RDS/#relational-database-service-rds","text":"O Amazon RDS (Relational Database Service) \u00e9 um servi\u00e7o de banco de dados relacional gerenciado pela Amazon Web Services (AWS). Ele oferece suporte para v\u00e1rios mecanismos de banco de dados, incluindo MySQL, PostgreSQL, Oracle e SQL Server.","title":"Relational Database Service (RDS)"},{"location":"projetos/2.RDS/#vantagens-do-amazon-rds","text":"Gerenciamento f\u00e1cil: O Amazon RDS permite gerenciar facilmente os bancos de dados relacionais na nuvem, sem precisar se preocupar com o gerenciamento de hardware e software subjacente. Escalabilidade autom\u00e1tica: O RDS da AWS facilita a escalabilidade horizontal do banco de dados, permitindo aumentar ou diminuir a capacidade do banco de dados de acordo com a demanda. Backup e recupera\u00e7\u00e3o: O Amazon RDS faz backups autom\u00e1ticos do banco de dados, permitindo a recupera\u00e7\u00e3o r\u00e1pida em caso de falha ou erro. Seguran\u00e7a: O RDS da AWS oferece recursos de seguran\u00e7a robustos, incluindo criptografia de dados em repouso e em tr\u00e2nsito, controle de acesso baseado em fun\u00e7\u00f5es e conformidade com v\u00e1rias normas de seguran\u00e7a.","title":"Vantagens do Amazon RDS"},{"location":"projetos/2.RDS/#mecanismos-de-banco-de-dados-suportados-pelo-amazon-rds","text":"O Amazon RDS oferece suporte para os seguintes mecanismos de banco de dados: MySQL PostgreSQL Oracle SQL Server MariaDB","title":"Mecanismos de banco de dados suportados pelo Amazon RDS"},{"location":"projetos/2.RDS/#precos-do-amazon-rds","text":"O Amazon RDS \u00e9 oferecido em v\u00e1rios planos de pre\u00e7os, dependendo do tipo de mecanismo de banco de dados, do tamanho do banco de dados e da capacidade de computa\u00e7\u00e3o. Os pre\u00e7os variam de acordo com a regi\u00e3o da AWS em que o banco de dados \u00e9 implantado.","title":"Pre\u00e7os do Amazon RDS"},{"location":"projetos/2.RDS/#conclusao","text":"O Amazon RDS \u00e9 uma solu\u00e7\u00e3o conveniente e confi\u00e1vel para gerenciamento de banco de dados relacional na nuvem. Com recursos avan\u00e7ados de escalabilidade, backup e seguran\u00e7a, o RDS da AWS \u00e9 uma excelente escolha para empresas que desejam uma solu\u00e7\u00e3o de banco de dados gerenciada.","title":"Conclus\u00e3o"},{"location":"projetos/3.EC2/","text":"EC2 - Elastic Compute Cloud \u00b6 O Amazon Elastic Compute Cloud (EC2) \u00e9 um servi\u00e7o da AWS que fornece capacidade de computa\u00e7\u00e3o escal\u00e1vel na nuvem. \u00c9 um dos servi\u00e7os mais populares da AWS, permitindo que os usu\u00e1rios criem e gerenciem inst\u00e2ncias de servidores virtuais na nuvem. Caracter\u00edsticas do EC2 \u00b6 O EC2 oferece as seguintes caracter\u00edsticas: Escalabilidade : O EC2 permite que os usu\u00e1rios aumentem ou diminuam a capacidade de computa\u00e7\u00e3o conforme necess\u00e1rio, sem a necessidade de investir em hardware adicional. Flexibilidade : Os usu\u00e1rios podem escolher entre diferentes tipos de inst\u00e2ncias de acordo com suas necessidades de processamento, armazenamento e mem\u00f3ria. Seguran\u00e7a : O EC2 oferece v\u00e1rios recursos de seguran\u00e7a, incluindo criptografia de dados em tr\u00e2nsito e em repouso, gerenciamento de chaves e controle de acesso. Gerenciamento f\u00e1cil: O EC2 \u00e9 f\u00e1cil de usar e gerenciar, com recursos como o console da AWS, APIs e ferramentas de linha de comando. Como funciona o EC2 \u00b6 O EC2 funciona da seguinte maneira: Os usu\u00e1rios criam uma ou mais inst\u00e2ncias de servidor virtual. Eles selecionam um tipo de inst\u00e2ncia com base em suas necessidades de processamento, mem\u00f3ria e armazenamento. Eles podem configurar o sistema operacional, o armazenamento, a rede e outros recursos da inst\u00e2ncia. Eles iniciam a inst\u00e2ncia e se conectam a ela usando um cliente SSH ou uma conex\u00e3o de \u00e1rea de trabalho remota. Eles podem instalar aplicativos e servi\u00e7os na inst\u00e2ncia e us\u00e1-la como um servidor ou como parte de uma arquitetura de aplicativo distribu\u00eddo. Pre\u00e7os do EC2 \u00b6 Os pre\u00e7os do EC2 s\u00e3o baseados no tipo de inst\u00e2ncia, na regi\u00e3o em que ela \u00e9 executada e na quantidade de tempo em que a inst\u00e2ncia \u00e9 executada. Os usu\u00e1rios podem escolher entre modelos de pagamento sob demanda, onde eles pagam por hora de uso, ou modelos de inst\u00e2ncia reservada, onde eles fazem um compromisso a longo prazo e recebem um desconto significativo nos pre\u00e7os de inst\u00e2ncia. Conclus\u00e3o \u00b6 O EC2 \u00e9 um servi\u00e7o poderoso e flex\u00edvel da AWS que permite que os usu\u00e1rios criem e gerenciem facilmente inst\u00e2ncias de servidor virtual na nuvem. Com recursos de seguran\u00e7a, escalabilidade e flexibilidade, o EC2 \u00e9 uma escolha popular para empresas de todos os tamanhos que desejam aproveitar os benef\u00edcios da nuvem.","title":"3. EC2"},{"location":"projetos/3.EC2/#ec2-elastic-compute-cloud","text":"O Amazon Elastic Compute Cloud (EC2) \u00e9 um servi\u00e7o da AWS que fornece capacidade de computa\u00e7\u00e3o escal\u00e1vel na nuvem. \u00c9 um dos servi\u00e7os mais populares da AWS, permitindo que os usu\u00e1rios criem e gerenciem inst\u00e2ncias de servidores virtuais na nuvem.","title":"EC2 - Elastic Compute Cloud"},{"location":"projetos/3.EC2/#caracteristicas-do-ec2","text":"O EC2 oferece as seguintes caracter\u00edsticas: Escalabilidade : O EC2 permite que os usu\u00e1rios aumentem ou diminuam a capacidade de computa\u00e7\u00e3o conforme necess\u00e1rio, sem a necessidade de investir em hardware adicional. Flexibilidade : Os usu\u00e1rios podem escolher entre diferentes tipos de inst\u00e2ncias de acordo com suas necessidades de processamento, armazenamento e mem\u00f3ria. Seguran\u00e7a : O EC2 oferece v\u00e1rios recursos de seguran\u00e7a, incluindo criptografia de dados em tr\u00e2nsito e em repouso, gerenciamento de chaves e controle de acesso. Gerenciamento f\u00e1cil: O EC2 \u00e9 f\u00e1cil de usar e gerenciar, com recursos como o console da AWS, APIs e ferramentas de linha de comando.","title":"Caracter\u00edsticas do EC2"},{"location":"projetos/3.EC2/#como-funciona-o-ec2","text":"O EC2 funciona da seguinte maneira: Os usu\u00e1rios criam uma ou mais inst\u00e2ncias de servidor virtual. Eles selecionam um tipo de inst\u00e2ncia com base em suas necessidades de processamento, mem\u00f3ria e armazenamento. Eles podem configurar o sistema operacional, o armazenamento, a rede e outros recursos da inst\u00e2ncia. Eles iniciam a inst\u00e2ncia e se conectam a ela usando um cliente SSH ou uma conex\u00e3o de \u00e1rea de trabalho remota. Eles podem instalar aplicativos e servi\u00e7os na inst\u00e2ncia e us\u00e1-la como um servidor ou como parte de uma arquitetura de aplicativo distribu\u00eddo.","title":"Como funciona o EC2"},{"location":"projetos/3.EC2/#precos-do-ec2","text":"Os pre\u00e7os do EC2 s\u00e3o baseados no tipo de inst\u00e2ncia, na regi\u00e3o em que ela \u00e9 executada e na quantidade de tempo em que a inst\u00e2ncia \u00e9 executada. Os usu\u00e1rios podem escolher entre modelos de pagamento sob demanda, onde eles pagam por hora de uso, ou modelos de inst\u00e2ncia reservada, onde eles fazem um compromisso a longo prazo e recebem um desconto significativo nos pre\u00e7os de inst\u00e2ncia.","title":"Pre\u00e7os do EC2"},{"location":"projetos/3.EC2/#conclusao","text":"O EC2 \u00e9 um servi\u00e7o poderoso e flex\u00edvel da AWS que permite que os usu\u00e1rios criem e gerenciem facilmente inst\u00e2ncias de servidor virtual na nuvem. Com recursos de seguran\u00e7a, escalabilidade e flexibilidade, o EC2 \u00e9 uma escolha popular para empresas de todos os tamanhos que desejam aproveitar os benef\u00edcios da nuvem.","title":"Conclus\u00e3o"},{"location":"projetos/4.Auto_Scaling/","text":"Auto Scaling na AWS \u00b6 O Auto Scaling \u00e9 um recurso da Amazon Web Services (AWS) que permite dimensionar automaticamente os recursos da sua aplica\u00e7\u00e3o de acordo com a demanda do usu\u00e1rio. Com o Auto Scaling, voc\u00ea pode manter o desempenho da aplica\u00e7\u00e3o, economizar custos e garantir que seus usu\u00e1rios recebam a melhor experi\u00eancia poss\u00edvel. Como funciona o Auto Scaling? \u00b6 O Auto Scaling monitora as m\u00e9tricas de utiliza\u00e7\u00e3o dos recursos da sua aplica\u00e7\u00e3o, como CPU, mem\u00f3ria e tr\u00e1fego de rede. Com base nessas m\u00e9tricas, ele pode aumentar ou diminuir automaticamente o n\u00famero de inst\u00e2ncias de recursos da sua aplica\u00e7\u00e3o. Por exemplo, se a demanda do usu\u00e1rio aumentar, o Auto Scaling pode adicionar mais inst\u00e2ncias para lidar com o aumento de tr\u00e1fego. Quando a demanda diminuir, o Auto Scaling pode reduzir o n\u00famero de inst\u00e2ncias para economizar custos. O Auto Scaling tamb\u00e9m permite definir pol\u00edticas de escalonamento personalizadas com base em suas necessidades espec\u00edficas. Voc\u00ea pode definir uma pol\u00edtica de escalonamento para aumentar as inst\u00e2ncias quando a utiliza\u00e7\u00e3o da CPU atingir um determinado n\u00edvel ou para diminuir as inst\u00e2ncias quando a utiliza\u00e7\u00e3o da mem\u00f3ria estiver abaixo de um determinado n\u00edvel. Benef\u00edcios do Auto Scaling \u00b6 Existem v\u00e1rios benef\u00edcios em usar o Auto Scaling na AWS, incluindo: Maior disponibilidade : o Auto Scaling ajuda a garantir que sua aplica\u00e7\u00e3o esteja sempre dispon\u00edvel, mesmo em momentos de pico de tr\u00e1fego. Economia de custos : o Auto Scaling permite que voc\u00ea aumente ou diminua automaticamente o n\u00famero de inst\u00e2ncias de recursos da sua aplica\u00e7\u00e3o com base na demanda do usu\u00e1rio, o que pode ajudar a economizar custos de infraestrutura. Melhor desempenho : o Auto Scaling pode ajudar a manter o desempenho da sua aplica\u00e7\u00e3o, garantindo que haja sempre recursos suficientes para lidar com a demanda do usu\u00e1rio. Conclus\u00e3o \u00b6 O Auto Scaling \u00e9 uma ferramenta essencial para garantir a escalabilidade, disponibilidade e desempenho da sua aplica\u00e7\u00e3o na AWS. Com o Auto Scaling, voc\u00ea pode automatizar o processo de escalonamento dos recursos da sua aplica\u00e7\u00e3o, economizar custos e garantir a melhor experi\u00eancia poss\u00edvel para seus usu\u00e1rios.","title":"4. Auto Scaling"},{"location":"projetos/4.Auto_Scaling/#auto-scaling-na-aws","text":"O Auto Scaling \u00e9 um recurso da Amazon Web Services (AWS) que permite dimensionar automaticamente os recursos da sua aplica\u00e7\u00e3o de acordo com a demanda do usu\u00e1rio. Com o Auto Scaling, voc\u00ea pode manter o desempenho da aplica\u00e7\u00e3o, economizar custos e garantir que seus usu\u00e1rios recebam a melhor experi\u00eancia poss\u00edvel.","title":"Auto Scaling na AWS"},{"location":"projetos/4.Auto_Scaling/#como-funciona-o-auto-scaling","text":"O Auto Scaling monitora as m\u00e9tricas de utiliza\u00e7\u00e3o dos recursos da sua aplica\u00e7\u00e3o, como CPU, mem\u00f3ria e tr\u00e1fego de rede. Com base nessas m\u00e9tricas, ele pode aumentar ou diminuir automaticamente o n\u00famero de inst\u00e2ncias de recursos da sua aplica\u00e7\u00e3o. Por exemplo, se a demanda do usu\u00e1rio aumentar, o Auto Scaling pode adicionar mais inst\u00e2ncias para lidar com o aumento de tr\u00e1fego. Quando a demanda diminuir, o Auto Scaling pode reduzir o n\u00famero de inst\u00e2ncias para economizar custos. O Auto Scaling tamb\u00e9m permite definir pol\u00edticas de escalonamento personalizadas com base em suas necessidades espec\u00edficas. Voc\u00ea pode definir uma pol\u00edtica de escalonamento para aumentar as inst\u00e2ncias quando a utiliza\u00e7\u00e3o da CPU atingir um determinado n\u00edvel ou para diminuir as inst\u00e2ncias quando a utiliza\u00e7\u00e3o da mem\u00f3ria estiver abaixo de um determinado n\u00edvel.","title":"Como funciona o Auto Scaling?"},{"location":"projetos/4.Auto_Scaling/#beneficios-do-auto-scaling","text":"Existem v\u00e1rios benef\u00edcios em usar o Auto Scaling na AWS, incluindo: Maior disponibilidade : o Auto Scaling ajuda a garantir que sua aplica\u00e7\u00e3o esteja sempre dispon\u00edvel, mesmo em momentos de pico de tr\u00e1fego. Economia de custos : o Auto Scaling permite que voc\u00ea aumente ou diminua automaticamente o n\u00famero de inst\u00e2ncias de recursos da sua aplica\u00e7\u00e3o com base na demanda do usu\u00e1rio, o que pode ajudar a economizar custos de infraestrutura. Melhor desempenho : o Auto Scaling pode ajudar a manter o desempenho da sua aplica\u00e7\u00e3o, garantindo que haja sempre recursos suficientes para lidar com a demanda do usu\u00e1rio.","title":"Benef\u00edcios do Auto Scaling"},{"location":"projetos/4.Auto_Scaling/#conclusao","text":"O Auto Scaling \u00e9 uma ferramenta essencial para garantir a escalabilidade, disponibilidade e desempenho da sua aplica\u00e7\u00e3o na AWS. Com o Auto Scaling, voc\u00ea pode automatizar o processo de escalonamento dos recursos da sua aplica\u00e7\u00e3o, economizar custos e garantir a melhor experi\u00eancia poss\u00edvel para seus usu\u00e1rios.","title":"Conclus\u00e3o"},{"location":"projetos/5.VPC/","text":"Servi\u00e7o de VPC na AWS \u00b6 O Amazon Virtual Private Cloud (VPC) \u00e9 um servi\u00e7o que permite que voc\u00ea crie uma rede virtual isolada na nuvem da AWS. Com o VPC, voc\u00ea pode personalizar a sua pr\u00f3pria rede virtual em termos de sub-redes, roteamento e gateways de internet, e conectar a sua rede local ao seu ambiente de nuvem da AWS. Caracter\u00edsticas do VPC \u00b6 Algumas das principais caracter\u00edsticas do VPC s\u00e3o: Isolamento : O VPC permite que voc\u00ea crie uma rede isolada na nuvem da AWS, onde voc\u00ea pode executar recursos sem o risco de interfer\u00eancia de outras redes na nuvem. Personaliza\u00e7\u00e3o : Com o VPC, voc\u00ea pode personalizar a sua rede virtual de acordo com as suas necessidades, criando sub-redes p\u00fablicas e privadas, definindo as suas pr\u00f3prias tabelas de roteamento e configurando gateways de internet. Seguran\u00e7a : O VPC oferece recursos de seguran\u00e7a avan\u00e7ados, incluindo grupos de seguran\u00e7a e listas de controle de acesso (ACLs), para controlar o acesso aos recursos na sua rede. Conectividade : O VPC permite que voc\u00ea conecte a sua rede local ao ambiente de nuvem da AWS por meio de uma conex\u00e3o VPN ou uma conex\u00e3o direta. Componentes do VPC \u00b6 O VPC \u00e9 composto por v\u00e1rios componentes, incluindo: Sub-redes : As sub-redes s\u00e3o segmentos da rede que permitem que voc\u00ea agrupe recursos com base em suas funcionalidades e requisitos de seguran\u00e7a. Voc\u00ea pode criar sub-redes p\u00fablicas ou privadas e definir as suas pr\u00f3prias faixas de endere\u00e7os IP. Tabelas de roteamento : As tabelas de roteamento s\u00e3o usadas para determinar como o tr\u00e1fego \u00e9 encaminhado entre as sub-redes e para a internet. Voc\u00ea pode criar tabelas de roteamento personalizadas para cada sub-rede ou usar as tabelas de roteamento padr\u00e3o. Gateways de internet : Os gateways de internet s\u00e3o usados para permitir que o tr\u00e1fego da internet chegue \u00e0s sub-redes p\u00fablicas do VPC. Voc\u00ea pode criar e anexar um gateway de internet a uma sub-rede p\u00fablica para permitir o acesso \u00e0 internet. Grupos de seguran\u00e7a : Os grupos de seguran\u00e7a s\u00e3o usados para controlar o tr\u00e1fego de entrada e sa\u00edda para inst\u00e2ncias do Amazon EC2 na sua rede. Voc\u00ea pode criar grupos de seguran\u00e7a personalizados e especificar as regras de acesso para cada grupo. Listas de controle de acesso : As listas de controle de acesso (ACLs) s\u00e3o usadas para controlar o tr\u00e1fego de entrada e sa\u00edda para as sub-redes do VPC. Voc\u00ea pode criar ACLs personalizadas e especificar as regras de acesso para cada ACL. Conclus\u00e3o \u00b6 O Amazon Virtual Private Cloud (VPC) \u00e9 um servi\u00e7o essencial para aqueles que desejam criar e personalizar a sua pr\u00f3pria rede virtual na nuvem da AWS. Com o VPC, voc\u00ea pode criar uma rede isolada e segura, definir as suas pr\u00f3prias sub-redes e tabelas de roteamento, configurar gateways de internet e controlar o acesso aos recursos na sua rede. Compreender os componentes do VPC \u00e9 fundamental para criar uma rede virtual eficaz e segura na nuvem da AWS. Ao utilizar o VPC, voc\u00ea pode garantir que a sua rede esteja configurada corretamente para atender \u00e0s necessidades da sua empresa, al\u00e9m de garantir a seguran\u00e7a e a privacidade dos dados e dos recursos na nuvem da AWS. Al\u00e9m disso, o VPC pode ser integrado com outros servi\u00e7os da AWS, como o Amazon EC2, o Amazon RDS e o Amazon S3, para criar solu\u00e7\u00f5es avan\u00e7adas e escal\u00e1veis na nuvem. Com a sua flexibilidade e escalabilidade, o VPC \u00e9 uma ferramenta poderosa para aqueles que desejam aproveitar ao m\u00e1ximo a nuvem da AWS. Resumo do resumo \u00b6 Em resumo, o Amazon Virtual Private Cloud (VPC) \u00e9 um servi\u00e7o fundamental para criar uma rede virtual isolada e personalizada na nuvem da AWS. Com o VPC, voc\u00ea pode personalizar a sua rede virtual de acordo com as suas necessidades, controlar o acesso aos recursos e integr\u00e1-lo com outros servi\u00e7os da AWS para criar solu\u00e7\u00f5es avan\u00e7adas e escal\u00e1veis.","title":"5. VPC"},{"location":"projetos/5.VPC/#servico-de-vpc-na-aws","text":"O Amazon Virtual Private Cloud (VPC) \u00e9 um servi\u00e7o que permite que voc\u00ea crie uma rede virtual isolada na nuvem da AWS. Com o VPC, voc\u00ea pode personalizar a sua pr\u00f3pria rede virtual em termos de sub-redes, roteamento e gateways de internet, e conectar a sua rede local ao seu ambiente de nuvem da AWS.","title":"Servi\u00e7o de VPC na AWS"},{"location":"projetos/5.VPC/#caracteristicas-do-vpc","text":"Algumas das principais caracter\u00edsticas do VPC s\u00e3o: Isolamento : O VPC permite que voc\u00ea crie uma rede isolada na nuvem da AWS, onde voc\u00ea pode executar recursos sem o risco de interfer\u00eancia de outras redes na nuvem. Personaliza\u00e7\u00e3o : Com o VPC, voc\u00ea pode personalizar a sua rede virtual de acordo com as suas necessidades, criando sub-redes p\u00fablicas e privadas, definindo as suas pr\u00f3prias tabelas de roteamento e configurando gateways de internet. Seguran\u00e7a : O VPC oferece recursos de seguran\u00e7a avan\u00e7ados, incluindo grupos de seguran\u00e7a e listas de controle de acesso (ACLs), para controlar o acesso aos recursos na sua rede. Conectividade : O VPC permite que voc\u00ea conecte a sua rede local ao ambiente de nuvem da AWS por meio de uma conex\u00e3o VPN ou uma conex\u00e3o direta.","title":"Caracter\u00edsticas do VPC"},{"location":"projetos/5.VPC/#componentes-do-vpc","text":"O VPC \u00e9 composto por v\u00e1rios componentes, incluindo: Sub-redes : As sub-redes s\u00e3o segmentos da rede que permitem que voc\u00ea agrupe recursos com base em suas funcionalidades e requisitos de seguran\u00e7a. Voc\u00ea pode criar sub-redes p\u00fablicas ou privadas e definir as suas pr\u00f3prias faixas de endere\u00e7os IP. Tabelas de roteamento : As tabelas de roteamento s\u00e3o usadas para determinar como o tr\u00e1fego \u00e9 encaminhado entre as sub-redes e para a internet. Voc\u00ea pode criar tabelas de roteamento personalizadas para cada sub-rede ou usar as tabelas de roteamento padr\u00e3o. Gateways de internet : Os gateways de internet s\u00e3o usados para permitir que o tr\u00e1fego da internet chegue \u00e0s sub-redes p\u00fablicas do VPC. Voc\u00ea pode criar e anexar um gateway de internet a uma sub-rede p\u00fablica para permitir o acesso \u00e0 internet. Grupos de seguran\u00e7a : Os grupos de seguran\u00e7a s\u00e3o usados para controlar o tr\u00e1fego de entrada e sa\u00edda para inst\u00e2ncias do Amazon EC2 na sua rede. Voc\u00ea pode criar grupos de seguran\u00e7a personalizados e especificar as regras de acesso para cada grupo. Listas de controle de acesso : As listas de controle de acesso (ACLs) s\u00e3o usadas para controlar o tr\u00e1fego de entrada e sa\u00edda para as sub-redes do VPC. Voc\u00ea pode criar ACLs personalizadas e especificar as regras de acesso para cada ACL.","title":"Componentes do VPC"},{"location":"projetos/5.VPC/#conclusao","text":"O Amazon Virtual Private Cloud (VPC) \u00e9 um servi\u00e7o essencial para aqueles que desejam criar e personalizar a sua pr\u00f3pria rede virtual na nuvem da AWS. Com o VPC, voc\u00ea pode criar uma rede isolada e segura, definir as suas pr\u00f3prias sub-redes e tabelas de roteamento, configurar gateways de internet e controlar o acesso aos recursos na sua rede. Compreender os componentes do VPC \u00e9 fundamental para criar uma rede virtual eficaz e segura na nuvem da AWS. Ao utilizar o VPC, voc\u00ea pode garantir que a sua rede esteja configurada corretamente para atender \u00e0s necessidades da sua empresa, al\u00e9m de garantir a seguran\u00e7a e a privacidade dos dados e dos recursos na nuvem da AWS. Al\u00e9m disso, o VPC pode ser integrado com outros servi\u00e7os da AWS, como o Amazon EC2, o Amazon RDS e o Amazon S3, para criar solu\u00e7\u00f5es avan\u00e7adas e escal\u00e1veis na nuvem. Com a sua flexibilidade e escalabilidade, o VPC \u00e9 uma ferramenta poderosa para aqueles que desejam aproveitar ao m\u00e1ximo a nuvem da AWS.","title":"Conclus\u00e3o"},{"location":"projetos/5.VPC/#resumo-do-resumo","text":"Em resumo, o Amazon Virtual Private Cloud (VPC) \u00e9 um servi\u00e7o fundamental para criar uma rede virtual isolada e personalizada na nuvem da AWS. Com o VPC, voc\u00ea pode personalizar a sua rede virtual de acordo com as suas necessidades, controlar o acesso aos recursos e integr\u00e1-lo com outros servi\u00e7os da AWS para criar solu\u00e7\u00f5es avan\u00e7adas e escal\u00e1veis.","title":"Resumo do resumo"},{"location":"projetos/6.Elastic_BeanStalk/","text":"Elastic BeanStalk \u00b6 O Elastic Beanstalk \u00e9 um servi\u00e7o da AWS que facilita a implanta\u00e7\u00e3o e a escalabilidade de aplicativos da web. O servi\u00e7o \u00e9 projetado para lidar com toda a complexidade da implanta\u00e7\u00e3o de aplicativos, incluindo a configura\u00e7\u00e3o de recursos de infraestrutura e o provisionamento de capacidade. Caracter\u00edsticas do Elastic Beanstalk \u00b6 Algumas das principais caracter\u00edsticas do Elastic Beanstalk s\u00e3o: Facilidade de uso : O Elastic Beanstalk permite que voc\u00ea implante e gerencie aplicativos da web e servi\u00e7os com facilidade, sem a necessidade de gerenciar a infraestrutura subjacente. Voc\u00ea pode usar v\u00e1rias linguagens de programa\u00e7\u00e3o, plataformas e servi\u00e7os da AWS para implantar o seu aplicativo. Autoscaling : O Elastic Beanstalk suporta o dimensionamento autom\u00e1tico, permitindo que voc\u00ea aumente ou diminua a capacidade de processamento do seu aplicativo com base na demanda do usu\u00e1rio. Integra\u00e7\u00e3o : O Elastic Beanstalk integra-se com outros servi\u00e7os da AWS, como o Amazon RDS, o Amazon S3 e o Amazon CloudWatch, para fornecer uma solu\u00e7\u00e3o completa para a implanta\u00e7\u00e3o de aplicativos. Visibilidade : O Elastic Beanstalk oferece visibilidade sobre o estado do seu aplicativo, com logs e m\u00e9tricas que ajudam a detectar e solucionar problemas rapidamente. Como funciona o Elastic Beanstalk \u00b6 O Elastic Beanstalk automatiza o processo de implanta\u00e7\u00e3o e gerenciamento de aplicativos da web e servi\u00e7os na AWS. Para usar o Elastic Beanstalk, basta seguir alguns passos simples: Crie um aplicativo : Crie um aplicativo na AWS que voc\u00ea deseja implantar usando o Elastic Beanstalk. Configure as op\u00e7\u00f5es do aplicativo : Escolha as op\u00e7\u00f5es de linguagem de programa\u00e7\u00e3o, plataforma e ambiente de tempo de execu\u00e7\u00e3o do seu aplicativo. Implante o aplicativo : Implante o aplicativo na plataforma Elastic Beanstalk e deixe que o servi\u00e7o gerencie a implanta\u00e7\u00e3o. Gerencie o aplicativo : Gerencie e monitore o estado do aplicativo por meio do console do Elastic Beanstalk ou por meio de ferramentas de linha de comando. Conclus\u00e3o \u00b6 O AWS Elastic Beanstalk \u00e9 um servi\u00e7o poderoso para aqueles que desejam implantar e gerenciar aplicativos da web e servi\u00e7os na nuvem da AWS. Com o Elastic Beanstalk, voc\u00ea pode implantar aplicativos com facilidade, escalar automaticamente a capacidade de processamento do seu aplicativo, integr\u00e1-lo com outros servi\u00e7os da AWS e obter visibilidade sobre o estado do seu aplicativo. Ao automatizar o processo de implanta\u00e7\u00e3o e gerenciamento de aplicativos, o Elastic Beanstalk permite que desenvolvedores se concentrem no desenvolvimento de aplicativos e na cria\u00e7\u00e3o de recursos de valor para os usu\u00e1rios finais. Em resumo, o AWS Elastic Beanstalk \u00e9 uma ferramenta essencial para aqueles que desejam aproveitar ao m\u00e1ximo a nuvem da AWS.","title":"6. Elastic BeanStalk"},{"location":"projetos/6.Elastic_BeanStalk/#elastic-beanstalk","text":"O Elastic Beanstalk \u00e9 um servi\u00e7o da AWS que facilita a implanta\u00e7\u00e3o e a escalabilidade de aplicativos da web. O servi\u00e7o \u00e9 projetado para lidar com toda a complexidade da implanta\u00e7\u00e3o de aplicativos, incluindo a configura\u00e7\u00e3o de recursos de infraestrutura e o provisionamento de capacidade.","title":"Elastic BeanStalk"},{"location":"projetos/6.Elastic_BeanStalk/#caracteristicas-do-elastic-beanstalk","text":"Algumas das principais caracter\u00edsticas do Elastic Beanstalk s\u00e3o: Facilidade de uso : O Elastic Beanstalk permite que voc\u00ea implante e gerencie aplicativos da web e servi\u00e7os com facilidade, sem a necessidade de gerenciar a infraestrutura subjacente. Voc\u00ea pode usar v\u00e1rias linguagens de programa\u00e7\u00e3o, plataformas e servi\u00e7os da AWS para implantar o seu aplicativo. Autoscaling : O Elastic Beanstalk suporta o dimensionamento autom\u00e1tico, permitindo que voc\u00ea aumente ou diminua a capacidade de processamento do seu aplicativo com base na demanda do usu\u00e1rio. Integra\u00e7\u00e3o : O Elastic Beanstalk integra-se com outros servi\u00e7os da AWS, como o Amazon RDS, o Amazon S3 e o Amazon CloudWatch, para fornecer uma solu\u00e7\u00e3o completa para a implanta\u00e7\u00e3o de aplicativos. Visibilidade : O Elastic Beanstalk oferece visibilidade sobre o estado do seu aplicativo, com logs e m\u00e9tricas que ajudam a detectar e solucionar problemas rapidamente.","title":"Caracter\u00edsticas do Elastic Beanstalk"},{"location":"projetos/6.Elastic_BeanStalk/#como-funciona-o-elastic-beanstalk","text":"O Elastic Beanstalk automatiza o processo de implanta\u00e7\u00e3o e gerenciamento de aplicativos da web e servi\u00e7os na AWS. Para usar o Elastic Beanstalk, basta seguir alguns passos simples: Crie um aplicativo : Crie um aplicativo na AWS que voc\u00ea deseja implantar usando o Elastic Beanstalk. Configure as op\u00e7\u00f5es do aplicativo : Escolha as op\u00e7\u00f5es de linguagem de programa\u00e7\u00e3o, plataforma e ambiente de tempo de execu\u00e7\u00e3o do seu aplicativo. Implante o aplicativo : Implante o aplicativo na plataforma Elastic Beanstalk e deixe que o servi\u00e7o gerencie a implanta\u00e7\u00e3o. Gerencie o aplicativo : Gerencie e monitore o estado do aplicativo por meio do console do Elastic Beanstalk ou por meio de ferramentas de linha de comando.","title":"Como funciona o Elastic Beanstalk"},{"location":"projetos/6.Elastic_BeanStalk/#conclusao","text":"O AWS Elastic Beanstalk \u00e9 um servi\u00e7o poderoso para aqueles que desejam implantar e gerenciar aplicativos da web e servi\u00e7os na nuvem da AWS. Com o Elastic Beanstalk, voc\u00ea pode implantar aplicativos com facilidade, escalar automaticamente a capacidade de processamento do seu aplicativo, integr\u00e1-lo com outros servi\u00e7os da AWS e obter visibilidade sobre o estado do seu aplicativo. Ao automatizar o processo de implanta\u00e7\u00e3o e gerenciamento de aplicativos, o Elastic Beanstalk permite que desenvolvedores se concentrem no desenvolvimento de aplicativos e na cria\u00e7\u00e3o de recursos de valor para os usu\u00e1rios finais. Em resumo, o AWS Elastic Beanstalk \u00e9 uma ferramenta essencial para aqueles que desejam aproveitar ao m\u00e1ximo a nuvem da AWS.","title":"Conclus\u00e3o"},{"location":"projetos/7.IAM/","text":"Servi\u00e7o AWS IAM \u00b6 O AWS Identity and Access Management (IAM) \u00e9 um servi\u00e7o que permite que voc\u00ea gerencie com seguran\u00e7a o acesso aos recursos da AWS. Com o IAM, voc\u00ea pode criar e gerenciar usu\u00e1rios e grupos, conceder e revogar permiss\u00f5es e definir pol\u00edticas de acesso para controlar quem pode acessar quais recursos na sua conta da AWS. Caracter\u00edsticas do AWS IAM \u00b6 Algumas das principais caracter\u00edsticas do AWS IAM s\u00e3o: Gerenciamento de usu\u00e1rios e grupos : O IAM permite que voc\u00ea crie e gerencie usu\u00e1rios e grupos na sua conta da AWS. Voc\u00ea pode conceder e revogar permiss\u00f5es para usu\u00e1rios individuais ou grupos de usu\u00e1rios. Pol\u00edticas de acesso : O IAM permite que voc\u00ea crie pol\u00edticas de acesso para controlar quem pode acessar quais recursos na sua conta da AWS. Voc\u00ea pode definir pol\u00edticas para usu\u00e1rios individuais, grupos de usu\u00e1rios ou para toda a sua conta da AWS. Autentica\u00e7\u00e3o de usu\u00e1rios : O IAM fornece op\u00e7\u00f5es de autentica\u00e7\u00e3o de usu\u00e1rios, incluindo autentica\u00e7\u00e3o baseada em senha e autentica\u00e7\u00e3o de dois fatores. Monitoramento de atividade de usu\u00e1rios : O IAM registra todas as atividades dos usu\u00e1rios na sua conta da AWS, permitindo que voc\u00ea monitore quem est\u00e1 acessando seus recursos e o que eles est\u00e3o fazendo. Como funciona o AWS IAM \u00b6 O AWS IAM funciona permitindo que voc\u00ea crie e gerencie usu\u00e1rios e grupos na sua conta da AWS. Voc\u00ea pode conceder e revogar permiss\u00f5es para usu\u00e1rios individuais ou grupos de usu\u00e1rios e definir pol\u00edticas de acesso para controlar quem pode acessar quais recursos na sua conta da AWS. Para usar o AWS IAM, basta seguir alguns passos simples: Crie usu\u00e1rios e grupos : Crie usu\u00e1rios e grupos na sua conta da AWS usando o console do IAM ou a API do IAM. Defina pol\u00edticas de acesso : Defina pol\u00edticas de acesso para controlar quem pode acessar quais recursos na sua conta da AWS. Voc\u00ea pode definir pol\u00edticas para usu\u00e1rios individuais, grupos de usu\u00e1rios ou para toda a sua conta da AWS. Conceda permiss\u00f5es : Conceda permiss\u00f5es para usu\u00e1rios individuais ou grupos de usu\u00e1rios para permitir que eles acessem recursos na sua conta da AWS. Monitore a atividade de usu\u00e1rios : Monitore a atividade dos usu\u00e1rios na sua conta da AWS usando o console do IAM ou o AWS CloudTrail. Conclus\u00e3o \u00b6 O AWS Identity and Access Management (IAM) \u00e9 um servi\u00e7o essencial para aqueles que desejam gerenciar com seguran\u00e7a o acesso aos recursos da AWS. Com o IAM, voc\u00ea pode criar e gerenciar usu\u00e1rios e grupos, conceder e revogar permiss\u00f5es e definir pol\u00edticas de acesso para controlar quem pode acessar quais recursos na sua conta da AWS. Ao permitir que voc\u00ea crie e gerencie usu\u00e1rios e grupos e defina pol\u00edticas de acesso, o IAM ajuda a garantir que seus recursos da AWS estejam protegidos contra acessos n\u00e3o autorizados e fornece a voc\u00ea o controle necess\u00e1rio para gerenciar sua conta da AWS com seguran\u00e7a.","title":"7. AWS IAM"},{"location":"projetos/7.IAM/#servico-aws-iam","text":"O AWS Identity and Access Management (IAM) \u00e9 um servi\u00e7o que permite que voc\u00ea gerencie com seguran\u00e7a o acesso aos recursos da AWS. Com o IAM, voc\u00ea pode criar e gerenciar usu\u00e1rios e grupos, conceder e revogar permiss\u00f5es e definir pol\u00edticas de acesso para controlar quem pode acessar quais recursos na sua conta da AWS.","title":"Servi\u00e7o AWS IAM"},{"location":"projetos/7.IAM/#caracteristicas-do-aws-iam","text":"Algumas das principais caracter\u00edsticas do AWS IAM s\u00e3o: Gerenciamento de usu\u00e1rios e grupos : O IAM permite que voc\u00ea crie e gerencie usu\u00e1rios e grupos na sua conta da AWS. Voc\u00ea pode conceder e revogar permiss\u00f5es para usu\u00e1rios individuais ou grupos de usu\u00e1rios. Pol\u00edticas de acesso : O IAM permite que voc\u00ea crie pol\u00edticas de acesso para controlar quem pode acessar quais recursos na sua conta da AWS. Voc\u00ea pode definir pol\u00edticas para usu\u00e1rios individuais, grupos de usu\u00e1rios ou para toda a sua conta da AWS. Autentica\u00e7\u00e3o de usu\u00e1rios : O IAM fornece op\u00e7\u00f5es de autentica\u00e7\u00e3o de usu\u00e1rios, incluindo autentica\u00e7\u00e3o baseada em senha e autentica\u00e7\u00e3o de dois fatores. Monitoramento de atividade de usu\u00e1rios : O IAM registra todas as atividades dos usu\u00e1rios na sua conta da AWS, permitindo que voc\u00ea monitore quem est\u00e1 acessando seus recursos e o que eles est\u00e3o fazendo.","title":"Caracter\u00edsticas do AWS IAM"},{"location":"projetos/7.IAM/#como-funciona-o-aws-iam","text":"O AWS IAM funciona permitindo que voc\u00ea crie e gerencie usu\u00e1rios e grupos na sua conta da AWS. Voc\u00ea pode conceder e revogar permiss\u00f5es para usu\u00e1rios individuais ou grupos de usu\u00e1rios e definir pol\u00edticas de acesso para controlar quem pode acessar quais recursos na sua conta da AWS. Para usar o AWS IAM, basta seguir alguns passos simples: Crie usu\u00e1rios e grupos : Crie usu\u00e1rios e grupos na sua conta da AWS usando o console do IAM ou a API do IAM. Defina pol\u00edticas de acesso : Defina pol\u00edticas de acesso para controlar quem pode acessar quais recursos na sua conta da AWS. Voc\u00ea pode definir pol\u00edticas para usu\u00e1rios individuais, grupos de usu\u00e1rios ou para toda a sua conta da AWS. Conceda permiss\u00f5es : Conceda permiss\u00f5es para usu\u00e1rios individuais ou grupos de usu\u00e1rios para permitir que eles acessem recursos na sua conta da AWS. Monitore a atividade de usu\u00e1rios : Monitore a atividade dos usu\u00e1rios na sua conta da AWS usando o console do IAM ou o AWS CloudTrail.","title":"Como funciona o AWS IAM"},{"location":"projetos/7.IAM/#conclusao","text":"O AWS Identity and Access Management (IAM) \u00e9 um servi\u00e7o essencial para aqueles que desejam gerenciar com seguran\u00e7a o acesso aos recursos da AWS. Com o IAM, voc\u00ea pode criar e gerenciar usu\u00e1rios e grupos, conceder e revogar permiss\u00f5es e definir pol\u00edticas de acesso para controlar quem pode acessar quais recursos na sua conta da AWS. Ao permitir que voc\u00ea crie e gerencie usu\u00e1rios e grupos e defina pol\u00edticas de acesso, o IAM ajuda a garantir que seus recursos da AWS estejam protegidos contra acessos n\u00e3o autorizados e fornece a voc\u00ea o controle necess\u00e1rio para gerenciar sua conta da AWS com seguran\u00e7a.","title":"Conclus\u00e3o"},{"location":"projetos/8.Pipeline/","text":"Servi\u00e7o AWS Pipeline \u00b6 O AWS Pipeline \u00e9 um servi\u00e7o gerenciado de integra\u00e7\u00e3o e entrega cont\u00ednua (CI/CD) que permite automatizar o processo de implanta\u00e7\u00e3o de software na AWS. Com o AWS Pipeline, \u00e9 poss\u00edvel criar pipelines de implanta\u00e7\u00e3o que automatizam as etapas de compila\u00e7\u00e3o, teste e implanta\u00e7\u00e3o de software. Caracter\u00edsticas do AWS Pipeline \u00b6 Algumas das principais caracter\u00edsticas do AWS Pipeline s\u00e3o: Automa\u00e7\u00e3o do processo de implanta\u00e7\u00e3o : O AWS Pipeline automatiza o processo de implanta\u00e7\u00e3o de software na AWS, permitindo que voc\u00ea crie pipelines de implanta\u00e7\u00e3o que incluem compila\u00e7\u00e3o, teste e implanta\u00e7\u00e3o. Suporte a v\u00e1rias fontes de c\u00f3digo : O AWS Pipeline oferece suporte a v\u00e1rias fontes de c\u00f3digo, incluindo reposit\u00f3rios Git, reposit\u00f3rios S3 e reposit\u00f3rios do AWS CodeCommit. Integra\u00e7\u00e3o com outros servi\u00e7os da AWS : O AWS Pipeline se integra com outros servi\u00e7os da AWS, como o AWS CodeBuild, AWS CodeDeploy e AWS CloudFormation, permitindo que voc\u00ea crie pipelines de implanta\u00e7\u00e3o mais complexos. Visualiza\u00e7\u00e3o do progresso do pipeline : O AWS Pipeline oferece uma interface visual que permite que voc\u00ea visualize o progresso do pipeline de implanta\u00e7\u00e3o e identifique rapidamente quaisquer problemas que possam ocorrer durante o processo de implanta\u00e7\u00e3o. Como funciona o AWS Pipeline \u00b6 O AWS Pipeline funciona criando pipelines de implanta\u00e7\u00e3o que automatizam as etapas de compila\u00e7\u00e3o, teste e implanta\u00e7\u00e3o de software. Para usar o AWS Pipeline, basta seguir alguns passos simples: Criar um pipeline : Crie um pipeline de implanta\u00e7\u00e3o no console do AWS Pipeline ou usando a API do AWS Pipeline. Configurar a origem do c\u00f3digo : Escolha a fonte do c\u00f3digo para o pipeline, como um reposit\u00f3rio Git ou S3. Configurar a compila\u00e7\u00e3o : Configure a compila\u00e7\u00e3o do c\u00f3digo usando o AWS CodeBuild ou outro servi\u00e7o de compila\u00e7\u00e3o. Configurar o teste : Configure o teste do c\u00f3digo usando ferramentas de teste, como o AWS CodeBuild. Configurar a implanta\u00e7\u00e3o : Configure a implanta\u00e7\u00e3o do c\u00f3digo usando o AWS CodeDeploy ou outro servi\u00e7o de implanta\u00e7\u00e3o. Executar o pipeline : Execute o pipeline de implanta\u00e7\u00e3o e monitore o progresso usando a interface visual do AWS Pipeline. Conclus\u00e3o \u00b6 O AWS Pipeline \u00e9 uma solu\u00e7\u00e3o eficiente e escal\u00e1vel para a automa\u00e7\u00e3o do processo de implanta\u00e7\u00e3o de software na AWS. Com o AWS Pipeline, \u00e9 poss\u00edvel criar pipelines de implanta\u00e7\u00e3o que automatizam as etapas de compila\u00e7\u00e3o, teste e implanta\u00e7\u00e3o de software, permitindo que voc\u00ea implante seu software com mais rapidez e seguran\u00e7a. Ao oferecer suporte a v\u00e1rias fontes de c\u00f3digo e integrar-se com outros servi\u00e7os da AWS, como o AWS CodeBuild, AWS CodeDeploy e AWS CloudFormation, o AWS Pipeline permite que voc\u00ea crie pipelines de implanta\u00e7\u00e3o mais complexos para atender \u00e0s suas necessidades espec\u00edficas de implanta\u00e7\u00e3o de software.","title":"8. Pipeline CI/CD"},{"location":"projetos/8.Pipeline/#servico-aws-pipeline","text":"O AWS Pipeline \u00e9 um servi\u00e7o gerenciado de integra\u00e7\u00e3o e entrega cont\u00ednua (CI/CD) que permite automatizar o processo de implanta\u00e7\u00e3o de software na AWS. Com o AWS Pipeline, \u00e9 poss\u00edvel criar pipelines de implanta\u00e7\u00e3o que automatizam as etapas de compila\u00e7\u00e3o, teste e implanta\u00e7\u00e3o de software.","title":"Servi\u00e7o AWS Pipeline"},{"location":"projetos/8.Pipeline/#caracteristicas-do-aws-pipeline","text":"Algumas das principais caracter\u00edsticas do AWS Pipeline s\u00e3o: Automa\u00e7\u00e3o do processo de implanta\u00e7\u00e3o : O AWS Pipeline automatiza o processo de implanta\u00e7\u00e3o de software na AWS, permitindo que voc\u00ea crie pipelines de implanta\u00e7\u00e3o que incluem compila\u00e7\u00e3o, teste e implanta\u00e7\u00e3o. Suporte a v\u00e1rias fontes de c\u00f3digo : O AWS Pipeline oferece suporte a v\u00e1rias fontes de c\u00f3digo, incluindo reposit\u00f3rios Git, reposit\u00f3rios S3 e reposit\u00f3rios do AWS CodeCommit. Integra\u00e7\u00e3o com outros servi\u00e7os da AWS : O AWS Pipeline se integra com outros servi\u00e7os da AWS, como o AWS CodeBuild, AWS CodeDeploy e AWS CloudFormation, permitindo que voc\u00ea crie pipelines de implanta\u00e7\u00e3o mais complexos. Visualiza\u00e7\u00e3o do progresso do pipeline : O AWS Pipeline oferece uma interface visual que permite que voc\u00ea visualize o progresso do pipeline de implanta\u00e7\u00e3o e identifique rapidamente quaisquer problemas que possam ocorrer durante o processo de implanta\u00e7\u00e3o.","title":"Caracter\u00edsticas do AWS Pipeline"},{"location":"projetos/8.Pipeline/#como-funciona-o-aws-pipeline","text":"O AWS Pipeline funciona criando pipelines de implanta\u00e7\u00e3o que automatizam as etapas de compila\u00e7\u00e3o, teste e implanta\u00e7\u00e3o de software. Para usar o AWS Pipeline, basta seguir alguns passos simples: Criar um pipeline : Crie um pipeline de implanta\u00e7\u00e3o no console do AWS Pipeline ou usando a API do AWS Pipeline. Configurar a origem do c\u00f3digo : Escolha a fonte do c\u00f3digo para o pipeline, como um reposit\u00f3rio Git ou S3. Configurar a compila\u00e7\u00e3o : Configure a compila\u00e7\u00e3o do c\u00f3digo usando o AWS CodeBuild ou outro servi\u00e7o de compila\u00e7\u00e3o. Configurar o teste : Configure o teste do c\u00f3digo usando ferramentas de teste, como o AWS CodeBuild. Configurar a implanta\u00e7\u00e3o : Configure a implanta\u00e7\u00e3o do c\u00f3digo usando o AWS CodeDeploy ou outro servi\u00e7o de implanta\u00e7\u00e3o. Executar o pipeline : Execute o pipeline de implanta\u00e7\u00e3o e monitore o progresso usando a interface visual do AWS Pipeline.","title":"Como funciona o AWS Pipeline"},{"location":"projetos/8.Pipeline/#conclusao","text":"O AWS Pipeline \u00e9 uma solu\u00e7\u00e3o eficiente e escal\u00e1vel para a automa\u00e7\u00e3o do processo de implanta\u00e7\u00e3o de software na AWS. Com o AWS Pipeline, \u00e9 poss\u00edvel criar pipelines de implanta\u00e7\u00e3o que automatizam as etapas de compila\u00e7\u00e3o, teste e implanta\u00e7\u00e3o de software, permitindo que voc\u00ea implante seu software com mais rapidez e seguran\u00e7a. Ao oferecer suporte a v\u00e1rias fontes de c\u00f3digo e integrar-se com outros servi\u00e7os da AWS, como o AWS CodeBuild, AWS CodeDeploy e AWS CloudFormation, o AWS Pipeline permite que voc\u00ea crie pipelines de implanta\u00e7\u00e3o mais complexos para atender \u00e0s suas necessidades espec\u00edficas de implanta\u00e7\u00e3o de software.","title":"Conclus\u00e3o"},{"location":"projetos/9.ECS/","text":"Servi\u00e7o AWS ECS \u00b6 O Amazon Elastic Container Service (ECS) \u00e9 um servi\u00e7o gerenciado que permite executar aplicativos em cont\u00eaineres na nuvem da AWS. Ele ajuda a implantar e gerenciar aplicativos em cont\u00eaineres com facilidade e seguran\u00e7a, usando um ambiente escal\u00e1vel e flex\u00edvel. Caracter\u00edsticas do AWS ECS \u00b6 Algumas das principais caracter\u00edsticas do AWS ECS s\u00e3o: Gerenciamento de cont\u00eaineres escal\u00e1vel : O ECS \u00e9 um servi\u00e7o altamente escal\u00e1vel que permite executar milhares de cont\u00eaineres em uma \u00fanica inst\u00e2ncia. Alta disponibilidade : O ECS \u00e9 projetado para oferecer alta disponibilidade, reduzindo a possibilidade de interrup\u00e7\u00f5es de servi\u00e7o. Integra\u00e7\u00e3o com outros servi\u00e7os da AWS : O ECS \u00e9 integrado com outros servi\u00e7os da AWS, como o Elastic Load Balancer, o Amazon S3 e o Amazon VPC. Suporte a v\u00e1rios tipos de cont\u00eaineres : O ECS oferece suporte a v\u00e1rios tipos de cont\u00eaineres, incluindo Docker e containerd. Como funciona o AWS ECS \u00b6 O AWS ECS \u00e9 composto de v\u00e1rios componentes, incluindo clusters, servi\u00e7os e tarefas. O ECS usa o Amazon EC2 para executar cont\u00eaineres em inst\u00e2ncias EC2, ou o AWS Fargate para executar cont\u00eaineres sem precisar gerenciar inst\u00e2ncias EC2. Para usar o AWS ECS, siga estes passos simples: Crie um cluster : Crie um cluster ECS para executar seus aplicativos em cont\u00eaineres. Os clusters s\u00e3o criados usando o console do ECS ou a API do ECS. Defina tarefas : Crie uma ou mais tarefas que descrevam como executar um ou mais cont\u00eaineres. Crie servi\u00e7os : Crie um ou mais servi\u00e7os que usem as tarefas definidas para gerenciar a execu\u00e7\u00e3o de cont\u00eaineres. Inicie a execu\u00e7\u00e3o : Inicie a execu\u00e7\u00e3o de seus servi\u00e7os para implantar seus aplicativos em cont\u00eaineres. Gerencie os servi\u00e7os : Gerencie os servi\u00e7os implantados para garantir que eles estejam sempre em execu\u00e7\u00e3o e dispon\u00edveis. Conclus\u00e3o \u00b6 O Amazon Elastic Container Service (ECS) \u00e9 uma plataforma eficiente para executar e gerenciar aplicativos em cont\u00eaineres na nuvem da AWS. Com sua alta escalabilidade e flexibilidade, o ECS \u00e9 uma solu\u00e7\u00e3o ideal para empresas que buscam uma forma segura e confi\u00e1vel de executar aplicativos em cont\u00eaineres. Ao integrar-se com outros servi\u00e7os da AWS, como o Elastic Load Balancer, o Amazon S3 e o Amazon VPC, o ECS permite que voc\u00ea crie uma infraestrutura de aplicativos em cont\u00eaineres altamente personalizada que atenda \u00e0s suas necessidades espec\u00edficas.","title":"9. ECS"},{"location":"projetos/9.ECS/#servico-aws-ecs","text":"O Amazon Elastic Container Service (ECS) \u00e9 um servi\u00e7o gerenciado que permite executar aplicativos em cont\u00eaineres na nuvem da AWS. Ele ajuda a implantar e gerenciar aplicativos em cont\u00eaineres com facilidade e seguran\u00e7a, usando um ambiente escal\u00e1vel e flex\u00edvel.","title":"Servi\u00e7o AWS ECS"},{"location":"projetos/9.ECS/#caracteristicas-do-aws-ecs","text":"Algumas das principais caracter\u00edsticas do AWS ECS s\u00e3o: Gerenciamento de cont\u00eaineres escal\u00e1vel : O ECS \u00e9 um servi\u00e7o altamente escal\u00e1vel que permite executar milhares de cont\u00eaineres em uma \u00fanica inst\u00e2ncia. Alta disponibilidade : O ECS \u00e9 projetado para oferecer alta disponibilidade, reduzindo a possibilidade de interrup\u00e7\u00f5es de servi\u00e7o. Integra\u00e7\u00e3o com outros servi\u00e7os da AWS : O ECS \u00e9 integrado com outros servi\u00e7os da AWS, como o Elastic Load Balancer, o Amazon S3 e o Amazon VPC. Suporte a v\u00e1rios tipos de cont\u00eaineres : O ECS oferece suporte a v\u00e1rios tipos de cont\u00eaineres, incluindo Docker e containerd.","title":"Caracter\u00edsticas do AWS ECS"},{"location":"projetos/9.ECS/#como-funciona-o-aws-ecs","text":"O AWS ECS \u00e9 composto de v\u00e1rios componentes, incluindo clusters, servi\u00e7os e tarefas. O ECS usa o Amazon EC2 para executar cont\u00eaineres em inst\u00e2ncias EC2, ou o AWS Fargate para executar cont\u00eaineres sem precisar gerenciar inst\u00e2ncias EC2. Para usar o AWS ECS, siga estes passos simples: Crie um cluster : Crie um cluster ECS para executar seus aplicativos em cont\u00eaineres. Os clusters s\u00e3o criados usando o console do ECS ou a API do ECS. Defina tarefas : Crie uma ou mais tarefas que descrevam como executar um ou mais cont\u00eaineres. Crie servi\u00e7os : Crie um ou mais servi\u00e7os que usem as tarefas definidas para gerenciar a execu\u00e7\u00e3o de cont\u00eaineres. Inicie a execu\u00e7\u00e3o : Inicie a execu\u00e7\u00e3o de seus servi\u00e7os para implantar seus aplicativos em cont\u00eaineres. Gerencie os servi\u00e7os : Gerencie os servi\u00e7os implantados para garantir que eles estejam sempre em execu\u00e7\u00e3o e dispon\u00edveis.","title":"Como funciona o AWS ECS"},{"location":"projetos/9.ECS/#conclusao","text":"O Amazon Elastic Container Service (ECS) \u00e9 uma plataforma eficiente para executar e gerenciar aplicativos em cont\u00eaineres na nuvem da AWS. Com sua alta escalabilidade e flexibilidade, o ECS \u00e9 uma solu\u00e7\u00e3o ideal para empresas que buscam uma forma segura e confi\u00e1vel de executar aplicativos em cont\u00eaineres. Ao integrar-se com outros servi\u00e7os da AWS, como o Elastic Load Balancer, o Amazon S3 e o Amazon VPC, o ECS permite que voc\u00ea crie uma infraestrutura de aplicativos em cont\u00eaineres altamente personalizada que atenda \u00e0s suas necessidades espec\u00edficas.","title":"Conclus\u00e3o"},{"location":"projetos/changelog/","text":"Changelog \u00b6 Material for MkDocs Insiders \u00b6 4.21.1 _ August 13, 2022 \u00b6 Fixed #4176 : Broken image when avatar is served by Gravatar Fixed #4212 : Deferred search initialization for file:// locations 4.21.0 _ July 17, 2022 \u00b6 Added meta plugin: set front matter for all pages in a folder Fixed #4114 : Tags plugin fails if only tags_extra_files is set 4.20.1 _ July 11, 2022 \u00b6 Fixed #4105 : Tags plugin fails if tags_file is not set (4.20.0 regression) 4.20.0 _ July 7, 2022 \u00b6 Added support for additional tags indexes Fixed #4100 : Tag icons not shown in tags index 4.19.2 _ July 4, 2022 \u00b6 Fixed #4051 : Privacy plugin fails if symlinking isn't allowed on Windows 4.19.1 _ June 25, 2022 \u00b6 Added mkdocs-git-committers-plugin to Dockerfile Added mkdocs-git-revision-date-localized-plugin to Dockerfile 4.19.0 _ June 24, 2022 \u00b6 Added support for document contributors Updated French translations for cookie consent 4.18.2 _ June 16, 2022 \u00b6 Fixed #4026 : Fixed tooltips not mounted for nested navigation links 4.18.1 _ June 14, 2022 \u00b6 Fixed #3990 : Chinese search highlighting not working on non-boundaries 4.18.0 _ June 11, 2022 \u00b6 Added support for automatic dark/light mode Fixed #4009 : Privacy plugin uses invalid paths for file cache on Windows 4.17.2 _ June 5, 2022 \u00b6 Added support for custom jieba dictionaries (Chinese search) 4.17.1 _ June 5, 2022 \u00b6 Added support for cookie consent reject button Added support for cookie consent custom button ordering Fixed #3988 : Content tab not focused after alternating anchor links 4.17.0 _ June 4, 2022 \u00b6 Added support for content tabs anchor links (deep linking) Fixed #3975 : Detect composition events in search interface (Chinese) Fixed #3980 : Search plugin doesn't use title set via front matter 4.16.2 _ May 29, 2022 \u00b6 Fixed #3961 : Nested sections triggered build error for navigation tabs 4.16.1 _ May 28, 2022 \u00b6 Switched feedback widget rating titles to tooltips Improved contrast of link colors for light/dark color schemes Fixed #3950 : Sticky navigation tabs rendering broken (4.15.2 regression) Fixed #3958 : Links invisible when using white primary color 4.16.0 _ May 25, 2022 \u00b6 Added support for navigation pruning Fixed search results for non-segmented characters (4.15.2 regression) 4.15.2 _ May 22, 2022 \u00b6 Removed workaround for abbr on touch devices (superseded by tooltips) Fixed #3915 : Improved Chinese search query segmentation Fixed #3938 : Fixed tooltips position for navigation titles with ellipsis 4.15.1 _ May 14, 2022 \u00b6 Improved performance of element focus obervables Fixed #3531 : Added prev/next buttons to content tabs Fixed tooltip positioning when host element is hidden 4.15.0 _ May 8, 2022 \u00b6 Added support for improved tooltips Fixed #3785 : Show tooltip on hover for overflowing navigation link 4.14.0 _ May 5, 2022 \u00b6 Added Chinese language support to built-in search plugin Fixed all-numeric page titles raising error in social plugin 4.13.2 _ April 30, 2022 \u00b6 Improved caching of downloaded resources in privacy plugin Fixed #3851 : External images not downloaded by privacy plugin 4.13.1 _ April 25, 2022 \u00b6 Fixed #3839 : Tags plugin breaks without icons (4.13.0 regression) 4.13.0 _ April 24, 2022 \u00b6 Added support for tag icons 4.12.0 _ March 27, 2022 \u00b6 Added support for card grids and grid layouts Fixed #3685 : Annotations sometimes broken when using instant loading Fixed #3742 : Automatically add Mermaid.js when building for offline usage 4.11.0 _ March 6, 2022 \u00b6 Added support for excluding external assets from privacy plugin 4.10.1 _ March 2, 2022 \u00b6 Added missing build dependencies to Dockerfile Fixed encoding issues in privacy plugin, now forcing UTF-8 encoding Fixed #3624 : Scroll to active navigation item unreliable in Firefox Fixed #3642 : Privacy plugin errors when font setting was omitted 4.10.0 _ February 27, 2022 \u00b6 Added support for offline plugin (supersedes offline search support) Improved built-in privacy plugin to download nested JavaScript assets Refactored configuration of built-in privacy plugin 4.9.1 _ February 21, 2022 \u00b6 Fixed #3610 : missing lxml dependency for privacy plugin Fixed error when charset is missing in content-type header 4.9.0 _ February 20, 2022 \u00b6 Added privacy plugin: automatic downloading of external assets 4.8.3 _ February 13, 2022 \u00b6 Fixed #3560 : Mermaid diagrams don't render for file:// locations 4.8.2 _ February 10, 2022 \u00b6 Fixed #3559 : Mermaid diagrams don't render inside closed details 4.8.1 _ February 6, 2022 \u00b6 Fixed jump back to top on mobile when using anchor following 4.8.0 _ February 6, 2022 \u00b6 Added support for anchor following table of contents (= auto scroll) 4.7.2 _ February 2, 2022 \u00b6 Fixed #3526 : Transparent sidebar title due to Safari bug Fixed #3528 : Firefox sometimes clips text in flow chart diagrams 4.7.1 _ January 30, 2022 \u00b6 Fixed #3506 : Tags index not respecting title set via front matter 4.7.0 _ January 25, 2022 \u00b6 Added native support for offline search 4.6.1 _ January 16, 2022 \u00b6 Fixed #3459 : Section index pages picking up wrong title 4.6.0 _ January 11, 2022 \u00b6 Added support for annotations (outside of code blocks) 4.5.2 _ January 8, 2022 \u00b6 Fixed #3440 : Content tab indicator not moving when using linking Fixed #3445 : Content tab switch flickers/jitters when using linking 4.5.1 _ January 2, 2022 \u00b6 Added support for setting initial state of cookie consent Fixed #3396 : Disappearing link in navigation due to Safari bug 4.5.0 _ December 16, 2021 \u00b6 Added support for navigation icons 4.4.0 _ December 10, 2021 \u00b6 Added support for code annotation anchor links (deep linking) Added new code annotation syntax modifier to strip comment Updated German translations for cookie consent 4.3.0 _ December 5, 2021 \u00b6 Added support for custom fonts in social cards Fixed #3300 : Announcement bar reappearing when using instant loading 4.2.0 _ December 2, 2021 \u00b6 Added support for dismissable announcement bar Added support for named placeholders in feedback widget 4.1.0 _ November 30, 2021 \u00b6 Added support for passing page title to feedback forms 4.0.0 _ November 28, 2021 \u00b6 Removed deprecated content tabs legacy implementation Removed deprecated seealso admonition type Removed deprecated site_keywords setting (unsupported by MkDocs) Removed deprecated prebuilt search index support Removed deprecated web app manifest \u2013 use customization Removed extracopyright variable \u2013 use new copyright partial Removed Disqus integation \u2013 use customization Switched to :is() selectors for simple selector lists Switched autoprefixer from last 4 years to last 2 years Improved CSS overall to match modern standards Improved CSS variable semantics for fonts Improved extensibility by restructuring partials Improved handling of details when printing Improved keyboard navigation for footnotes Fixed #3214 : Search highlighting breaks site when empty 3.2.3 _ November 20, 2021 \u00b6 Updated Swedish and French translations Removed support for .mermaid-experimental class (now .mermaid ) Fixed #3202 : Cookie consent not dismissable on file:// locations Fixed #3216 : Cookie consent not dismissed when invoked via anchor Fixed #3232 : Mermaid.js sometimes runs twice (race condition) 3.2.2 _ November 6, 2021 \u00b6 Fixed always last feedback rating being sent Fixed #3145 : Code annotations eat whole comment lines Fixed #3170 : Feedback widget doesn't send data to GA4 3.2.1 _ November 4, 2021 \u00b6 Added support for custom Mermaid.js version via additional JavaScript Fixed some configuration edge cases for tags plugin (3.1.5 regression) Fixed feedback widget title not being centered in Firefox Fixed #3179 : Safari doesn't send request for feedback widget 3.2.0 _ October 31, 2021 \u00b6 Added support for feedback widget (Was this page helpful?) 3.1.5 _ October 28, 2021 \u00b6 Fixed #3144 : Rogue link when using tags with auto-populated navigation Fixed #3147 : Code block line numbers appear in search results Fixed #3158 : Social cards do not strip HTML tags from title 3.1.4 _ October 17, 2021 \u00b6 Fixed #2974 : Text cropped with other fonts than Roboto in social plugin Fixed #3099 : Encoding problems with non-latin character in social plugin Fixed #3112 : Japanese segmenter not executed as part of new tokenizer Fixed tags (front matter) appearing in search with disabled tags plugin 3.1.3 _ October 12, 2021 \u00b6 Added warnings to search plugin for unsupported options and syntax Fixed #3503 : Search sometimes returns entire page Fixed #3089 : Single-line code annotations disappear when printing 3.1.2 _ October 6, 2021 \u00b6 Fixed incorrect path separators for social cards on Windows 3.1.1 _ September 26, 2021 \u00b6 Fixed ordering bug in search exclusion logic 3.1.0 _ September 26, 2021 \u00b6 Added support for excluding pages, sections, and elements from search Fixed #2803 : Code block annotations not visible when printing 3.0.1 _ September 19, 2021 \u00b6 Added support for using literal h1-6 tags for search plugin Fixed search plugin breaking on void elements without slashes Fixed search plugin filtering link contents from headlines Fixed search plugin handling of multiple h1 headlines Fixed search plugin handling of missing h1 headlines 3.0.0 _ September 13, 2021 \u00b6 Rewrite of MkDocs' search plugin Added support for rich search previews Added support for tokenizer with lookahead Improved search indexing performance (twice as fast) Improved search highlighting 2.13.3 _ September 1, 2021 \u00b6 Added support for disabling social card generation 2.13.2 _ August 25, 2021 \u00b6 Fixed #2965 : Social plugin error when primary color is not defined 2.13.1 _ August 21, 2021 \u00b6 Fixed #2948 : Social cards are not cached Fixed #2953 : Mermaid.js diagrams can't be centered anymore 2.13.0 _ August 7, 2021 \u00b6 Added support for custom colors in social cards 2.12.2 _ August 4, 2021 \u00b6 Fixed #2891 : Division by zero error in social plugin 2.12.1 _ July 26, 2021 \u00b6 Fixed error in social plugin when site_description was not set Fixed error in social plugin for non-ASCII characters 2.12.0 _ July 25, 2021 \u00b6 Added support for social cards 2.11.1 _ July 20, 2021 \u00b6 Fixed order of tags index, now sorted alphabetically 2.11.0 _ July 18, 2021 \u00b6 Improved Mermaid.js intergration, now stable Added support for sequence diagrams Added support for entity relationship diagrams Added support for cookie consent configuration Added feature flag to always enable annotations 2.10.0 _ July 10, 2021 \u00b6 Added support for cookie consent Fixed #2807 : Back-to-top button not hidden when using sticky tabs 2.9.2 _ May 30, 2021 \u00b6 Moved tags to partial for easier customization Added support for hiding tags on any page 2.9.1 _ May 24, 2021 \u00b6 Added missing guard for linking of content tabs 2.9.0 _ May 23, 2021 \u00b6 Added support for linking of content tabs 2.8.0 _ May 12, 2021 \u00b6 Added support for boosting pages in search 2.7.2 _ May 8, 2021 \u00b6 Fixed #2638 : Warnings shown when using tags plugin without directory URLs 2.7.1 _ May 3, 2021 \u00b6 Fixed git-revision-date-localized plugin integration (2.7.0 regression) 2.7.0 _ May 1, 2021 \u00b6 Added support for tags (with search integration) 2.6.0 _ April 11, 2021 \u00b6 Stay on page when switching versions 2.5.0 _ March 28, 2021 \u00b6 Added support for version warning 2.4.0 _ March 20, 2021 \u00b6 Added support for custom admonition icons Fixed #2444 : Code block annotations with extra comments have wrong index 2.3.1 _ March 14, 2021 \u00b6 Fixed anchor offset for permalinks when using sticky navigation tabs 2.3.0 _ March 13, 2021 \u00b6 Added support for back-to-top button 2.2.1 _ March 4, 2021 \u00b6 Fixed #2382 : Repository stats failing when no release tag is present 2.2.0 _ February 28, 2021 \u00b6 Added support for code block annotations 2.1.0 _ February 26, 2021 \u00b6 Added support for anchor tracking 2.0.0 _ February 24, 2021 \u00b6 Migrated Insiders to the new architecture Swapped color palette toggle configuration 1.17.0 _ January 31, 2021 \u00b6 Added support for section index pages 1.16.1 _ January 26, 2021 \u00b6 Fixed #2249 : Instant loading + sticky tabs result in invalid links Fixed #2248 : Search highlighting URL parameter always added Fixed #2235 : Version selector doesn't select current version for aliases 1.16.0 _ January 7, 2021 \u00b6 Added latest release to repository info (GitHub) Slight facelift of repository info (lighter fonts, spacing and icons) 1.15.0 _ January 2, 2021 \u00b6 Added support for native Mermaid.js integration 1.14.0 _ December 30, 2020 \u00b6 Added support for sharing searches 1.13.2 _ December 22, 2020 \u00b6 Fixed version selector + sticky tabs navigation rendering issues Fixed version selector wrapping 1.13.1 _ December 20, 2020 \u00b6 Removed horizontal scrollbars on language and version selector Fixed type conversion in JavaScript config 1.13.0 _ December 13, 2020 \u00b6 Refactored navigation tabs to simplify grouping behavior Added support for sticky navigation tabs Added support for arbitrary links in navigation tabs Fixed #2098 : Subsequent active subsection not highlighted correctly 1.12.1 _ December 8, 2020 \u00b6 Fixed empty language selector being shown 1.12.0 _ December 6, 2020 \u00b6 Added support for adding a language selector 1.11.2 _ November 29, 2020 \u00b6 Fixed #2068 : Search highlight interprets code blocks as JavaScript 1.11.1 _ November 29, 2020 \u00b6 Refactored styling to be more stable and easier to adjust Fixed some styling regressions from latest features 1.11.0 _ November 22, 2020 \u00b6 Added support for rendering admonitions as inline blocks 1.10.0 _ November 15, 2020 \u00b6 Added support for integrating table of contents into navigation 1.9.0 _ November 7, 2020 \u00b6 Added support for hiding navigation and table of contents on any page Removed autohiding table of contents when empty 1.8.0 _ November 1, 2020 \u00b6 Added support for navigation sections Fixed appearance of inactive search suggestions 1.7.0 _ October 25, 2020 \u00b6 Added support for deploying multiple versions Fixed alignment of sidebar when content area is too small 1.6.0 _ October 11, 2020 \u00b6 Added support for search suggestions to save keystrokes Added support for removing Made with Material for MkDocs from footer Fixed #1915 : search should go to first result by pressing Enter 1.5.1 _ September 21, 2020 \u00b6 Fixed content area stretching to whole width for long code blocks 1.5.0 _ September 19, 2020 \u00b6 Added support for autohiding table of contents when empty 1.4.1 _ September 6, 2020 \u00b6 Improved typeahead and search result relevance and scoring 1.4.0 _ August 30, 2020 \u00b6 Added support for autohiding header on scroll 1.3.0 _ August 26, 2020 \u00b6 Added support for user-selectable color palettes 1.2.0 _ August 11, 2020 \u00b6 Added feature to expand navigation by default 1.1.0 _ August 3, 2020 \u00b6 Added highlighting of search results 1.0.0 _ July 14, 2020 \u00b6 Added grouping of search results Added missing query terms to search result Improved search result relevance and scoring","title":"Changelog"},{"location":"projetos/changelog/#changelog","text":"","title":"Changelog"},{"location":"projetos/changelog/#material-for-mkdocs-insiders","text":"","title":"Material for MkDocs Insiders"},{"location":"projetos/changelog/#4.21.1","text":"Fixed #4176 : Broken image when avatar is served by Gravatar Fixed #4212 : Deferred search initialization for file:// locations","title":"4.21.1 _ August 13, 2022"},{"location":"projetos/changelog/#4.21.0","text":"Added meta plugin: set front matter for all pages in a folder Fixed #4114 : Tags plugin fails if only tags_extra_files is set","title":"4.21.0 _ July 17, 2022"},{"location":"projetos/changelog/#4.20.1","text":"Fixed #4105 : Tags plugin fails if tags_file is not set (4.20.0 regression)","title":"4.20.1 _ July 11, 2022"},{"location":"projetos/changelog/#4.20.0","text":"Added support for additional tags indexes Fixed #4100 : Tag icons not shown in tags index","title":"4.20.0 _ July 7, 2022"},{"location":"projetos/changelog/#4.19.2","text":"Fixed #4051 : Privacy plugin fails if symlinking isn't allowed on Windows","title":"4.19.2 _ July 4, 2022"},{"location":"projetos/changelog/#4.19.1","text":"Added mkdocs-git-committers-plugin to Dockerfile Added mkdocs-git-revision-date-localized-plugin to Dockerfile","title":"4.19.1 _ June 25, 2022"},{"location":"projetos/changelog/#4.19.0","text":"Added support for document contributors Updated French translations for cookie consent","title":"4.19.0 _ June 24, 2022"},{"location":"projetos/changelog/#4.18.2","text":"Fixed #4026 : Fixed tooltips not mounted for nested navigation links","title":"4.18.2 _ June 16, 2022"},{"location":"projetos/changelog/#4.18.1","text":"Fixed #3990 : Chinese search highlighting not working on non-boundaries","title":"4.18.1 _ June 14, 2022"},{"location":"projetos/changelog/#4.18.0","text":"Added support for automatic dark/light mode Fixed #4009 : Privacy plugin uses invalid paths for file cache on Windows","title":"4.18.0 _ June 11, 2022"},{"location":"projetos/changelog/#4.17.2","text":"Added support for custom jieba dictionaries (Chinese search)","title":"4.17.2 _ June 5, 2022"},{"location":"projetos/changelog/#4.17.1","text":"Added support for cookie consent reject button Added support for cookie consent custom button ordering Fixed #3988 : Content tab not focused after alternating anchor links","title":"4.17.1 _ June 5, 2022"},{"location":"projetos/changelog/#4.17.0","text":"Added support for content tabs anchor links (deep linking) Fixed #3975 : Detect composition events in search interface (Chinese) Fixed #3980 : Search plugin doesn't use title set via front matter","title":"4.17.0 _ June 4, 2022"},{"location":"projetos/changelog/#4.16.2","text":"Fixed #3961 : Nested sections triggered build error for navigation tabs","title":"4.16.2 _ May 29, 2022"},{"location":"projetos/changelog/#4.16.1","text":"Switched feedback widget rating titles to tooltips Improved contrast of link colors for light/dark color schemes Fixed #3950 : Sticky navigation tabs rendering broken (4.15.2 regression) Fixed #3958 : Links invisible when using white primary color","title":"4.16.1 _ May 28, 2022"},{"location":"projetos/changelog/#4.16.0","text":"Added support for navigation pruning Fixed search results for non-segmented characters (4.15.2 regression)","title":"4.16.0 _ May 25, 2022"},{"location":"projetos/changelog/#4.15.2","text":"Removed workaround for abbr on touch devices (superseded by tooltips) Fixed #3915 : Improved Chinese search query segmentation Fixed #3938 : Fixed tooltips position for navigation titles with ellipsis","title":"4.15.2 _ May 22, 2022"},{"location":"projetos/changelog/#4.15.1","text":"Improved performance of element focus obervables Fixed #3531 : Added prev/next buttons to content tabs Fixed tooltip positioning when host element is hidden","title":"4.15.1 _ May 14, 2022"},{"location":"projetos/changelog/#4.15.0","text":"Added support for improved tooltips Fixed #3785 : Show tooltip on hover for overflowing navigation link","title":"4.15.0 _ May 8, 2022"},{"location":"projetos/changelog/#4.14.0","text":"Added Chinese language support to built-in search plugin Fixed all-numeric page titles raising error in social plugin","title":"4.14.0 _ May 5, 2022"},{"location":"projetos/changelog/#4.13.2","text":"Improved caching of downloaded resources in privacy plugin Fixed #3851 : External images not downloaded by privacy plugin","title":"4.13.2 _ April 30, 2022"},{"location":"projetos/changelog/#4.13.1","text":"Fixed #3839 : Tags plugin breaks without icons (4.13.0 regression)","title":"4.13.1 _ April 25, 2022"},{"location":"projetos/changelog/#4.13.0","text":"Added support for tag icons","title":"4.13.0 _ April 24, 2022"},{"location":"projetos/changelog/#4.12.0","text":"Added support for card grids and grid layouts Fixed #3685 : Annotations sometimes broken when using instant loading Fixed #3742 : Automatically add Mermaid.js when building for offline usage","title":"4.12.0 _ March 27, 2022"},{"location":"projetos/changelog/#4.11.0","text":"Added support for excluding external assets from privacy plugin","title":"4.11.0 _ March 6, 2022"},{"location":"projetos/changelog/#4.10.1","text":"Added missing build dependencies to Dockerfile Fixed encoding issues in privacy plugin, now forcing UTF-8 encoding Fixed #3624 : Scroll to active navigation item unreliable in Firefox Fixed #3642 : Privacy plugin errors when font setting was omitted","title":"4.10.1 _ March 2, 2022"},{"location":"projetos/changelog/#4.10.0","text":"Added support for offline plugin (supersedes offline search support) Improved built-in privacy plugin to download nested JavaScript assets Refactored configuration of built-in privacy plugin","title":"4.10.0 _ February 27, 2022"},{"location":"projetos/changelog/#4.9.1","text":"Fixed #3610 : missing lxml dependency for privacy plugin Fixed error when charset is missing in content-type header","title":"4.9.1 _ February 21, 2022"},{"location":"projetos/changelog/#4.9.0","text":"Added privacy plugin: automatic downloading of external assets","title":"4.9.0 _ February 20, 2022"},{"location":"projetos/changelog/#4.8.3","text":"Fixed #3560 : Mermaid diagrams don't render for file:// locations","title":"4.8.3 _ February 13, 2022"},{"location":"projetos/changelog/#4.8.2","text":"Fixed #3559 : Mermaid diagrams don't render inside closed details","title":"4.8.2 _ February 10, 2022"},{"location":"projetos/changelog/#4.8.1","text":"Fixed jump back to top on mobile when using anchor following","title":"4.8.1 _ February 6, 2022"},{"location":"projetos/changelog/#4.8.0","text":"Added support for anchor following table of contents (= auto scroll)","title":"4.8.0 _ February 6, 2022"},{"location":"projetos/changelog/#4.7.2","text":"Fixed #3526 : Transparent sidebar title due to Safari bug Fixed #3528 : Firefox sometimes clips text in flow chart diagrams","title":"4.7.2 _ February 2, 2022"},{"location":"projetos/changelog/#4.7.1","text":"Fixed #3506 : Tags index not respecting title set via front matter","title":"4.7.1 _ January 30, 2022"},{"location":"projetos/changelog/#4.7.0","text":"Added native support for offline search","title":"4.7.0 _ January 25, 2022"},{"location":"projetos/changelog/#4.6.1","text":"Fixed #3459 : Section index pages picking up wrong title","title":"4.6.1 _ January 16, 2022"},{"location":"projetos/changelog/#4.6.0","text":"Added support for annotations (outside of code blocks)","title":"4.6.0 _ January 11, 2022"},{"location":"projetos/changelog/#4.5.2","text":"Fixed #3440 : Content tab indicator not moving when using linking Fixed #3445 : Content tab switch flickers/jitters when using linking","title":"4.5.2 _ January 8, 2022"},{"location":"projetos/changelog/#4.5.1","text":"Added support for setting initial state of cookie consent Fixed #3396 : Disappearing link in navigation due to Safari bug","title":"4.5.1 _ January 2, 2022"},{"location":"projetos/changelog/#4.5.0","text":"Added support for navigation icons","title":"4.5.0 _ December 16, 2021"},{"location":"projetos/changelog/#4.4.0","text":"Added support for code annotation anchor links (deep linking) Added new code annotation syntax modifier to strip comment Updated German translations for cookie consent","title":"4.4.0 _ December 10, 2021"},{"location":"projetos/changelog/#4.3.0","text":"Added support for custom fonts in social cards Fixed #3300 : Announcement bar reappearing when using instant loading","title":"4.3.0 _ December 5, 2021"},{"location":"projetos/changelog/#4.2.0","text":"Added support for dismissable announcement bar Added support for named placeholders in feedback widget","title":"4.2.0 _ December 2, 2021"},{"location":"projetos/changelog/#4.1.0","text":"Added support for passing page title to feedback forms","title":"4.1.0 _ November 30, 2021"},{"location":"projetos/changelog/#4.0.0","text":"Removed deprecated content tabs legacy implementation Removed deprecated seealso admonition type Removed deprecated site_keywords setting (unsupported by MkDocs) Removed deprecated prebuilt search index support Removed deprecated web app manifest \u2013 use customization Removed extracopyright variable \u2013 use new copyright partial Removed Disqus integation \u2013 use customization Switched to :is() selectors for simple selector lists Switched autoprefixer from last 4 years to last 2 years Improved CSS overall to match modern standards Improved CSS variable semantics for fonts Improved extensibility by restructuring partials Improved handling of details when printing Improved keyboard navigation for footnotes Fixed #3214 : Search highlighting breaks site when empty","title":"4.0.0 _ November 28, 2021"},{"location":"projetos/changelog/#3.2.3","text":"Updated Swedish and French translations Removed support for .mermaid-experimental class (now .mermaid ) Fixed #3202 : Cookie consent not dismissable on file:// locations Fixed #3216 : Cookie consent not dismissed when invoked via anchor Fixed #3232 : Mermaid.js sometimes runs twice (race condition)","title":"3.2.3 _ November 20, 2021"},{"location":"projetos/changelog/#3.2.2","text":"Fixed always last feedback rating being sent Fixed #3145 : Code annotations eat whole comment lines Fixed #3170 : Feedback widget doesn't send data to GA4","title":"3.2.2 _ November 6, 2021"},{"location":"projetos/changelog/#3.2.1","text":"Added support for custom Mermaid.js version via additional JavaScript Fixed some configuration edge cases for tags plugin (3.1.5 regression) Fixed feedback widget title not being centered in Firefox Fixed #3179 : Safari doesn't send request for feedback widget","title":"3.2.1 _ November 4, 2021"},{"location":"projetos/changelog/#3.2.0","text":"Added support for feedback widget (Was this page helpful?)","title":"3.2.0 _ October 31, 2021"},{"location":"projetos/changelog/#3.1.5","text":"Fixed #3144 : Rogue link when using tags with auto-populated navigation Fixed #3147 : Code block line numbers appear in search results Fixed #3158 : Social cards do not strip HTML tags from title","title":"3.1.5 _ October 28, 2021"},{"location":"projetos/changelog/#3.1.4","text":"Fixed #2974 : Text cropped with other fonts than Roboto in social plugin Fixed #3099 : Encoding problems with non-latin character in social plugin Fixed #3112 : Japanese segmenter not executed as part of new tokenizer Fixed tags (front matter) appearing in search with disabled tags plugin","title":"3.1.4 _ October 17, 2021"},{"location":"projetos/changelog/#3.1.3","text":"Added warnings to search plugin for unsupported options and syntax Fixed #3503 : Search sometimes returns entire page Fixed #3089 : Single-line code annotations disappear when printing","title":"3.1.3 _ October 12, 2021"},{"location":"projetos/changelog/#3.1.2","text":"Fixed incorrect path separators for social cards on Windows","title":"3.1.2 _ October 6, 2021"},{"location":"projetos/changelog/#3.1.1","text":"Fixed ordering bug in search exclusion logic","title":"3.1.1 _ September 26, 2021"},{"location":"projetos/changelog/#3.1.0","text":"Added support for excluding pages, sections, and elements from search Fixed #2803 : Code block annotations not visible when printing","title":"3.1.0 _ September 26, 2021"},{"location":"projetos/changelog/#3.0.1","text":"Added support for using literal h1-6 tags for search plugin Fixed search plugin breaking on void elements without slashes Fixed search plugin filtering link contents from headlines Fixed search plugin handling of multiple h1 headlines Fixed search plugin handling of missing h1 headlines","title":"3.0.1 _ September 19, 2021"},{"location":"projetos/changelog/#3.0.0","text":"Rewrite of MkDocs' search plugin Added support for rich search previews Added support for tokenizer with lookahead Improved search indexing performance (twice as fast) Improved search highlighting","title":"3.0.0 _ September 13, 2021"},{"location":"projetos/changelog/#2.13.3","text":"Added support for disabling social card generation","title":"2.13.3 _ September 1, 2021"},{"location":"projetos/changelog/#2.13.2","text":"Fixed #2965 : Social plugin error when primary color is not defined","title":"2.13.2 _ August 25, 2021"},{"location":"projetos/changelog/#2.13.1","text":"Fixed #2948 : Social cards are not cached Fixed #2953 : Mermaid.js diagrams can't be centered anymore","title":"2.13.1 _ August 21, 2021"},{"location":"projetos/changelog/#2.13.0","text":"Added support for custom colors in social cards","title":"2.13.0 _ August 7, 2021"},{"location":"projetos/changelog/#2.12.2","text":"Fixed #2891 : Division by zero error in social plugin","title":"2.12.2 _ August 4, 2021"},{"location":"projetos/changelog/#2.12.1","text":"Fixed error in social plugin when site_description was not set Fixed error in social plugin for non-ASCII characters","title":"2.12.1 _ July 26, 2021"},{"location":"projetos/changelog/#2.12.0","text":"Added support for social cards","title":"2.12.0 _ July 25, 2021"},{"location":"projetos/changelog/#2.11.1","text":"Fixed order of tags index, now sorted alphabetically","title":"2.11.1 _ July 20, 2021"},{"location":"projetos/changelog/#2.11.0","text":"Improved Mermaid.js intergration, now stable Added support for sequence diagrams Added support for entity relationship diagrams Added support for cookie consent configuration Added feature flag to always enable annotations","title":"2.11.0 _ July 18, 2021"},{"location":"projetos/changelog/#2.10.0","text":"Added support for cookie consent Fixed #2807 : Back-to-top button not hidden when using sticky tabs","title":"2.10.0 _ July 10, 2021"},{"location":"projetos/changelog/#2.9.2","text":"Moved tags to partial for easier customization Added support for hiding tags on any page","title":"2.9.2 _ May 30, 2021"},{"location":"projetos/changelog/#2.9.1","text":"Added missing guard for linking of content tabs","title":"2.9.1 _ May 24, 2021"},{"location":"projetos/changelog/#2.9.0","text":"Added support for linking of content tabs","title":"2.9.0 _ May 23, 2021"},{"location":"projetos/changelog/#2.8.0","text":"Added support for boosting pages in search","title":"2.8.0 _ May 12, 2021"},{"location":"projetos/changelog/#2.7.2","text":"Fixed #2638 : Warnings shown when using tags plugin without directory URLs","title":"2.7.2 _ May 8, 2021"},{"location":"projetos/changelog/#2.7.1","text":"Fixed git-revision-date-localized plugin integration (2.7.0 regression)","title":"2.7.1 _ May 3, 2021"},{"location":"projetos/changelog/#2.7.0","text":"Added support for tags (with search integration)","title":"2.7.0 _ May 1, 2021"},{"location":"projetos/changelog/#2.6.0","text":"Stay on page when switching versions","title":"2.6.0 _ April 11, 2021"},{"location":"projetos/changelog/#2.5.0","text":"Added support for version warning","title":"2.5.0 _ March 28, 2021"},{"location":"projetos/changelog/#2.4.0","text":"Added support for custom admonition icons Fixed #2444 : Code block annotations with extra comments have wrong index","title":"2.4.0 _ March 20, 2021"},{"location":"projetos/changelog/#2.3.1","text":"Fixed anchor offset for permalinks when using sticky navigation tabs","title":"2.3.1 _ March 14, 2021"},{"location":"projetos/changelog/#2.3.0","text":"Added support for back-to-top button","title":"2.3.0 _ March 13, 2021"},{"location":"projetos/changelog/#2.2.1","text":"Fixed #2382 : Repository stats failing when no release tag is present","title":"2.2.1 _ March 4, 2021"},{"location":"projetos/changelog/#2.2.0","text":"Added support for code block annotations","title":"2.2.0 _ February 28, 2021"},{"location":"projetos/changelog/#2.1.0","text":"Added support for anchor tracking","title":"2.1.0 _ February 26, 2021"},{"location":"projetos/changelog/#2.0.0","text":"Migrated Insiders to the new architecture Swapped color palette toggle configuration","title":"2.0.0 _ February 24, 2021"},{"location":"projetos/changelog/#1.17.0","text":"Added support for section index pages","title":"1.17.0 _ January 31, 2021"},{"location":"projetos/changelog/#1.16.1","text":"Fixed #2249 : Instant loading + sticky tabs result in invalid links Fixed #2248 : Search highlighting URL parameter always added Fixed #2235 : Version selector doesn't select current version for aliases","title":"1.16.1 _ January 26, 2021"},{"location":"projetos/changelog/#1.16.0","text":"Added latest release to repository info (GitHub) Slight facelift of repository info (lighter fonts, spacing and icons)","title":"1.16.0 _ January 7, 2021"},{"location":"projetos/changelog/#1.15.0","text":"Added support for native Mermaid.js integration","title":"1.15.0 _ January 2, 2021"},{"location":"projetos/changelog/#1.14.0","text":"Added support for sharing searches","title":"1.14.0 _ December 30, 2020"},{"location":"projetos/changelog/#1.13.2","text":"Fixed version selector + sticky tabs navigation rendering issues Fixed version selector wrapping","title":"1.13.2 _ December 22, 2020"},{"location":"projetos/changelog/#1.13.1","text":"Removed horizontal scrollbars on language and version selector Fixed type conversion in JavaScript config","title":"1.13.1 _ December 20, 2020"},{"location":"projetos/changelog/#1.13.0","text":"Refactored navigation tabs to simplify grouping behavior Added support for sticky navigation tabs Added support for arbitrary links in navigation tabs Fixed #2098 : Subsequent active subsection not highlighted correctly","title":"1.13.0 _ December 13, 2020"},{"location":"projetos/changelog/#1.12.1","text":"Fixed empty language selector being shown","title":"1.12.1 _ December 8, 2020"},{"location":"projetos/changelog/#1.12.0","text":"Added support for adding a language selector","title":"1.12.0 _ December 6, 2020"},{"location":"projetos/changelog/#1.11.2","text":"Fixed #2068 : Search highlight interprets code blocks as JavaScript","title":"1.11.2 _ November 29, 2020"},{"location":"projetos/changelog/#1.11.1","text":"Refactored styling to be more stable and easier to adjust Fixed some styling regressions from latest features","title":"1.11.1 _ November 29, 2020"},{"location":"projetos/changelog/#1.11.0","text":"Added support for rendering admonitions as inline blocks","title":"1.11.0 _ November 22, 2020"},{"location":"projetos/changelog/#1.10.0","text":"Added support for integrating table of contents into navigation","title":"1.10.0 _ November 15, 2020"},{"location":"projetos/changelog/#1.9.0","text":"Added support for hiding navigation and table of contents on any page Removed autohiding table of contents when empty","title":"1.9.0 _ November 7, 2020"},{"location":"projetos/changelog/#1.8.0","text":"Added support for navigation sections Fixed appearance of inactive search suggestions","title":"1.8.0 _ November 1, 2020"},{"location":"projetos/changelog/#1.7.0","text":"Added support for deploying multiple versions Fixed alignment of sidebar when content area is too small","title":"1.7.0 _ October 25, 2020"},{"location":"projetos/changelog/#1.6.0","text":"Added support for search suggestions to save keystrokes Added support for removing Made with Material for MkDocs from footer Fixed #1915 : search should go to first result by pressing Enter","title":"1.6.0 _ October 11, 2020"},{"location":"projetos/changelog/#1.5.1","text":"Fixed content area stretching to whole width for long code blocks","title":"1.5.1 _ September 21, 2020"},{"location":"projetos/changelog/#1.5.0","text":"Added support for autohiding table of contents when empty","title":"1.5.0 _ September 19, 2020"},{"location":"projetos/changelog/#1.4.1","text":"Improved typeahead and search result relevance and scoring","title":"1.4.1 _ September 6, 2020"},{"location":"projetos/changelog/#1.4.0","text":"Added support for autohiding header on scroll","title":"1.4.0 _ August 30, 2020"},{"location":"projetos/changelog/#1.3.0","text":"Added support for user-selectable color palettes","title":"1.3.0 _ August 26, 2020"},{"location":"projetos/changelog/#1.2.0","text":"Added feature to expand navigation by default","title":"1.2.0 _ August 11, 2020"},{"location":"projetos/changelog/#1.1.0","text":"Added highlighting of search results","title":"1.1.0 _ August 3, 2020"},{"location":"projetos/changelog/#1.0.0","text":"Added grouping of search results Added missing query terms to search result Improved search result relevance and scoring","title":"1.0.0 _ July 14, 2020"},{"location":"projetos/construcao/","text":"Em Contru\u00e7\u00e3o \u00b6 Visualiza\u00e7\u00e3o do Processo de Contru\u00e7\u00e3o \u00b6","title":"Cloud na Vida Real"},{"location":"projetos/construcao/#em-contrucao","text":"","title":"Em Contru\u00e7\u00e3o"},{"location":"projetos/construcao/#visualizacao-do-processo-de-contrucao","text":"","title":"Visualiza\u00e7\u00e3o do Processo de Contru\u00e7\u00e3o"},{"location":"projetos/projeto_2022/","text":"Projeto Cloud 2022 \u00b6 Infraestrutura como c\u00f3digo \u00e9 o processo de gerenciamento de infraestrutura em um arquivo ou arquivos, em vez de configurar recursos manualmente em uma dashboard. Partindo deste conceito, voc\u00ea dever\u00e1: Desenvolver uma aplica\u00e7\u00e3o capaz de provisionar uma infraestrutura por meio de uma interface amig\u00e1vel(livre escolha) para gerenciar e administr\u00e1-la (construir, alterar e deletar recursos). A rubrica abaixo pressup\u00f5e que para alcan\u00e7ar o Conceito \"B\" voc\u00ea tenha feito o Conceito \"C\" por completo. Assim, para ter \"A\" precisa que os conceitos anteriores tenham sido alcan\u00e7ados. Sua aplica\u00e7\u00e3o dever\u00e1 seguir as fun\u00e7\u00f5es (descri\u00e7\u00e3o) abaixo e a tabela completa para alcan\u00e7ar o conceito base. Conceito C+ Descri\u00e7\u00e3o CRIAR VPC cria\u00e7\u00e3o de uma VPC e sub-rede; inst\u00e2ncias : esta funcionalidade dever\u00e1 permitir a escolha de pelo menos 2 tipos de configura\u00e7\u00e3o de hosts; ainda dever\u00e1 ser poss\u00edvel aumentar e diminuir a quantidade de inst\u00e2ncias; security group : cria\u00e7\u00e3o e a associa\u00e7\u00e3o de grupos de seguran\u00e7a com inst\u00e2ncias; Usu\u00e1rio no IAM . DELETAR Inst\u00e2ncias, grupos de seguran\u00e7a e usu\u00e1rio. LISTAR Aplica\u00e7\u00e3o dever\u00e1 listar todas inst\u00e2ncias e suas regi\u00f5es, usu\u00e1rios, grupos de seguran\u00e7a e suas regras. Conceito B Descri\u00e7\u00e3o CRIAR Regras em security group; Inst\u00e2ncia em mais de uma regi\u00e3o; Associar algum tipo de restri\u00e7\u00e3o de acesso a um usu\u00e1rio; DELETAR Regras de security group; recursos implantados na Regi\u00e3o; Conceito A Descri\u00e7\u00e3o CRIAR Criar um HA de servidores web. Warning OBS: Ser\u00e1 descontado meio conceito na nota do projeto caso algum incidente ou publica\u00e7\u00e3o (vazamento) de sua chave AWS for identificada no git hub. ENTREGA Os projetos dever\u00e3o ser entregues at\u00e9 \u00e0s 23h59 do dia 25/11/2022. A entrega ser\u00e1 feita via blackboard por meio da associa\u00e7\u00e3o de seu github. Todos os projetos dever\u00e3o estar acompanhados de um roteiro (tutorial) de instala\u00e7\u00e3o e opera\u00e7\u00e3o. Ser\u00e3o sorteados/escolhidos 16 projetos para apresenta\u00e7\u00e3o no dia 01/12/2022. A publica\u00e7\u00e3o dos projetos que realizar\u00e3o a apresenta\u00e7\u00e3o ser\u00e1 no dia 28/11/2022. A apresenta\u00e7\u00e3o ser\u00e1 realizada em um tempo m\u00e1ximo de 15 minutos a partir do roteiro entregue. Falta pouco para terminar o semestre, foquem em terminar os roteiros 3 e 4 em sala e desenvolva o projeto fora do hor\u00e1rio de aula. Dica Sugerimos que voc\u00ea estude a partir de documenta\u00e7\u00f5es oficiais e tutoriais t\u00e9cnicos. * terraform.io * terraform-aws-get-started","title":"Computa\u00e7\u00e3o em Nuvem"},{"location":"projetos/projeto_2022/#projeto-cloud-2022","text":"Infraestrutura como c\u00f3digo \u00e9 o processo de gerenciamento de infraestrutura em um arquivo ou arquivos, em vez de configurar recursos manualmente em uma dashboard. Partindo deste conceito, voc\u00ea dever\u00e1: Desenvolver uma aplica\u00e7\u00e3o capaz de provisionar uma infraestrutura por meio de uma interface amig\u00e1vel(livre escolha) para gerenciar e administr\u00e1-la (construir, alterar e deletar recursos). A rubrica abaixo pressup\u00f5e que para alcan\u00e7ar o Conceito \"B\" voc\u00ea tenha feito o Conceito \"C\" por completo. Assim, para ter \"A\" precisa que os conceitos anteriores tenham sido alcan\u00e7ados. Sua aplica\u00e7\u00e3o dever\u00e1 seguir as fun\u00e7\u00f5es (descri\u00e7\u00e3o) abaixo e a tabela completa para alcan\u00e7ar o conceito base. Conceito C+ Descri\u00e7\u00e3o CRIAR VPC cria\u00e7\u00e3o de uma VPC e sub-rede; inst\u00e2ncias : esta funcionalidade dever\u00e1 permitir a escolha de pelo menos 2 tipos de configura\u00e7\u00e3o de hosts; ainda dever\u00e1 ser poss\u00edvel aumentar e diminuir a quantidade de inst\u00e2ncias; security group : cria\u00e7\u00e3o e a associa\u00e7\u00e3o de grupos de seguran\u00e7a com inst\u00e2ncias; Usu\u00e1rio no IAM . DELETAR Inst\u00e2ncias, grupos de seguran\u00e7a e usu\u00e1rio. LISTAR Aplica\u00e7\u00e3o dever\u00e1 listar todas inst\u00e2ncias e suas regi\u00f5es, usu\u00e1rios, grupos de seguran\u00e7a e suas regras. Conceito B Descri\u00e7\u00e3o CRIAR Regras em security group; Inst\u00e2ncia em mais de uma regi\u00e3o; Associar algum tipo de restri\u00e7\u00e3o de acesso a um usu\u00e1rio; DELETAR Regras de security group; recursos implantados na Regi\u00e3o; Conceito A Descri\u00e7\u00e3o CRIAR Criar um HA de servidores web. Warning OBS: Ser\u00e1 descontado meio conceito na nota do projeto caso algum incidente ou publica\u00e7\u00e3o (vazamento) de sua chave AWS for identificada no git hub. ENTREGA Os projetos dever\u00e3o ser entregues at\u00e9 \u00e0s 23h59 do dia 25/11/2022. A entrega ser\u00e1 feita via blackboard por meio da associa\u00e7\u00e3o de seu github. Todos os projetos dever\u00e3o estar acompanhados de um roteiro (tutorial) de instala\u00e7\u00e3o e opera\u00e7\u00e3o. Ser\u00e3o sorteados/escolhidos 16 projetos para apresenta\u00e7\u00e3o no dia 01/12/2022. A publica\u00e7\u00e3o dos projetos que realizar\u00e3o a apresenta\u00e7\u00e3o ser\u00e1 no dia 28/11/2022. A apresenta\u00e7\u00e3o ser\u00e1 realizada em um tempo m\u00e1ximo de 15 minutos a partir do roteiro entregue. Falta pouco para terminar o semestre, foquem em terminar os roteiros 3 e 4 em sala e desenvolva o projeto fora do hor\u00e1rio de aula. Dica Sugerimos que voc\u00ea estude a partir de documenta\u00e7\u00f5es oficiais e tutoriais t\u00e9cnicos. * terraform.io * terraform-aws-get-started","title":"Projeto Cloud 2022"},{"location":"projetos_2022/DaviReisVieira/","text":"Infraestrutura por C\u00f3digo \u00b6 Aplica\u00e7\u00e3o Front-end para gerenciar infraestrutura constru\u00edda com Terraform. Aluno: Davi Reis Vieira de Souza Curso: Engenharia da Computa\u00e7\u00e3o Semestre: 6 Contato: davirvs@al.insper.edu.br Ano: 2022 GitHub Page : https://github.com/DaviReisVieira/AWS-Core-Management AWS Core Management \u00b6 Description \u00b6 This project is a simple example of how to use Terraform to manage AWS resources. Technologies \u00b6 Requirements \u00b6 Terraform AWS CLI Python 3 Node.js AWS Account AWS IAM User Usage \u00b6 Execute the install.sh script to install the dependencies and configure the infrastructure. $ ./install.sh Open your browser and go to the URL http://localhost:3000 . You should see the following page: Tutorial \u00b6 Register in the plataform with username, password, AWS Access Key ID and AWS Secret Access Key. After registering, you will be redirected to the login page. Log in with the username and password you registered. After logging in, you will be redirected to the home page. Here you can see the AWS regions. Create a new region by clicking on the Create button after selecting the region you want to create. You can select a specific region by clicking on the region name. Here you can see the AWS resources. Create a new resource by clicking on the Create button after selecting the resource you want to create. Update the region configuration by clicking on the Update Region . Concepts \u00b6 Conceito C+ \u00b6 Criar: VPC cria\u00e7\u00e3o de uma VPC e sub-rede; inst\u00e2ncias: esta funcionalidade dever\u00e1 permitir a escolha de pelo menos 2 tipos de configura\u00e7\u00e3o de hosts; ainda dever\u00e1 ser poss\u00edvel aumentar e diminuir a quantidade de inst\u00e2ncias; security group: cria\u00e7\u00e3o e a associa\u00e7\u00e3o de grupos de seguran\u00e7a com inst\u00e2ncias; Usu\u00e1rio no IAM. Deletar: Inst\u00e2ncias, grupos de seguran\u00e7a e usu\u00e1rio. Listar: Aplica\u00e7\u00e3o dever\u00e1 listar todas inst\u00e2ncias e suas regi\u00f5es, usu\u00e1rios, grupos de seguran\u00e7a e suas regras. Conceito B \u00b6 Criar: Regras em security group; Inst\u00e2ncia em mais de uma regi\u00e3o; Associar algum tipo de restri\u00e7\u00e3o de acesso a um usu\u00e1rio; Deletar: Regras de security group; recursos implantados na Regi\u00e3o; Conceito A \u00b6 Criar: Criar um HA de servidores web. Format of variables in Terraform JSON \u00b6 Security Group { \"id\" : \"sg-0a1b2c3d\" , \"name\" : \"sg-tcp/udp-22 - davirvs\" , \"description\" : \"Security Group for EC2\" , \"ingress\" : [ { \"description\" : \"SSH\" , \"from_port\" : 22 , \"to_port\" : 22 , \"protocol\" : \"tcp\" , \"cidr_blocks\" : [ \"0.0.0.0/0\" ] } ], \"egress\" : [ { \"description\" : \"All\" , \"from_port\" : 0 , \"to_port\" : 0 , \"protocol\" : \"-1\" , \"cidr_blocks\" : [ \"0.0.0.0/0\" ] } ] } EC2 { \"name\" : \"davirvs1_ubuntu2204\" , \"ami\" : \"ami-08c40ec9ead489470\" , \"instance_type\" : \"t2.micro\" , \"security_groups_ids\" : [ \"sg-0a1b2c3d\" ] } User { \"name\" : \"davirvsTeste1\" , \"policies\" : { \"name\" : \"davirvsTeste1Restrictions\" , \"description\" : \"Estas s\u00e3o as restri\u00e7\u00f5es do usu\u00e1rio davirvsTeste1\" , \"actions\" : [ \"ec2:DescribeInstances\" , \"ec2:DescribeSecurityGroups\" ], \"resources\" : [ \"*\" ] } } Group { \"id\" : \"ug-0a1b2c3d\" , \"name\" : \"davirvsGroups1\" , \"description\" : \"davirvsGroups1 description\" , \"policies\" : { \"name\" : \"davirvsGroups1Restrictions\" , \"description\" : \"Estas s\u00e3o as restri\u00e7\u00f5es do grupo de usu\u00e1rios davirvsGroups1\" , \"actions\" : [ \"ec2:DescribeInstances\" , \"ec2:DescribeSecurityGroups\" ], \"resources\" : [ \"*\" ] } } Format of JSON variable file \u00b6 { \"aws-region\" : \"us-east-2\" , \"security_groups\" : [], \"instances\" : [], \"users\" : [], \"users_groups\" : [] }","title":"Infraestrutura por C\u00f3digo"},{"location":"projetos_2022/DaviReisVieira/#infraestrutura-por-codigo","text":"Aplica\u00e7\u00e3o Front-end para gerenciar infraestrutura constru\u00edda com Terraform. Aluno: Davi Reis Vieira de Souza Curso: Engenharia da Computa\u00e7\u00e3o Semestre: 6 Contato: davirvs@al.insper.edu.br Ano: 2022 GitHub Page : https://github.com/DaviReisVieira/AWS-Core-Management","title":"Infraestrutura por C\u00f3digo"},{"location":"projetos_2022/DaviReisVieira/#aws-core-management","text":"","title":"AWS Core Management"},{"location":"projetos_2022/DaviReisVieira/#description","text":"This project is a simple example of how to use Terraform to manage AWS resources.","title":"Description"},{"location":"projetos_2022/DaviReisVieira/#technologies","text":"","title":"Technologies"},{"location":"projetos_2022/DaviReisVieira/#requirements","text":"Terraform AWS CLI Python 3 Node.js AWS Account AWS IAM User","title":"Requirements"},{"location":"projetos_2022/DaviReisVieira/#usage","text":"Execute the install.sh script to install the dependencies and configure the infrastructure. $ ./install.sh Open your browser and go to the URL http://localhost:3000 . You should see the following page:","title":"Usage"},{"location":"projetos_2022/DaviReisVieira/#tutorial","text":"Register in the plataform with username, password, AWS Access Key ID and AWS Secret Access Key. After registering, you will be redirected to the login page. Log in with the username and password you registered. After logging in, you will be redirected to the home page. Here you can see the AWS regions. Create a new region by clicking on the Create button after selecting the region you want to create. You can select a specific region by clicking on the region name. Here you can see the AWS resources. Create a new resource by clicking on the Create button after selecting the resource you want to create. Update the region configuration by clicking on the Update Region .","title":"Tutorial"},{"location":"projetos_2022/DaviReisVieira/#concepts","text":"","title":"Concepts"},{"location":"projetos_2022/DaviReisVieira/#conceito-c","text":"Criar: VPC cria\u00e7\u00e3o de uma VPC e sub-rede; inst\u00e2ncias: esta funcionalidade dever\u00e1 permitir a escolha de pelo menos 2 tipos de configura\u00e7\u00e3o de hosts; ainda dever\u00e1 ser poss\u00edvel aumentar e diminuir a quantidade de inst\u00e2ncias; security group: cria\u00e7\u00e3o e a associa\u00e7\u00e3o de grupos de seguran\u00e7a com inst\u00e2ncias; Usu\u00e1rio no IAM. Deletar: Inst\u00e2ncias, grupos de seguran\u00e7a e usu\u00e1rio. Listar: Aplica\u00e7\u00e3o dever\u00e1 listar todas inst\u00e2ncias e suas regi\u00f5es, usu\u00e1rios, grupos de seguran\u00e7a e suas regras.","title":"Conceito C+"},{"location":"projetos_2022/DaviReisVieira/#conceito-b","text":"Criar: Regras em security group; Inst\u00e2ncia em mais de uma regi\u00e3o; Associar algum tipo de restri\u00e7\u00e3o de acesso a um usu\u00e1rio; Deletar: Regras de security group; recursos implantados na Regi\u00e3o;","title":"Conceito B"},{"location":"projetos_2022/DaviReisVieira/#conceito-a","text":"Criar: Criar um HA de servidores web.","title":"Conceito A"},{"location":"projetos_2022/DaviReisVieira/#format-of-variables-in-terraform-json","text":"Security Group { \"id\" : \"sg-0a1b2c3d\" , \"name\" : \"sg-tcp/udp-22 - davirvs\" , \"description\" : \"Security Group for EC2\" , \"ingress\" : [ { \"description\" : \"SSH\" , \"from_port\" : 22 , \"to_port\" : 22 , \"protocol\" : \"tcp\" , \"cidr_blocks\" : [ \"0.0.0.0/0\" ] } ], \"egress\" : [ { \"description\" : \"All\" , \"from_port\" : 0 , \"to_port\" : 0 , \"protocol\" : \"-1\" , \"cidr_blocks\" : [ \"0.0.0.0/0\" ] } ] } EC2 { \"name\" : \"davirvs1_ubuntu2204\" , \"ami\" : \"ami-08c40ec9ead489470\" , \"instance_type\" : \"t2.micro\" , \"security_groups_ids\" : [ \"sg-0a1b2c3d\" ] } User { \"name\" : \"davirvsTeste1\" , \"policies\" : { \"name\" : \"davirvsTeste1Restrictions\" , \"description\" : \"Estas s\u00e3o as restri\u00e7\u00f5es do usu\u00e1rio davirvsTeste1\" , \"actions\" : [ \"ec2:DescribeInstances\" , \"ec2:DescribeSecurityGroups\" ], \"resources\" : [ \"*\" ] } } Group { \"id\" : \"ug-0a1b2c3d\" , \"name\" : \"davirvsGroups1\" , \"description\" : \"davirvsGroups1 description\" , \"policies\" : { \"name\" : \"davirvsGroups1Restrictions\" , \"description\" : \"Estas s\u00e3o as restri\u00e7\u00f5es do grupo de usu\u00e1rios davirvsGroups1\" , \"actions\" : [ \"ec2:DescribeInstances\" , \"ec2:DescribeSecurityGroups\" ], \"resources\" : [ \"*\" ] } }","title":"Format of variables in Terraform JSON"},{"location":"projetos_2022/DaviReisVieira/#format-of-json-variable-file","text":"{ \"aws-region\" : \"us-east-2\" , \"security_groups\" : [], \"instances\" : [], \"users\" : [], \"users_groups\" : [] }","title":"Format of JSON variable file"},{"location":"projetos_2022/fran-janela/","text":"Infraestrutura por C\u00f3digo \u00b6 Aplica\u00e7\u00e3o em Python para gerenciar infraestrutura constru\u00edda com Terraform. Aluno: Francisco Pinheiro Janela Curso: Engenharia da Computa\u00e7\u00e3o Semestre: 6 Contato: franciscopj@al.insper.edu.br Ano: 2022 GitHub Page : https://fran-janela.github.io/roteiro-proj-CompNuvem/ Como Operar com o meu programa: \u00b6 Warning O programa foi desenvolvido por uma \u00fanica pessoa, e existem algumas falhas na robustez da utiliza\u00e7\u00e3o, ou seja, \u00e9 da responsabilidade do usu\u00e1rio configurar adequadamente os campos durante a utiliza\u00e7\u00e3o para que a montagem n\u00e3o falhe. Ademais, aproveito para lembrar a import\u00e2ncia da prote\u00e7\u00e3o de suas chaves de acesso , utilize-as apenas em vari\u00e1veis de ambiente. Esta aplica\u00e7\u00e3o utiliza a cria\u00e7\u00e3o de um arquivo .env para armazen\u00e1-las. Mais sobre isso na aba de Pr\u00e9-Requisitos. Pr\u00e9-requisitos \u00b6 Para come\u00e7ar a operar com o meu programa, sigam o passo a passo indicado no readme do meu reposit\u00f3rio no github. Como usar \u00b6 Ao iniciar o programa pela primeira vez, o usu\u00e1rio se depara com a escolha entre a configura\u00e7\u00e3o das regi\u00f5es, podendo, nesse caminho, gerenciar inst\u00e2ncias, gerenciar security groups e levantar aplica\u00e7\u00f5es em HA (High Availability), e a configura\u00e7\u00e3o do ambiente do IAM, onde o usu\u00e1rio pode gerenciar usu\u00e1rios e pol\u00edticas(restri\u00e7\u00f5es). Para facilitar, a \u00e1rvore de navega\u00e7\u00e3o abaixo, pode trazer mais facilidade para o usu\u00e1rio se encontrar pelo programa: \u251c\u2500\u2500 Configura\u00e7\u00e3o de Regi\u00f5es \u2502 \u251c\u2500\u2500 Criar, deletar ou escolher uma regi\u00e3o \u2502 \u251c\u2500\u2500 Gerenciar Inst\u00e2ncias \u2502 \u2502 \u251c\u2500\u2500 Listar Inst\u00e2ncias \u2502 \u2502 \u251c\u2500\u2500 Criar Inst\u00e2ncia \u2502 \u2502 \u251c\u2500\u2500 Deletar Inst\u00e2ncia \u2502 \u2502 \u251c\u2500\u2500 Atualizar Configura\u00e7\u00e3o de uma Inst\u00e2ncia \u2502 \u2502 \u2514\u2500\u2500 Voltar \u2502 \u251c\u2500\u2500 Gerenciar Security Groups \u2502 \u2502 \u251c\u2500\u2500 Listar Security Groups \u2502 \u2502 \u251c\u2500\u2500 Criar Security Group \u2502 \u2502 \u251c\u2500\u2500 Deletar Security Group \u2502 \u2502 \u251c\u2500\u2500 Adicionar Regras a um Security Group \u2502 \u2502 \u251c\u2500\u2500 Deletar Regras de um Security Group \u2502 \u2502 \u2514\u2500\u2500 Voltar \u2502 \u2514\u2500\u2500 Gerenciar Aplica\u00e7\u00e3o em HA \u2502 \u251c\u2500\u2500 Listar Aplica\u00e7\u00e3o em HA \u2502 \u251c\u2500\u2500 Criar Aplica\u00e7\u00e3o em HA \u2502 \u251c\u2500\u2500 Deletar Aplica\u00e7\u00e3o em HA \u2502 \u2514\u2500\u2500 Voltar \u251c\u2500\u2500 Configura\u00e7\u00e3o do IAM \u2502 \u251c\u2500\u2500 Limpar ou Restaurar a Infraestrutura do IAM \u2502 \u251c\u2500\u2500 Gerenciar Usu\u00e1rios \u2502 \u2502 \u251c\u2500\u2500 Listar Usu\u00e1rios \u2502 \u2502 \u251c\u2500\u2500 Criar Usu\u00e1rio \u2502 \u2502 \u251c\u2500\u2500 Deletar Usu\u00e1rio \u2502 \u2502 \u251c\u2500\u2500 Adicionar Pol\u00edticas a um Usu\u00e1rio \u2502 \u2502 \u251c\u2500\u2500 Deletar Pol\u00edticas de um Usu\u00e1rio \u2502 \u2502 \u2514\u2500\u2500 Voltar \u2502 \u2514\u2500\u2500 Gerenciar Pol\u00edticas \u2502 \u251c\u2500\u2500 Listar Pol\u00edticas \u2502 \u251c\u2500\u2500 Importar Pol\u00edtica \u2502 \u2514\u2500\u2500 Voltar \u251c\u2500\u2500 Listar todas as Inst\u00e2ncias \u2514\u2500\u2500 Sair Em sua maioria, as instru\u00e7\u00f5es de uso de cada uma das funcionalidades est\u00e1 autocontida no pr\u00f3prio programa, mas existem algumas considera\u00e7\u00f5es que podem ser feitas: Configura\u00e7\u00e3o de Regi\u00f5es \u00b6 Criar, deletar ou escolher uma regi\u00e3o \u00b6 Ao criar uma regi\u00e3o em um uma daquelas dispon\u00edveis no programa, garanta que a sua conta possua permiss\u00f5es para faz\u00ea-lo, pois isso pode gerar um problema para o bom funcionamento da aplica\u00e7\u00e3o. Ao criar uma nova regi\u00e3o, autom\u00e1ticamente a infraestrutura b\u00e1sica \u00e9 copiada da pasta de sample para uma com o nome da regi\u00e3o, com a adi\u00e7\u00e3o do prefixo tf- . Ao escolher a op\u00e7\u00e3o de deletar uma regi\u00e3o, n\u00e3o existe confirma\u00e7\u00e3o necess\u00e1ria, e se o comando for executado, a regi\u00e3o ser\u00e1 deletada, ou seja, ir\u00e1 perder todos os recursos criados naquela regi\u00e3o de uma vez. Portanto, \u00e9 importante que o usu\u00e1rio tenha certeza de que deseja deletar a regi\u00e3o. Gerenciar Inst\u00e2ncias \u00b6 Ao Listar as Inst\u00e2ncias, o usu\u00e1rio deve escolher pelo n\u00famero mostrado na tela aquela que quer visualizar mais informa\u00e7\u00f5es. Ao Criar uma Inst\u00e2ncia, o usu\u00e1rio deve escolher o tipo de inst\u00e2ncia que deseja criar, e o nome da inst\u00e2ncia que deseja criar. O nome da inst\u00e2ncia deve ser \u00fanico, ou seja, n\u00e3o pode haver duas inst\u00e2ncias com o mesmo nome na mesma regi\u00e3o. Al\u00e9m disso, o n\u00famero de inst\u00e2ncias olocado \u00e9 a quantidade de r\u00e9plicas aquelas configura\u00e7\u00f5es que ir\u00e3o ser criadas. Por fim, o Sistema Operacional pr\u00e9 definido \u00e9 o Ubuntu Server 18.04 LTS . Warning O usu\u00e1rio deve ter criado previamente seu par de chaves na AWS para poder indic\u00e1-lo na cria\u00e7\u00e3o de uma inst\u00e2ncia e, por sua vez, poder acess\u00e1-lo via ssh posteriormente. Ao atualizar a configura\u00e7\u00e3o de uma inst\u00e2ncia estar\u00e1 mudando todas as r\u00e9plicas criadas. Quando for feita a mudan\u00e7a de n\u00famero de inst\u00e2ncias, ser\u00e1 sempre a com \u00edndice maior que ser\u00e1 deletada. Ao mudar os ids dos security groups, dever\u00e1 passar novamente todos aqueles que desejar aplicar \u00e0 inst\u00e2ncia, configura\u00e7\u00f5es antigas ser\u00e3o perdidas. Gerenciar Security Groups \u00b6 Ao Listar os Security Groups, o usu\u00e1rio deve escolher pelo n\u00famero mostrado na tela aquele que quer visualizar mais informa\u00e7\u00f5es. Ao Criar um Security Group, o usu\u00e1rio deve escolher o nome do Security Group que deseja criar. O nome do Security Group deve ser \u00fanico, ou seja, n\u00e3o pode haver dois Security Groups com o mesmo nome na mesma regi\u00e3o. Al\u00e9m disso, poder\u00e1 ser criado quantas regras de Ingress e Egress que o usu\u00e1rio desejar, se atentando somente \u00e0 libera\u00e7\u00e3o de todas as portas para n\u00e3o correr riscos de seguran\u00e7a. S\u00f3 ser\u00e1 poss\u00edvel deletar um Security Group se ele n\u00e3o estiver sendo usado, ou seja, se quiser delet\u00e1-lo, deve remover todas as depend\u00eancias dele nas inst\u00e2ncias da regi\u00e3o. Gerenciar Aplica\u00e7\u00e3o em HA \u00b6 Em primeiro lugar, a Aplica\u00e7\u00e3o em HA \u00e9 uma demo com funcionamento limitado, que permite a cria\u00e7\u00e3o de uma aplica\u00e7\u00e3o predefinida e utiliza sistemas de Auto Scalling e Load Balancing dispon\u00edveis na AWS. S\u00f3 \u00e9 poss\u00edvel criar em duas regi\u00f5es: us-east-1 e us-east-2 . S\u00f3 pode ser criada uma aplica\u00e7\u00e3o em HA por regi\u00e3o, ou seja, se j\u00e1 houver uma aplica\u00e7\u00e3o em HA criada na regi\u00e3o, n\u00e3o ser\u00e1 poss\u00edvel criar outra. Para pegar a URL da aplica\u00e7\u00e3o e poder acess\u00e1-la, basta listar a aplica\u00e7\u00e3o no programa. Configura\u00e7\u00e3o do IAM \u00b6 Limpar ou Restaurar a Infraestrutura do IAM \u00b6 Limpar a infraestrutura do IAM significa apagar todas as configura\u00e7\u00f5es pr\u00e9 criadas para usu\u00e1rios, mas todos as pol\u00edticas importadas continuar\u00e3o sendo criadas quando for restaurada a infraestrutura. A Infraestrutura vem configurada com 4 pol\u00edticas de teste: AdministratorAccess , AdminNorthVirginia , AdminOregon e AdminOhio . Essas pol\u00edticas s\u00e3o criadas automaticamente quando a infraestrutura \u00e9 restaurada, e n\u00e3o podem ser deletadas. Gerenciar Usu\u00e1rios \u00b6 Ao Listar os Usu\u00e1rios, desta vez o usu\u00e1rio n\u00e3o precisa escolher pelo n\u00famero mostrado na tela, pois o programa j\u00e1 ir\u00e1 mostrar as informa\u00e7\u00f5es de todos os usu\u00e1rios e todas as pol\u00edticas atreladas a eles. Ao Criar um Usu\u00e1rio, o usu\u00e1rio deve escolher o nome do Usu\u00e1rio que deseja criar. O nome do Usu\u00e1rio deve ser \u00fanico, ou seja, n\u00e3o pode haver dois Usu\u00e1rios com o mesmo nome na mesma regi\u00e3o. Al\u00e9m disso, a senha aparecer\u00e1 somente na cria\u00e7\u00e3o deste, ent\u00e3o guarde-a em um local seguro antes de continuar. Atrelar uma pol\u00edtica (restri\u00e7\u00e3o) ao usu\u00e1rio, deve ser feita posteriormente com a fun\u00e7\u00e3o de adicionar pol\u00edticas. Ao deletar um Usu\u00e1rio, o usu\u00e1rio n\u00e3o poder\u00e1 ser recuperado, e todas as configura\u00e7\u00f5es de pol\u00edticas atreladas tamb\u00e9m ser\u00e3o descartadas, mas as pol\u00edticas em si ainda continuar\u00e3o existindo. Gerenciar Pol\u00edticas \u00b6 Ao Listar as Pol\u00edticas, o usu\u00e1rio deve escolher pelo n\u00famero mostrado na tela aquela que quer visualizar mais informa\u00e7\u00f5es. Para importar uma pol\u00edtica, o usu\u00e1rio deve passar o path completo do arquivo .json . Caso seja um arquivo v\u00e1lido, a regra ser\u00e1 criada e permanentemente adicionada ao seu reposit\u00f3rio de pol\u00edticas. Para delet\u00e1-la, deve apagar o arquivo .json criado em iam/policies/ . O nome da pol\u00edtica ser\u00e1 o nome do arquivo, sem a extens\u00e3o. Para facilitar a cria\u00e7\u00e3o, construa a pol\u00edtica pela dashboard da AWS e copie o conte\u00fado do arquivo .json gerado. Roteiro DIY \u00b6 Come\u00e7ando \u00b6 Para seguir esse tutorial \u00e9 necess\u00e1rio: Tecnologias: Terraform, Python Documentos: Terraform AWS Docs Pr\u00e9-Requisitos: aqueles anteriormente destacados para o funcionamento do programa e uma conta na AWS com permiss\u00f5es de administrador e suas credenciais. Danger ATEN\u00c7\u00c3O: Estas pr\u00f3ximas etapas ser\u00e3o feitas para vias de estudo, n\u00e3o \u00e9 recomendado que sejam feitas em um ambiente de produ\u00e7\u00e3o. Al\u00e9m disso, as chaves que ser\u00e3o utilizadas s\u00e3o extremamente sens\u00edveis, ent\u00e3o n\u00e3o as compartilhe com ningu\u00e9m, muito menos disponibilize-as no GitHub ou similares. Daqui em diante \u00e9 por sua conta e risco. O que \u00e9 Terraform? \u00b6 Terraform \u00e9 uma ferramenta de infraestrutura por c\u00f3digo, desenvolvida pela HashiCorp , que te permite definir, tanto para Cloud P\u00fablica , quanto para Cloud Privada , recursos de infraestrutura em c\u00f3digo poss\u00edvel de ser lido pelo ser humano e pelo computador, podendo ser versionado, reutiliz\u00e1do e compartilhado. Terraform e AWS \u00b6 A HashiCorp disponibiliza uma s\u00e9rie de m\u00f3dulos para os recursos na aws que podem ser copiados e reconfigurados para construir a sua infraestrutura. Para facilitar a sua pesquisa, a documenta\u00e7\u00e3o no link acima \u00e9 de grande utilidade. Existem 4 grandes tipos de m\u00f3dulos que ser\u00e3o explorados neste roteiro, s\u00e3o eles: Provider: \u00e9 o m\u00f3dulo que permite a comunica\u00e7\u00e3o com a AWS, e \u00e9 o primeiro m\u00f3dulo que deve ser importado. Ele \u00e9 respons\u00e1vel por definir a regi\u00e3o que ser\u00e1 utilizada, e tamb\u00e9m as credenciais de acesso. Resource: \u00e9 o m\u00f3dulo que define os recursos que ser\u00e3o utilizados na AWS. Por exemplo, se voc\u00ea deseja criar uma inst\u00e2ncia EC2, voc\u00ea deve importar o m\u00f3dulo aws_instance e configurar os par\u00e2metros necess\u00e1rios para a cria\u00e7\u00e3o da inst\u00e2ncia. Data: \u00e9 o m\u00f3dulo que permite a consulta de informa\u00e7\u00f5es de recursos j\u00e1 existentes na AWS. Por exemplo, se voc\u00ea deseja consultar o ID de uma inst\u00e2ncia EC2, voc\u00ea deve importar o m\u00f3dulo aws_instance e configurar os par\u00e2metros necess\u00e1rios para a consulta da inst\u00e2ncia. Output: \u00e9 o m\u00f3dulo que permite a visualiza\u00e7\u00e3o de informa\u00e7\u00f5es de recursos j\u00e1 existentes na AWS. Por exemplo, se voc\u00ea deseja visualizar o ID de uma inst\u00e2ncia EC2, voc\u00ea deve importar o m\u00f3dulo aws_instance e configurar os par\u00e2metros necess\u00e1rios para a visualiza\u00e7\u00e3o da inst\u00e2ncia. Criando a Infraestrutura B\u00e1sica para o roteiro \u00b6 Em primeiro lugar, defina um diret\u00f3rio(pasta) para o seu projeto. Isso vai ser importante para posteriormente replicar o que foi feito e poder escalar para a constru\u00e7\u00e3o de uma infraestrutura maior com o aux\u00edlio de uma aplica\u00e7\u00e3o em python . D\u00ea o nome de sample para o diret\u00f3rio, pois ele ser\u00e1 a amostra replicada para cada regi\u00e3o. Para este tutorial iremos utilizar somente a regi\u00e3o us-east-1 (Norte da Virg\u00ednia). Dentro deste diret\u00f3rio, crie um arquivo chamado main.tf e outro chamado variables.tf . O primeiro ser\u00e1 respons\u00e1vel por definir os providers necess\u00e1rios e iniciar a estrutura do terraform, e o segundo ser\u00e1 respons\u00e1vel por definir as vari\u00e1veis que ser\u00e3o utilizadas para a cria\u00e7\u00e3o dos recursos. Dentro do arquivo main.tf , insira o seguinte c\u00f3digo: terraform { required_providers { aws = { source = \"hashicorp/aws\" version = \"~> 4.16\" } } required_version = \">= 1.2.0\" } Este Snipet de c\u00f3digo \u00e9 respons\u00e1vel, ent\u00e3o, por definir a vers\u00e3o do terraform que ser\u00e1 utilizada e tamb\u00e9m a vers\u00e3o do provider aws que ser\u00e1 necess\u00e1rio. Al\u00e9m disso, \u00e9 necess\u00e1rio definir, em si, a regi\u00e3o do provider e passar a ele as credenciais para poder acessar a sua AWS. Em um novo arquivo provider.tf , insira o seguinte c\u00f3digo: provider \"aws\" { region = var.region access_key = var.AWS_ACCESS_KEY_ID secret_key = var.AWS_SECRET_ACCESS_KEY } E no arquivo j\u00e1 criado variables.tf , insira o seguinte c\u00f3digo: variable \"region\" { type = string default = \"us-east-1\" } variable \"AWS_ACCESS_KEY_ID\" { type = string sensitive = true } variable \"AWS_SECRET_ACCESS_KEY\" { type = string sensitive = true } Info O arquivo variables.tf \u00e9 respons\u00e1vel por definir as vari\u00e1veis que ser\u00e3o utilizadas na infraestrutura do Terraform. O par\u00e2metro sensitive = true \u00e9 respons\u00e1vel por ocultar a vari\u00e1vel quando for executado o comando terraform plan ou terraform apply . Agora, execute o comando terraform init para que o terraform baixe os providers necess\u00e1rios para a cria\u00e7\u00e3o da infraestrutura. terraform init Definindo as vari\u00e1veis para o c\u00f3digo: \u00b6 Anteriormente foi falado da import\u00e2ncia de manter o sigilo quanto \u00e0s chaves de acesso \u00e0 AWS , e, portanto, iremos precisar de um arquivo que as contenha, e ao mesmo tempo, n\u00e3o seja enviado para nenhum reposit\u00f3rio aberto. O Terraform consegue ler um arquivo e dele extrair as vari\u00e1veis que ser\u00e3o utilizadas na infraestrutura. Para isso, crie um arquivo chamado config.tfvars.json dentro de uma pasta config . \u00c9 importante que estes estejam descritos no seu arquivo .gitignore ou similares. Adicione o conte\u00fado a esse arquivo: { \"region\" : \"us-east-1\" , \"AWS_ACCESS_KEY_ID\" : [ \"SEU_ID_CHAVE\" ], \"AWS_SECRET_ACCESS_KEY\" : [ \"SUA_SECRET_KEY\" ] } O arquivo variables.tf ser\u00e1 respons\u00e1vel por informar ao terraform quais as vari\u00e1veis que ser\u00e3o necess\u00e1rias e quais os seus tipos. O arquivo config.tfvars.json ser\u00e1 respons\u00e1vel por informar ao terraform quais os valores que ser\u00e3o utilizados para as vari\u00e1veis. Agora, podemos aplicar a nossa infraestrutura. Para isso, execute o comando terraform apply e informe o arquivo config.tfvars.json como vari\u00e1vel de entrada. terraform apply -var-file=config/config.tfvars.json Criando a Infraestrutura de Rede \u00b6 Agora que j\u00e1 temos a infraestrutura b\u00e1sica criada, podemos come\u00e7ar a criar a infraestrutura de rede. Para isso, iremos criar um arquivo chamado network.tf e nele iremos definir os recursos que ser\u00e3o utilizados para a cria\u00e7\u00e3o da infraestrutura de rede. Para a cria\u00e7\u00e3o de rede, vamos come\u00e7ar a exercitar a pesquisa na documenta\u00e7\u00e3o do terraform. Crie um recurso para cada uma das seguintes funcionalidades e adicione os par\u00e2metros tamb\u00e9m descritos: VPC: cidr_block, instance_tenancy, enable_dns_support, enable_dns_hostnames e tags={Name} Subnet: vpc_id, cidr_block, map_public_ip_on_launch e tags={Name} Internet Gateway: vpc_id e tags={Name} Route Table: vpc_id e tags={Name} Route: route_table_id, destination_cidr_block e gateway_id Route Table Association: subnet_id e route_table_id Para as configura\u00e7\u00f5es de rede, adicione ao arquivo variables.tf as seguintes vari\u00e1veis: variable \"network_configurations\" { type = object ({ vpcCIDRblock = string instanceTenancy = string dnsSupport = bool dnsHostNames = bool publicsCIDRblock = string mapPublicIP = bool publicdestCIDRblock = string }) } E como exemplo, adicione ao arquivo config.tfvars.json as seguintes configura\u00e7\u00f5es: \"network_configurations\" : { \"vpcCIDRblock\" : \"172.16.0.0/16\" , \"instanceTenancy\" : \"default\" , \"dnsSupport\" : true , \"dnsHostNames\" : true , \"publicsCIDRblock\" : \"172.16.10.0/24\" , \"mapPublicIP\" : true , \"publicdestCIDRblock\" : \"0.0.0.0/0\" } O restante das vari\u00e1veis, associe diretamente no arquivo network.tf , utilizando a seguinte estrutura: variavel = [ recurso ].[ nome_do_recurso ].[ vari\u00e1vel_desejada ] # Exemplo: vpc_id = aws_vpc.VPC.id Criando Inst\u00e2ncias EC2 \u00b6 A cria\u00e7\u00e3o de inst\u00e2ncias vai nos trazer alguns conceitos extremamente interessantes para a escalabilidade da nossa aplica\u00e7\u00e3o no terraform, s\u00e3o estes: count , for_each , e locals . Vamos come\u00e7ar pelo b\u00e1sico. Crie uma inst\u00e2ncia usando o recurso aws_instance no arquivo instances.tf . Realize o Apply da infraestrutura e veja sua inst\u00e2ncia sendo criada. Utilizando a m\u00f3dulo de output do terraform, crie um output para a inst\u00e2ncia criada. O output deve conter o id da inst\u00e2ncia e o DNS p\u00fablico e estar\u00e1 localizado no arquivo gerado autom\u00e1ticamente terraform.tfstate . Escalando com o count \u00b6 Com o argumento count dentro da defini\u00e7\u00e3o do recurso, crie 3 inst\u00e2ncias EC2. Execute o terraform apply e veja as 3 inst\u00e2ncias sendo criadas. O count \u00e9 um sistema de cria\u00e7\u00e3o em massa de inst\u00e2ncias com as mesmas configura\u00e7\u00f5es, e deve ser usado para rapidamente construir um grupo de m\u00e1quinas com as mesmas configura\u00e7\u00f5es para provavelmente a mesma aplica\u00e7\u00e3o. Para possuir maior controle sobre o m\u00faltiplo deploy de inst\u00e2ncias, \u00e9 mais recomendado usar o for_each . Escalando com o for_each \u00b6 Em primeiro lugar, o for_each ir\u00e1 utilizar da configura\u00e7\u00e3o de vari\u00e1veis no formato de list ou map para criar m\u00faltiplas inst\u00e2ncias com configura\u00e7\u00f5es diferentes. Para isso, vamos criar uma vari\u00e1vel no arquivo variables.tf : variable \"instances_configuration\" { type = list ( object ({ instance_name = string instance_type = string ami = string key_name = string })) } O tipo list indica ao terraform que a vari\u00e1vel \u00e9 uma lista e deve ser percorrida pelo for_each . J\u00e1 o tipo object indica que a vari\u00e1vel \u00e9 um objeto, ou seja, um conjunto de vari\u00e1veis definidas, que podem ser acessadas pela sua chave. No arquivo de vari\u00e0veis .json , deve ser construido os valores da forma descrita acima. O recurso da inst\u00e2ncia com a constru\u00e7\u00e3o do for_each deve ser similar a: resource \"aws_instance\" \"web\" { for_each = { for instance in var.instances_configuration : instance.instance_name = > instance } ami = each.value.ami instance_type = each.value.instance_type subnet_id = aws_subnet.Subnet.id key_name = each.value.key_name tags = { Name = \"${each.value.instance_name}\" } } OBS.: Note que para indicar o valor de cada inst\u00e2ncia \u00e9 usado o complemento each.value Crie 3 inst\u00e2ncias diferentes com este m\u00e9todo. Escalando com o for_each e count \u00b6 \u00c9 de certo que n\u00e3o \u00e9 poss\u00edvel usar ambas as configura\u00e7\u00f5es for_each e count no mesmo recurso, mas podemos contornar essa situa\u00e7\u00e3o. Para isso, adicione uma vari\u00e0vel ao conjunto de vari\u00e1veis de configura\u00e7\u00e3o das inst\u00e2ncias que indicar\u00e1 a quantidade delas a serem criadas. Em seguida vamos utilizar as vari\u00e1veis locais , com o argumento locals . Construindo baseado na ideia de replicar a configura\u00e7\u00e3o definida para a quantidade de inst\u00e2ncias, basta criar um for que atenda a essa quantidade e adicione v\u00e1rias vezes a mesma configura\u00e7\u00e3o mudando apenas o nome, com o acr\u00e9scimo de um n\u00famero que indique ind\u00edce, por exemplo. Al\u00e9m disso, para aplicar tais configura\u00e7\u00f5es locais, as informa\u00e7\u00f5es devem ser passadas pela fun\u00e7\u00e3o de flatten . No final, a sua inst\u00e2ncia deve possuir o seguinte formato: locals { serverconfig = [ for srv in var.instances_configuration : [ for i in range ( 1 , srv.no_of_instances + 1 ) : { instance_name = \"${srv.instance_name}-${i}\" instance_type = srv.instance_type ami = srv.ami security_groups_ids = srv.security_groups_ids key_name = srv.key_name } ] ] } locals { instances = flatten ( local.serverconfig ) } resource \"aws_instance\" \"web\" { for_each = { for server in local.instances : server.instance_name = > server } ami = each.value.ami instance_type = each.value.instance_type subnet_id = aws_subnet.Subnet.id vpc_security_group_ids = each.value.security_groups_ids key_name = each.value.key_name tags = { Name = \"${each.value.instance_name}\" } } output \"instances\" { value = [ for instance in aws_instance.web : instance ] description = \"All Machine details\" } Criando Security Groups \u00b6 Para a cria\u00e7\u00e3o dos security groups, vamos utilizar o m\u00e9todo do for_each pensando na escalabilidade da solu\u00e7\u00e3o. Al\u00e9m disso, na AWS \u00e9 poss\u00edvel adicionar v\u00e1rias regras tanto de Ingress (Inbound) quanto de Egress (Outbound) ao mesmo tempo, portanto, nossa aplica\u00e7\u00e3o tamb\u00e9m deve conseguir faz\u00ea-lo. Crie o arquivo security_groups.tf e construa as suas configura\u00e7\u00f5es. Dica Para criar m\u00faltiplas regras de Ingress e Egress , utilize vari\u00e1veis do tipo dynamic . Teste criando 2 grupos de seguran\u00e7a, um com uma regra de Ingress e duas regras de Egress e outro com duas regras de Ingress e uma regra de Egress . Aplicando o security group nas inst\u00e2ncias \u00b6 Utilizando a fun\u00e7\u00e3o de output , \u00e9 poss\u00edvel coletar o ID do Security Group definido autom\u00e1ticamente pela AWS. Para atrel\u00e1-lo a uma inst\u00e2ncia use a vari\u00e1vel do recurso aws_instance chamada vpc_security_group_ids e passe uma lista de IDs de Security Groups como valor. Crie um Security Group que libere a conex\u00e3o SSH e associe-o a uma inst\u00e2ncia Junto com o par de chaves criado e associado a key_name , teste o acesso \u00e0 inst\u00e2ncia. Criando Infraestrutura para o IAM \u00b6 Para a cria\u00e7\u00e3o da estrutura no IAM, ser\u00e3o necess\u00e1rios 2 recursos principais: o usu\u00e1rio em si e as policies (pol\u00edticas ou restri\u00e7\u00f5es) de acesso. Al\u00e9m disso, s\u00e3o necess\u00e1rios recursos que criem o usu\u00e1rio e atrelem a ele uma senha autom\u00e1tica (que pode ser exportada como output ), um recurso que crie o documento da pol\u00edtica, para facilitar a implementa\u00e7\u00e3o, e recursos que criem a conex\u00e3o entre o usu\u00e1rio e a pol\u00edtica. Crie o arquivo policies.tf e construa as suas configura\u00e7\u00f5es. Dica Para atrelar um documento a uma pol\u00edtica, use a seguinte vari\u00e1vel e sua configura\u00e7\u00e3o: terraform policy = data.aws_iam_policy_document.ec2_policy[each.value.name].json Crie o arquivo users.tf e construa as suas configura\u00e7\u00f5es. Associe uma pol\u00edtica criada a um usu\u00e1rio atrav\u00e9s do recurso aws_iam_user_policy_attachment . Dica Crie uma vari\u00e0vel para cada uma das configura\u00e7\u00f5es acima, ou seja, uma vari\u00e1vel para a configura\u00e7\u00e3o de pol\u00edticas, outra para a configura\u00e7\u00e3o de usu\u00e1rios e outra para a configura\u00e7\u00e3o de atrelamento de pol\u00edticas a usu\u00e1rios. Teste a cria\u00e7\u00e3o de um usu\u00e1rio com a restri\u00e7\u00e3o de acesso \u00e0 regi\u00e3o da North Virginia. A pol\u00edtica criada para isso est\u00e1 abaixo: { \"Version\" : \"2012-10-17\" , \"Statement\" : [ { \"Effect\" : \"Allow\" , \"Action\" : \"*\" , \"Resource\" : \"*\" , \"Condition\" : { \"StringEquals\" : { \"aws:RequestedRegion\" : \"us-east-1\" } } } ] } Criando m\u00faltiplas Regi\u00f5es \u00b6 Como os usu\u00e1rios s\u00e3o globais, n\u00e3o vamos nos preocupar com suas configura\u00e7\u00f5es para cada inst\u00e2ncia, eles podem receber sua pasta separada para gerenciamento de infraestrutura. Pensando, ent\u00e3o, nos outros arquivos, ou seja, main.tf , provider.tf , network.tf , instances.tf , security_groups.tf , para criar uma nova regi\u00e3o, basta replicar todo o diret\u00f3rio, mudando apenas no arquivo de configura\u00e7\u00f5es .json a regi\u00e3o do provider . Crie duas pastas com essa infraestrutura, uma para a regi\u00e3o da North Virginia e outra para a regi\u00e3o de Ohio. Teste a cria\u00e7\u00e3o de uma inst\u00e2ncia em cada regi\u00e3o. OBS.: Aplique o comando de init e apply em cada uma das pastas criadas. Criando um HA de servidores web \u00b6 Configurando uma Imagem Base \u00b6 Para a cria\u00e7\u00e3o de um HA de servidores web, \u00e9 necess\u00e1rio primeiro criar uma imagem( ami ) que funcionar\u00e1 como template para a cria\u00e7\u00e3o de inst\u00e2ncias caso as m\u00e1quinas base estejam ficando sobre-lotadas. Crie uma inst\u00e2ncia com o sistema operacional Ubuntu Server 18.04 LTS. Aplique: sudo apt update; sudo apt install nodejs build-essential -y Edite um arquivo server.js: #!/usr/bin/env nodejs var http = require ( \"http\" ); var os = require ( \"os\" ); var crypto = require ( \"crypto\" ); http . createServer ( function ( req , res ) { res . writeHead ( 200 , { \"Content-Type\" : \"text/plain\" }); var nonce = 1 ; var seed = Math . random (); var h = crypto . createHash ( \"sha256\" ); h . update ( new Buffer ( nonce + \" Hello World \" + seed )); while ( h . digest ( \"hex\" ). substr ( 0 , 3 ) != \"000\" ) { h = crypto . createHash ( \"sha256\" ); nonce ++ ; h . update ( new Buffer ( nonce + \" Hello World \" + seed )); } res . end ( '{ \"host\": ' + os . hostname () + ', \"nonce\": ' + nonce + \"}\" ); }) . listen ( 8080 , \"\" ); console . log ( \"Server running at http://localhost:8080/\" ); Torne o arquivo execut\u00e1vel: chmod +x ./server.js Execute e teste o servidor(lembre-se de liberar a porta no security group): Configure a m\u00e1quina para iniciar o servidor automaticamente ap\u00f3s reboot : crontab -e\\ @reboot /home/ubuntu/server.js D\u00ea reboot e teste o acesso ao servidor novamente. Copywright O procedimento foi retirado do site oficial da mat\u00e9ria . Com o template de inst\u00e2ncia criado, gere uma imagem dele pela dashboard da AWS e salve a ami gerada para uso no pr\u00f3ximos passos. Criando os recursos para o HA \u00b6 Para construir o HA, vamos utilizar o recurso aws_autoscaling_group , emparelhado com aws_launch_configuration e tamb\u00e9m aws_lb ( Load Balence ). Para isso, construa a infraestrutura baseada neste tutorial: Tutorial de HA . Ele foi produzido pela Hashicorp, empresa que desenvolve o Terraform, mas em caso de d\u00favida, o resultado esperado se encontra dentro da pasta sample-HA no reposit\u00f3rio do meu programa. ??? Dicas - Crie Security Groups diferentes para o Load Balencer e para configura\u00e7\u00e3o das inst\u00e2ncias. - S\u00e3o necess\u00e1rias 3 *Subnets* para a cria\u00e7\u00e3o do *Load Balencer*. Crie seu Pr\u00f3prio Programa. \u00b6 Com toda a experi\u00eancia adquirida na formata\u00e7\u00e3o, constru\u00e7\u00e3o e manipula\u00e7\u00e3o da infraestrutura por meio do terraform, agora voc\u00ea \u00e9 capaz de criar o seu pr\u00f3rpio programa. Eu criei, utilizando Python , uma ferramenta que roda no terminal e executa as opera\u00e7\u00f5es descritas acima, de forma automatizada. Para isso, a aplica\u00e7\u00e3o copia os arquivos de base, armazenados na pasta sample para uma nova pasta com o nome da regi\u00e3o, configura o arquivo .tvars.json com as informa\u00e7\u00f5es descritas pelo usu\u00e1rio e executa o terraform para a cria\u00e7\u00e3o da infraestrutura. O seu programa pode ser criado via Python ou qualquer outra linguagem que voc\u00ea se sinta confort\u00e1vel para manipula\u00e7\u00e3o de arquivos e execu\u00e7\u00e3o de comandos. \u00c9 poss\u00edvel, tamb\u00e9m, que essas configura\u00e7\u00f5es sejam feitas via backend e toda a interface de usu\u00e1rio seja feita via frontend em outra linguagem, uma vez que toda a configura\u00e7\u00e3o da infraestrutura pode ser enviada via .json para o backend. Aqui o c\u00e9u \u00e9 o limite! Use a sua criatividade! Motiva\u00e7\u00e3o \u00b6 Minha motiva\u00e7\u00e3o para a cria\u00e7\u00e3o desta aplica\u00e7\u00e3o e, consequentemente, este tutorial veio da crescente vontade de aprender sobre infraestrutura e Computa\u00e7\u00e3o Nuvem, o que me motivou a tentar produzir algo robusto e confi\u00e1vel, que pudesse ser utilizado por pessoas com algum conhecimento em infraestrutura, assim como eu, mas com a vontade de aprender.","title":"Infraestrutura por C\u00f3digo"},{"location":"projetos_2022/fran-janela/#infraestrutura-por-codigo","text":"Aplica\u00e7\u00e3o em Python para gerenciar infraestrutura constru\u00edda com Terraform. Aluno: Francisco Pinheiro Janela Curso: Engenharia da Computa\u00e7\u00e3o Semestre: 6 Contato: franciscopj@al.insper.edu.br Ano: 2022 GitHub Page : https://fran-janela.github.io/roteiro-proj-CompNuvem/","title":"Infraestrutura por C\u00f3digo"},{"location":"projetos_2022/fran-janela/#como-operar-com-o-meu-programa","text":"Warning O programa foi desenvolvido por uma \u00fanica pessoa, e existem algumas falhas na robustez da utiliza\u00e7\u00e3o, ou seja, \u00e9 da responsabilidade do usu\u00e1rio configurar adequadamente os campos durante a utiliza\u00e7\u00e3o para que a montagem n\u00e3o falhe. Ademais, aproveito para lembrar a import\u00e2ncia da prote\u00e7\u00e3o de suas chaves de acesso , utilize-as apenas em vari\u00e1veis de ambiente. Esta aplica\u00e7\u00e3o utiliza a cria\u00e7\u00e3o de um arquivo .env para armazen\u00e1-las. Mais sobre isso na aba de Pr\u00e9-Requisitos.","title":"Como Operar com o meu programa:"},{"location":"projetos_2022/fran-janela/#pre-requisitos","text":"Para come\u00e7ar a operar com o meu programa, sigam o passo a passo indicado no readme do meu reposit\u00f3rio no github.","title":"Pr\u00e9-requisitos"},{"location":"projetos_2022/fran-janela/#como-usar","text":"Ao iniciar o programa pela primeira vez, o usu\u00e1rio se depara com a escolha entre a configura\u00e7\u00e3o das regi\u00f5es, podendo, nesse caminho, gerenciar inst\u00e2ncias, gerenciar security groups e levantar aplica\u00e7\u00f5es em HA (High Availability), e a configura\u00e7\u00e3o do ambiente do IAM, onde o usu\u00e1rio pode gerenciar usu\u00e1rios e pol\u00edticas(restri\u00e7\u00f5es). Para facilitar, a \u00e1rvore de navega\u00e7\u00e3o abaixo, pode trazer mais facilidade para o usu\u00e1rio se encontrar pelo programa: \u251c\u2500\u2500 Configura\u00e7\u00e3o de Regi\u00f5es \u2502 \u251c\u2500\u2500 Criar, deletar ou escolher uma regi\u00e3o \u2502 \u251c\u2500\u2500 Gerenciar Inst\u00e2ncias \u2502 \u2502 \u251c\u2500\u2500 Listar Inst\u00e2ncias \u2502 \u2502 \u251c\u2500\u2500 Criar Inst\u00e2ncia \u2502 \u2502 \u251c\u2500\u2500 Deletar Inst\u00e2ncia \u2502 \u2502 \u251c\u2500\u2500 Atualizar Configura\u00e7\u00e3o de uma Inst\u00e2ncia \u2502 \u2502 \u2514\u2500\u2500 Voltar \u2502 \u251c\u2500\u2500 Gerenciar Security Groups \u2502 \u2502 \u251c\u2500\u2500 Listar Security Groups \u2502 \u2502 \u251c\u2500\u2500 Criar Security Group \u2502 \u2502 \u251c\u2500\u2500 Deletar Security Group \u2502 \u2502 \u251c\u2500\u2500 Adicionar Regras a um Security Group \u2502 \u2502 \u251c\u2500\u2500 Deletar Regras de um Security Group \u2502 \u2502 \u2514\u2500\u2500 Voltar \u2502 \u2514\u2500\u2500 Gerenciar Aplica\u00e7\u00e3o em HA \u2502 \u251c\u2500\u2500 Listar Aplica\u00e7\u00e3o em HA \u2502 \u251c\u2500\u2500 Criar Aplica\u00e7\u00e3o em HA \u2502 \u251c\u2500\u2500 Deletar Aplica\u00e7\u00e3o em HA \u2502 \u2514\u2500\u2500 Voltar \u251c\u2500\u2500 Configura\u00e7\u00e3o do IAM \u2502 \u251c\u2500\u2500 Limpar ou Restaurar a Infraestrutura do IAM \u2502 \u251c\u2500\u2500 Gerenciar Usu\u00e1rios \u2502 \u2502 \u251c\u2500\u2500 Listar Usu\u00e1rios \u2502 \u2502 \u251c\u2500\u2500 Criar Usu\u00e1rio \u2502 \u2502 \u251c\u2500\u2500 Deletar Usu\u00e1rio \u2502 \u2502 \u251c\u2500\u2500 Adicionar Pol\u00edticas a um Usu\u00e1rio \u2502 \u2502 \u251c\u2500\u2500 Deletar Pol\u00edticas de um Usu\u00e1rio \u2502 \u2502 \u2514\u2500\u2500 Voltar \u2502 \u2514\u2500\u2500 Gerenciar Pol\u00edticas \u2502 \u251c\u2500\u2500 Listar Pol\u00edticas \u2502 \u251c\u2500\u2500 Importar Pol\u00edtica \u2502 \u2514\u2500\u2500 Voltar \u251c\u2500\u2500 Listar todas as Inst\u00e2ncias \u2514\u2500\u2500 Sair Em sua maioria, as instru\u00e7\u00f5es de uso de cada uma das funcionalidades est\u00e1 autocontida no pr\u00f3prio programa, mas existem algumas considera\u00e7\u00f5es que podem ser feitas:","title":"Como usar"},{"location":"projetos_2022/fran-janela/#configuracao-de-regioes","text":"","title":"Configura\u00e7\u00e3o de Regi\u00f5es"},{"location":"projetos_2022/fran-janela/#criar-deletar-ou-escolher-uma-regiao","text":"Ao criar uma regi\u00e3o em um uma daquelas dispon\u00edveis no programa, garanta que a sua conta possua permiss\u00f5es para faz\u00ea-lo, pois isso pode gerar um problema para o bom funcionamento da aplica\u00e7\u00e3o. Ao criar uma nova regi\u00e3o, autom\u00e1ticamente a infraestrutura b\u00e1sica \u00e9 copiada da pasta de sample para uma com o nome da regi\u00e3o, com a adi\u00e7\u00e3o do prefixo tf- . Ao escolher a op\u00e7\u00e3o de deletar uma regi\u00e3o, n\u00e3o existe confirma\u00e7\u00e3o necess\u00e1ria, e se o comando for executado, a regi\u00e3o ser\u00e1 deletada, ou seja, ir\u00e1 perder todos os recursos criados naquela regi\u00e3o de uma vez. Portanto, \u00e9 importante que o usu\u00e1rio tenha certeza de que deseja deletar a regi\u00e3o.","title":"Criar, deletar ou escolher uma regi\u00e3o"},{"location":"projetos_2022/fran-janela/#gerenciar-instancias","text":"Ao Listar as Inst\u00e2ncias, o usu\u00e1rio deve escolher pelo n\u00famero mostrado na tela aquela que quer visualizar mais informa\u00e7\u00f5es. Ao Criar uma Inst\u00e2ncia, o usu\u00e1rio deve escolher o tipo de inst\u00e2ncia que deseja criar, e o nome da inst\u00e2ncia que deseja criar. O nome da inst\u00e2ncia deve ser \u00fanico, ou seja, n\u00e3o pode haver duas inst\u00e2ncias com o mesmo nome na mesma regi\u00e3o. Al\u00e9m disso, o n\u00famero de inst\u00e2ncias olocado \u00e9 a quantidade de r\u00e9plicas aquelas configura\u00e7\u00f5es que ir\u00e3o ser criadas. Por fim, o Sistema Operacional pr\u00e9 definido \u00e9 o Ubuntu Server 18.04 LTS . Warning O usu\u00e1rio deve ter criado previamente seu par de chaves na AWS para poder indic\u00e1-lo na cria\u00e7\u00e3o de uma inst\u00e2ncia e, por sua vez, poder acess\u00e1-lo via ssh posteriormente. Ao atualizar a configura\u00e7\u00e3o de uma inst\u00e2ncia estar\u00e1 mudando todas as r\u00e9plicas criadas. Quando for feita a mudan\u00e7a de n\u00famero de inst\u00e2ncias, ser\u00e1 sempre a com \u00edndice maior que ser\u00e1 deletada. Ao mudar os ids dos security groups, dever\u00e1 passar novamente todos aqueles que desejar aplicar \u00e0 inst\u00e2ncia, configura\u00e7\u00f5es antigas ser\u00e3o perdidas.","title":"Gerenciar Inst\u00e2ncias"},{"location":"projetos_2022/fran-janela/#gerenciar-security-groups","text":"Ao Listar os Security Groups, o usu\u00e1rio deve escolher pelo n\u00famero mostrado na tela aquele que quer visualizar mais informa\u00e7\u00f5es. Ao Criar um Security Group, o usu\u00e1rio deve escolher o nome do Security Group que deseja criar. O nome do Security Group deve ser \u00fanico, ou seja, n\u00e3o pode haver dois Security Groups com o mesmo nome na mesma regi\u00e3o. Al\u00e9m disso, poder\u00e1 ser criado quantas regras de Ingress e Egress que o usu\u00e1rio desejar, se atentando somente \u00e0 libera\u00e7\u00e3o de todas as portas para n\u00e3o correr riscos de seguran\u00e7a. S\u00f3 ser\u00e1 poss\u00edvel deletar um Security Group se ele n\u00e3o estiver sendo usado, ou seja, se quiser delet\u00e1-lo, deve remover todas as depend\u00eancias dele nas inst\u00e2ncias da regi\u00e3o.","title":"Gerenciar Security Groups"},{"location":"projetos_2022/fran-janela/#gerenciar-aplicacao-em-ha","text":"Em primeiro lugar, a Aplica\u00e7\u00e3o em HA \u00e9 uma demo com funcionamento limitado, que permite a cria\u00e7\u00e3o de uma aplica\u00e7\u00e3o predefinida e utiliza sistemas de Auto Scalling e Load Balancing dispon\u00edveis na AWS. S\u00f3 \u00e9 poss\u00edvel criar em duas regi\u00f5es: us-east-1 e us-east-2 . S\u00f3 pode ser criada uma aplica\u00e7\u00e3o em HA por regi\u00e3o, ou seja, se j\u00e1 houver uma aplica\u00e7\u00e3o em HA criada na regi\u00e3o, n\u00e3o ser\u00e1 poss\u00edvel criar outra. Para pegar a URL da aplica\u00e7\u00e3o e poder acess\u00e1-la, basta listar a aplica\u00e7\u00e3o no programa.","title":"Gerenciar Aplica\u00e7\u00e3o em HA"},{"location":"projetos_2022/fran-janela/#configuracao-do-iam","text":"","title":"Configura\u00e7\u00e3o do IAM"},{"location":"projetos_2022/fran-janela/#limpar-ou-restaurar-a-infraestrutura-do-iam","text":"Limpar a infraestrutura do IAM significa apagar todas as configura\u00e7\u00f5es pr\u00e9 criadas para usu\u00e1rios, mas todos as pol\u00edticas importadas continuar\u00e3o sendo criadas quando for restaurada a infraestrutura. A Infraestrutura vem configurada com 4 pol\u00edticas de teste: AdministratorAccess , AdminNorthVirginia , AdminOregon e AdminOhio . Essas pol\u00edticas s\u00e3o criadas automaticamente quando a infraestrutura \u00e9 restaurada, e n\u00e3o podem ser deletadas.","title":"Limpar ou Restaurar a Infraestrutura do IAM"},{"location":"projetos_2022/fran-janela/#gerenciar-usuarios","text":"Ao Listar os Usu\u00e1rios, desta vez o usu\u00e1rio n\u00e3o precisa escolher pelo n\u00famero mostrado na tela, pois o programa j\u00e1 ir\u00e1 mostrar as informa\u00e7\u00f5es de todos os usu\u00e1rios e todas as pol\u00edticas atreladas a eles. Ao Criar um Usu\u00e1rio, o usu\u00e1rio deve escolher o nome do Usu\u00e1rio que deseja criar. O nome do Usu\u00e1rio deve ser \u00fanico, ou seja, n\u00e3o pode haver dois Usu\u00e1rios com o mesmo nome na mesma regi\u00e3o. Al\u00e9m disso, a senha aparecer\u00e1 somente na cria\u00e7\u00e3o deste, ent\u00e3o guarde-a em um local seguro antes de continuar. Atrelar uma pol\u00edtica (restri\u00e7\u00e3o) ao usu\u00e1rio, deve ser feita posteriormente com a fun\u00e7\u00e3o de adicionar pol\u00edticas. Ao deletar um Usu\u00e1rio, o usu\u00e1rio n\u00e3o poder\u00e1 ser recuperado, e todas as configura\u00e7\u00f5es de pol\u00edticas atreladas tamb\u00e9m ser\u00e3o descartadas, mas as pol\u00edticas em si ainda continuar\u00e3o existindo.","title":"Gerenciar Usu\u00e1rios"},{"location":"projetos_2022/fran-janela/#gerenciar-politicas","text":"Ao Listar as Pol\u00edticas, o usu\u00e1rio deve escolher pelo n\u00famero mostrado na tela aquela que quer visualizar mais informa\u00e7\u00f5es. Para importar uma pol\u00edtica, o usu\u00e1rio deve passar o path completo do arquivo .json . Caso seja um arquivo v\u00e1lido, a regra ser\u00e1 criada e permanentemente adicionada ao seu reposit\u00f3rio de pol\u00edticas. Para delet\u00e1-la, deve apagar o arquivo .json criado em iam/policies/ . O nome da pol\u00edtica ser\u00e1 o nome do arquivo, sem a extens\u00e3o. Para facilitar a cria\u00e7\u00e3o, construa a pol\u00edtica pela dashboard da AWS e copie o conte\u00fado do arquivo .json gerado.","title":"Gerenciar Pol\u00edticas"},{"location":"projetos_2022/fran-janela/#roteiro-diy","text":"","title":"Roteiro DIY"},{"location":"projetos_2022/fran-janela/#comecando","text":"Para seguir esse tutorial \u00e9 necess\u00e1rio: Tecnologias: Terraform, Python Documentos: Terraform AWS Docs Pr\u00e9-Requisitos: aqueles anteriormente destacados para o funcionamento do programa e uma conta na AWS com permiss\u00f5es de administrador e suas credenciais. Danger ATEN\u00c7\u00c3O: Estas pr\u00f3ximas etapas ser\u00e3o feitas para vias de estudo, n\u00e3o \u00e9 recomendado que sejam feitas em um ambiente de produ\u00e7\u00e3o. Al\u00e9m disso, as chaves que ser\u00e3o utilizadas s\u00e3o extremamente sens\u00edveis, ent\u00e3o n\u00e3o as compartilhe com ningu\u00e9m, muito menos disponibilize-as no GitHub ou similares. Daqui em diante \u00e9 por sua conta e risco.","title":"Come\u00e7ando"},{"location":"projetos_2022/fran-janela/#o-que-e-terraform","text":"Terraform \u00e9 uma ferramenta de infraestrutura por c\u00f3digo, desenvolvida pela HashiCorp , que te permite definir, tanto para Cloud P\u00fablica , quanto para Cloud Privada , recursos de infraestrutura em c\u00f3digo poss\u00edvel de ser lido pelo ser humano e pelo computador, podendo ser versionado, reutiliz\u00e1do e compartilhado.","title":"O que \u00e9 Terraform?"},{"location":"projetos_2022/fran-janela/#terraform-e-aws","text":"A HashiCorp disponibiliza uma s\u00e9rie de m\u00f3dulos para os recursos na aws que podem ser copiados e reconfigurados para construir a sua infraestrutura. Para facilitar a sua pesquisa, a documenta\u00e7\u00e3o no link acima \u00e9 de grande utilidade. Existem 4 grandes tipos de m\u00f3dulos que ser\u00e3o explorados neste roteiro, s\u00e3o eles: Provider: \u00e9 o m\u00f3dulo que permite a comunica\u00e7\u00e3o com a AWS, e \u00e9 o primeiro m\u00f3dulo que deve ser importado. Ele \u00e9 respons\u00e1vel por definir a regi\u00e3o que ser\u00e1 utilizada, e tamb\u00e9m as credenciais de acesso. Resource: \u00e9 o m\u00f3dulo que define os recursos que ser\u00e3o utilizados na AWS. Por exemplo, se voc\u00ea deseja criar uma inst\u00e2ncia EC2, voc\u00ea deve importar o m\u00f3dulo aws_instance e configurar os par\u00e2metros necess\u00e1rios para a cria\u00e7\u00e3o da inst\u00e2ncia. Data: \u00e9 o m\u00f3dulo que permite a consulta de informa\u00e7\u00f5es de recursos j\u00e1 existentes na AWS. Por exemplo, se voc\u00ea deseja consultar o ID de uma inst\u00e2ncia EC2, voc\u00ea deve importar o m\u00f3dulo aws_instance e configurar os par\u00e2metros necess\u00e1rios para a consulta da inst\u00e2ncia. Output: \u00e9 o m\u00f3dulo que permite a visualiza\u00e7\u00e3o de informa\u00e7\u00f5es de recursos j\u00e1 existentes na AWS. Por exemplo, se voc\u00ea deseja visualizar o ID de uma inst\u00e2ncia EC2, voc\u00ea deve importar o m\u00f3dulo aws_instance e configurar os par\u00e2metros necess\u00e1rios para a visualiza\u00e7\u00e3o da inst\u00e2ncia.","title":"Terraform e AWS"},{"location":"projetos_2022/fran-janela/#criando-a-infraestrutura-basica-para-o-roteiro","text":"Em primeiro lugar, defina um diret\u00f3rio(pasta) para o seu projeto. Isso vai ser importante para posteriormente replicar o que foi feito e poder escalar para a constru\u00e7\u00e3o de uma infraestrutura maior com o aux\u00edlio de uma aplica\u00e7\u00e3o em python . D\u00ea o nome de sample para o diret\u00f3rio, pois ele ser\u00e1 a amostra replicada para cada regi\u00e3o. Para este tutorial iremos utilizar somente a regi\u00e3o us-east-1 (Norte da Virg\u00ednia). Dentro deste diret\u00f3rio, crie um arquivo chamado main.tf e outro chamado variables.tf . O primeiro ser\u00e1 respons\u00e1vel por definir os providers necess\u00e1rios e iniciar a estrutura do terraform, e o segundo ser\u00e1 respons\u00e1vel por definir as vari\u00e1veis que ser\u00e3o utilizadas para a cria\u00e7\u00e3o dos recursos. Dentro do arquivo main.tf , insira o seguinte c\u00f3digo: terraform { required_providers { aws = { source = \"hashicorp/aws\" version = \"~> 4.16\" } } required_version = \">= 1.2.0\" } Este Snipet de c\u00f3digo \u00e9 respons\u00e1vel, ent\u00e3o, por definir a vers\u00e3o do terraform que ser\u00e1 utilizada e tamb\u00e9m a vers\u00e3o do provider aws que ser\u00e1 necess\u00e1rio. Al\u00e9m disso, \u00e9 necess\u00e1rio definir, em si, a regi\u00e3o do provider e passar a ele as credenciais para poder acessar a sua AWS. Em um novo arquivo provider.tf , insira o seguinte c\u00f3digo: provider \"aws\" { region = var.region access_key = var.AWS_ACCESS_KEY_ID secret_key = var.AWS_SECRET_ACCESS_KEY } E no arquivo j\u00e1 criado variables.tf , insira o seguinte c\u00f3digo: variable \"region\" { type = string default = \"us-east-1\" } variable \"AWS_ACCESS_KEY_ID\" { type = string sensitive = true } variable \"AWS_SECRET_ACCESS_KEY\" { type = string sensitive = true } Info O arquivo variables.tf \u00e9 respons\u00e1vel por definir as vari\u00e1veis que ser\u00e3o utilizadas na infraestrutura do Terraform. O par\u00e2metro sensitive = true \u00e9 respons\u00e1vel por ocultar a vari\u00e1vel quando for executado o comando terraform plan ou terraform apply . Agora, execute o comando terraform init para que o terraform baixe os providers necess\u00e1rios para a cria\u00e7\u00e3o da infraestrutura. terraform init","title":"Criando a Infraestrutura B\u00e1sica para o roteiro"},{"location":"projetos_2022/fran-janela/#definindo-as-variaveis-para-o-codigo","text":"Anteriormente foi falado da import\u00e2ncia de manter o sigilo quanto \u00e0s chaves de acesso \u00e0 AWS , e, portanto, iremos precisar de um arquivo que as contenha, e ao mesmo tempo, n\u00e3o seja enviado para nenhum reposit\u00f3rio aberto. O Terraform consegue ler um arquivo e dele extrair as vari\u00e1veis que ser\u00e3o utilizadas na infraestrutura. Para isso, crie um arquivo chamado config.tfvars.json dentro de uma pasta config . \u00c9 importante que estes estejam descritos no seu arquivo .gitignore ou similares. Adicione o conte\u00fado a esse arquivo: { \"region\" : \"us-east-1\" , \"AWS_ACCESS_KEY_ID\" : [ \"SEU_ID_CHAVE\" ], \"AWS_SECRET_ACCESS_KEY\" : [ \"SUA_SECRET_KEY\" ] } O arquivo variables.tf ser\u00e1 respons\u00e1vel por informar ao terraform quais as vari\u00e1veis que ser\u00e3o necess\u00e1rias e quais os seus tipos. O arquivo config.tfvars.json ser\u00e1 respons\u00e1vel por informar ao terraform quais os valores que ser\u00e3o utilizados para as vari\u00e1veis. Agora, podemos aplicar a nossa infraestrutura. Para isso, execute o comando terraform apply e informe o arquivo config.tfvars.json como vari\u00e1vel de entrada. terraform apply -var-file=config/config.tfvars.json","title":"Definindo as vari\u00e1veis para o c\u00f3digo:"},{"location":"projetos_2022/fran-janela/#criando-a-infraestrutura-de-rede","text":"Agora que j\u00e1 temos a infraestrutura b\u00e1sica criada, podemos come\u00e7ar a criar a infraestrutura de rede. Para isso, iremos criar um arquivo chamado network.tf e nele iremos definir os recursos que ser\u00e3o utilizados para a cria\u00e7\u00e3o da infraestrutura de rede. Para a cria\u00e7\u00e3o de rede, vamos come\u00e7ar a exercitar a pesquisa na documenta\u00e7\u00e3o do terraform. Crie um recurso para cada uma das seguintes funcionalidades e adicione os par\u00e2metros tamb\u00e9m descritos: VPC: cidr_block, instance_tenancy, enable_dns_support, enable_dns_hostnames e tags={Name} Subnet: vpc_id, cidr_block, map_public_ip_on_launch e tags={Name} Internet Gateway: vpc_id e tags={Name} Route Table: vpc_id e tags={Name} Route: route_table_id, destination_cidr_block e gateway_id Route Table Association: subnet_id e route_table_id Para as configura\u00e7\u00f5es de rede, adicione ao arquivo variables.tf as seguintes vari\u00e1veis: variable \"network_configurations\" { type = object ({ vpcCIDRblock = string instanceTenancy = string dnsSupport = bool dnsHostNames = bool publicsCIDRblock = string mapPublicIP = bool publicdestCIDRblock = string }) } E como exemplo, adicione ao arquivo config.tfvars.json as seguintes configura\u00e7\u00f5es: \"network_configurations\" : { \"vpcCIDRblock\" : \"172.16.0.0/16\" , \"instanceTenancy\" : \"default\" , \"dnsSupport\" : true , \"dnsHostNames\" : true , \"publicsCIDRblock\" : \"172.16.10.0/24\" , \"mapPublicIP\" : true , \"publicdestCIDRblock\" : \"0.0.0.0/0\" } O restante das vari\u00e1veis, associe diretamente no arquivo network.tf , utilizando a seguinte estrutura: variavel = [ recurso ].[ nome_do_recurso ].[ vari\u00e1vel_desejada ] # Exemplo: vpc_id = aws_vpc.VPC.id","title":"Criando a Infraestrutura de Rede"},{"location":"projetos_2022/fran-janela/#criando-instancias-ec2","text":"A cria\u00e7\u00e3o de inst\u00e2ncias vai nos trazer alguns conceitos extremamente interessantes para a escalabilidade da nossa aplica\u00e7\u00e3o no terraform, s\u00e3o estes: count , for_each , e locals . Vamos come\u00e7ar pelo b\u00e1sico. Crie uma inst\u00e2ncia usando o recurso aws_instance no arquivo instances.tf . Realize o Apply da infraestrutura e veja sua inst\u00e2ncia sendo criada. Utilizando a m\u00f3dulo de output do terraform, crie um output para a inst\u00e2ncia criada. O output deve conter o id da inst\u00e2ncia e o DNS p\u00fablico e estar\u00e1 localizado no arquivo gerado autom\u00e1ticamente terraform.tfstate .","title":"Criando Inst\u00e2ncias EC2"},{"location":"projetos_2022/fran-janela/#escalando-com-o-count","text":"Com o argumento count dentro da defini\u00e7\u00e3o do recurso, crie 3 inst\u00e2ncias EC2. Execute o terraform apply e veja as 3 inst\u00e2ncias sendo criadas. O count \u00e9 um sistema de cria\u00e7\u00e3o em massa de inst\u00e2ncias com as mesmas configura\u00e7\u00f5es, e deve ser usado para rapidamente construir um grupo de m\u00e1quinas com as mesmas configura\u00e7\u00f5es para provavelmente a mesma aplica\u00e7\u00e3o. Para possuir maior controle sobre o m\u00faltiplo deploy de inst\u00e2ncias, \u00e9 mais recomendado usar o for_each .","title":"Escalando com o count"},{"location":"projetos_2022/fran-janela/#escalando-com-o-for_each","text":"Em primeiro lugar, o for_each ir\u00e1 utilizar da configura\u00e7\u00e3o de vari\u00e1veis no formato de list ou map para criar m\u00faltiplas inst\u00e2ncias com configura\u00e7\u00f5es diferentes. Para isso, vamos criar uma vari\u00e1vel no arquivo variables.tf : variable \"instances_configuration\" { type = list ( object ({ instance_name = string instance_type = string ami = string key_name = string })) } O tipo list indica ao terraform que a vari\u00e1vel \u00e9 uma lista e deve ser percorrida pelo for_each . J\u00e1 o tipo object indica que a vari\u00e1vel \u00e9 um objeto, ou seja, um conjunto de vari\u00e1veis definidas, que podem ser acessadas pela sua chave. No arquivo de vari\u00e0veis .json , deve ser construido os valores da forma descrita acima. O recurso da inst\u00e2ncia com a constru\u00e7\u00e3o do for_each deve ser similar a: resource \"aws_instance\" \"web\" { for_each = { for instance in var.instances_configuration : instance.instance_name = > instance } ami = each.value.ami instance_type = each.value.instance_type subnet_id = aws_subnet.Subnet.id key_name = each.value.key_name tags = { Name = \"${each.value.instance_name}\" } } OBS.: Note que para indicar o valor de cada inst\u00e2ncia \u00e9 usado o complemento each.value Crie 3 inst\u00e2ncias diferentes com este m\u00e9todo.","title":"Escalando com o for_each"},{"location":"projetos_2022/fran-janela/#escalando-com-o-for_each-e-count","text":"\u00c9 de certo que n\u00e3o \u00e9 poss\u00edvel usar ambas as configura\u00e7\u00f5es for_each e count no mesmo recurso, mas podemos contornar essa situa\u00e7\u00e3o. Para isso, adicione uma vari\u00e0vel ao conjunto de vari\u00e1veis de configura\u00e7\u00e3o das inst\u00e2ncias que indicar\u00e1 a quantidade delas a serem criadas. Em seguida vamos utilizar as vari\u00e1veis locais , com o argumento locals . Construindo baseado na ideia de replicar a configura\u00e7\u00e3o definida para a quantidade de inst\u00e2ncias, basta criar um for que atenda a essa quantidade e adicione v\u00e1rias vezes a mesma configura\u00e7\u00e3o mudando apenas o nome, com o acr\u00e9scimo de um n\u00famero que indique ind\u00edce, por exemplo. Al\u00e9m disso, para aplicar tais configura\u00e7\u00f5es locais, as informa\u00e7\u00f5es devem ser passadas pela fun\u00e7\u00e3o de flatten . No final, a sua inst\u00e2ncia deve possuir o seguinte formato: locals { serverconfig = [ for srv in var.instances_configuration : [ for i in range ( 1 , srv.no_of_instances + 1 ) : { instance_name = \"${srv.instance_name}-${i}\" instance_type = srv.instance_type ami = srv.ami security_groups_ids = srv.security_groups_ids key_name = srv.key_name } ] ] } locals { instances = flatten ( local.serverconfig ) } resource \"aws_instance\" \"web\" { for_each = { for server in local.instances : server.instance_name = > server } ami = each.value.ami instance_type = each.value.instance_type subnet_id = aws_subnet.Subnet.id vpc_security_group_ids = each.value.security_groups_ids key_name = each.value.key_name tags = { Name = \"${each.value.instance_name}\" } } output \"instances\" { value = [ for instance in aws_instance.web : instance ] description = \"All Machine details\" }","title":"Escalando com o for_each e count"},{"location":"projetos_2022/fran-janela/#criando-security-groups","text":"Para a cria\u00e7\u00e3o dos security groups, vamos utilizar o m\u00e9todo do for_each pensando na escalabilidade da solu\u00e7\u00e3o. Al\u00e9m disso, na AWS \u00e9 poss\u00edvel adicionar v\u00e1rias regras tanto de Ingress (Inbound) quanto de Egress (Outbound) ao mesmo tempo, portanto, nossa aplica\u00e7\u00e3o tamb\u00e9m deve conseguir faz\u00ea-lo. Crie o arquivo security_groups.tf e construa as suas configura\u00e7\u00f5es. Dica Para criar m\u00faltiplas regras de Ingress e Egress , utilize vari\u00e1veis do tipo dynamic . Teste criando 2 grupos de seguran\u00e7a, um com uma regra de Ingress e duas regras de Egress e outro com duas regras de Ingress e uma regra de Egress .","title":"Criando Security Groups"},{"location":"projetos_2022/fran-janela/#aplicando-o-security-group-nas-instancias","text":"Utilizando a fun\u00e7\u00e3o de output , \u00e9 poss\u00edvel coletar o ID do Security Group definido autom\u00e1ticamente pela AWS. Para atrel\u00e1-lo a uma inst\u00e2ncia use a vari\u00e1vel do recurso aws_instance chamada vpc_security_group_ids e passe uma lista de IDs de Security Groups como valor. Crie um Security Group que libere a conex\u00e3o SSH e associe-o a uma inst\u00e2ncia Junto com o par de chaves criado e associado a key_name , teste o acesso \u00e0 inst\u00e2ncia.","title":"Aplicando o security group nas inst\u00e2ncias"},{"location":"projetos_2022/fran-janela/#criando-infraestrutura-para-o-iam","text":"Para a cria\u00e7\u00e3o da estrutura no IAM, ser\u00e3o necess\u00e1rios 2 recursos principais: o usu\u00e1rio em si e as policies (pol\u00edticas ou restri\u00e7\u00f5es) de acesso. Al\u00e9m disso, s\u00e3o necess\u00e1rios recursos que criem o usu\u00e1rio e atrelem a ele uma senha autom\u00e1tica (que pode ser exportada como output ), um recurso que crie o documento da pol\u00edtica, para facilitar a implementa\u00e7\u00e3o, e recursos que criem a conex\u00e3o entre o usu\u00e1rio e a pol\u00edtica. Crie o arquivo policies.tf e construa as suas configura\u00e7\u00f5es. Dica Para atrelar um documento a uma pol\u00edtica, use a seguinte vari\u00e1vel e sua configura\u00e7\u00e3o: terraform policy = data.aws_iam_policy_document.ec2_policy[each.value.name].json Crie o arquivo users.tf e construa as suas configura\u00e7\u00f5es. Associe uma pol\u00edtica criada a um usu\u00e1rio atrav\u00e9s do recurso aws_iam_user_policy_attachment . Dica Crie uma vari\u00e0vel para cada uma das configura\u00e7\u00f5es acima, ou seja, uma vari\u00e1vel para a configura\u00e7\u00e3o de pol\u00edticas, outra para a configura\u00e7\u00e3o de usu\u00e1rios e outra para a configura\u00e7\u00e3o de atrelamento de pol\u00edticas a usu\u00e1rios. Teste a cria\u00e7\u00e3o de um usu\u00e1rio com a restri\u00e7\u00e3o de acesso \u00e0 regi\u00e3o da North Virginia. A pol\u00edtica criada para isso est\u00e1 abaixo: { \"Version\" : \"2012-10-17\" , \"Statement\" : [ { \"Effect\" : \"Allow\" , \"Action\" : \"*\" , \"Resource\" : \"*\" , \"Condition\" : { \"StringEquals\" : { \"aws:RequestedRegion\" : \"us-east-1\" } } } ] }","title":"Criando Infraestrutura para o IAM"},{"location":"projetos_2022/fran-janela/#criando-multiplas-regioes","text":"Como os usu\u00e1rios s\u00e3o globais, n\u00e3o vamos nos preocupar com suas configura\u00e7\u00f5es para cada inst\u00e2ncia, eles podem receber sua pasta separada para gerenciamento de infraestrutura. Pensando, ent\u00e3o, nos outros arquivos, ou seja, main.tf , provider.tf , network.tf , instances.tf , security_groups.tf , para criar uma nova regi\u00e3o, basta replicar todo o diret\u00f3rio, mudando apenas no arquivo de configura\u00e7\u00f5es .json a regi\u00e3o do provider . Crie duas pastas com essa infraestrutura, uma para a regi\u00e3o da North Virginia e outra para a regi\u00e3o de Ohio. Teste a cria\u00e7\u00e3o de uma inst\u00e2ncia em cada regi\u00e3o. OBS.: Aplique o comando de init e apply em cada uma das pastas criadas.","title":"Criando m\u00faltiplas Regi\u00f5es"},{"location":"projetos_2022/fran-janela/#criando-um-ha-de-servidores-web","text":"","title":"Criando um HA de servidores web"},{"location":"projetos_2022/fran-janela/#configurando-uma-imagem-base","text":"Para a cria\u00e7\u00e3o de um HA de servidores web, \u00e9 necess\u00e1rio primeiro criar uma imagem( ami ) que funcionar\u00e1 como template para a cria\u00e7\u00e3o de inst\u00e2ncias caso as m\u00e1quinas base estejam ficando sobre-lotadas. Crie uma inst\u00e2ncia com o sistema operacional Ubuntu Server 18.04 LTS. Aplique: sudo apt update; sudo apt install nodejs build-essential -y Edite um arquivo server.js: #!/usr/bin/env nodejs var http = require ( \"http\" ); var os = require ( \"os\" ); var crypto = require ( \"crypto\" ); http . createServer ( function ( req , res ) { res . writeHead ( 200 , { \"Content-Type\" : \"text/plain\" }); var nonce = 1 ; var seed = Math . random (); var h = crypto . createHash ( \"sha256\" ); h . update ( new Buffer ( nonce + \" Hello World \" + seed )); while ( h . digest ( \"hex\" ). substr ( 0 , 3 ) != \"000\" ) { h = crypto . createHash ( \"sha256\" ); nonce ++ ; h . update ( new Buffer ( nonce + \" Hello World \" + seed )); } res . end ( '{ \"host\": ' + os . hostname () + ', \"nonce\": ' + nonce + \"}\" ); }) . listen ( 8080 , \"\" ); console . log ( \"Server running at http://localhost:8080/\" ); Torne o arquivo execut\u00e1vel: chmod +x ./server.js Execute e teste o servidor(lembre-se de liberar a porta no security group): Configure a m\u00e1quina para iniciar o servidor automaticamente ap\u00f3s reboot : crontab -e\\ @reboot /home/ubuntu/server.js D\u00ea reboot e teste o acesso ao servidor novamente. Copywright O procedimento foi retirado do site oficial da mat\u00e9ria . Com o template de inst\u00e2ncia criado, gere uma imagem dele pela dashboard da AWS e salve a ami gerada para uso no pr\u00f3ximos passos.","title":"Configurando uma Imagem Base"},{"location":"projetos_2022/fran-janela/#criando-os-recursos-para-o-ha","text":"Para construir o HA, vamos utilizar o recurso aws_autoscaling_group , emparelhado com aws_launch_configuration e tamb\u00e9m aws_lb ( Load Balence ). Para isso, construa a infraestrutura baseada neste tutorial: Tutorial de HA . Ele foi produzido pela Hashicorp, empresa que desenvolve o Terraform, mas em caso de d\u00favida, o resultado esperado se encontra dentro da pasta sample-HA no reposit\u00f3rio do meu programa. ??? Dicas - Crie Security Groups diferentes para o Load Balencer e para configura\u00e7\u00e3o das inst\u00e2ncias. - S\u00e3o necess\u00e1rias 3 *Subnets* para a cria\u00e7\u00e3o do *Load Balencer*.","title":"Criando os recursos para o HA"},{"location":"projetos_2022/fran-janela/#crie-seu-proprio-programa","text":"Com toda a experi\u00eancia adquirida na formata\u00e7\u00e3o, constru\u00e7\u00e3o e manipula\u00e7\u00e3o da infraestrutura por meio do terraform, agora voc\u00ea \u00e9 capaz de criar o seu pr\u00f3rpio programa. Eu criei, utilizando Python , uma ferramenta que roda no terminal e executa as opera\u00e7\u00f5es descritas acima, de forma automatizada. Para isso, a aplica\u00e7\u00e3o copia os arquivos de base, armazenados na pasta sample para uma nova pasta com o nome da regi\u00e3o, configura o arquivo .tvars.json com as informa\u00e7\u00f5es descritas pelo usu\u00e1rio e executa o terraform para a cria\u00e7\u00e3o da infraestrutura. O seu programa pode ser criado via Python ou qualquer outra linguagem que voc\u00ea se sinta confort\u00e1vel para manipula\u00e7\u00e3o de arquivos e execu\u00e7\u00e3o de comandos. \u00c9 poss\u00edvel, tamb\u00e9m, que essas configura\u00e7\u00f5es sejam feitas via backend e toda a interface de usu\u00e1rio seja feita via frontend em outra linguagem, uma vez que toda a configura\u00e7\u00e3o da infraestrutura pode ser enviada via .json para o backend. Aqui o c\u00e9u \u00e9 o limite! Use a sua criatividade!","title":"Crie seu Pr\u00f3prio Programa."},{"location":"projetos_2022/fran-janela/#motivacao","text":"Minha motiva\u00e7\u00e3o para a cria\u00e7\u00e3o desta aplica\u00e7\u00e3o e, consequentemente, este tutorial veio da crescente vontade de aprender sobre infraestrutura e Computa\u00e7\u00e3o Nuvem, o que me motivou a tentar produzir algo robusto e confi\u00e1vel, que pudesse ser utilizado por pessoas com algum conhecimento em infraestrutura, assim como eu, mas com a vontade de aprender.","title":"Motiva\u00e7\u00e3o"},{"location":"roteiros/0.Cabeamento/","text":"Laborat\u00f3rio de Cabeamento - 1 Aula \u00b6 Objetivos: \u00b6 Conhecer os padr\u00f5es mais utilizados para o cabeamento de rede e a confec\u00e7\u00e3o de um cabo de rede. Ainda neste laborat\u00f3rio dever\u00e3o ser configurados todos os equipamentos que comp\u00f5em o kit de trabalho de cloud computing. Pr\u00e9-requisitos: Ethernet . [Tanenbaum - se\u00e7\u00f5es 2.2.2 Par tran\u00e7ado, 4.3.1 Cabeamento Ethernet, 4.3.8 Ethernet de gigabit]. Cloud Computing \u00b6 O kit cont\u00e9m os seguintes itens: Roteador TP-LINK TL-R470T+ Switch DLink DSG-1210-28 de 28 portas 6 hosts OBS: A senha do roteador est\u00e1 no invent\u00e1rio do seu kit e a do switch est\u00e1 no manual oficial. Passo 1 \u2013 Cabo de rede (Patch cord) \u00b6 O primeiro deste exerc\u00edcio \u00e9 a confec\u00e7\u00e3o do cabo de rede para a conex\u00e3o de seu computador pessoal ao ambiente do seu kit. O padr\u00e3o que ser\u00e1 utilizado \u00e9 o ANSI/TIA/EIA 568 que foi desenvolvido em 1991 pela EIA (Electronics Industries Alliance) e pela TIA (Telecommunications Industry Association), para normatizar as liga\u00e7\u00f5es el\u00e9tricas/eletr\u00f4nicas de cabos de rede e sua conectoriza\u00e7\u00e3o. Em 1995 uma revis\u00e3o \u00e9 publicada a ANSI/TIA/EIA 568A. Lapidando o projeto \u00b6 Antes de iniciar voc\u00ea deve \"resetar\" o switch e o roteador do seu KIT !!!!!!! \u00b6 Agora realize as seguinte modifica\u00e7\u00f5es (se preciso, leia os manuais): Altere o IP do Roteador para 172.16.0.1/20. Altere o IP do Switch para 172.16.0.2/20. Modifique o DHCP server para utilizar a subrede 172.16.0.0/20. Passo 2 \u2013 conex\u00e3o dos hosts e roteador \u00b6 De Acordo com a imagem da topologia (primeira imagem), conecte os cabos de rede presentes em seu kit no switch, hosts e roteador; Utilize o cabo que voc\u00ea montou para interligar o seu notebook com o kit (conecte ele no switch);","title":"Roteiro Cabeamento"},{"location":"roteiros/0.Cabeamento/#laboratorio-de-cabeamento-1-aula","text":"","title":"Laborat\u00f3rio de Cabeamento - 1 Aula"},{"location":"roteiros/0.Cabeamento/#objetivos","text":"Conhecer os padr\u00f5es mais utilizados para o cabeamento de rede e a confec\u00e7\u00e3o de um cabo de rede. Ainda neste laborat\u00f3rio dever\u00e3o ser configurados todos os equipamentos que comp\u00f5em o kit de trabalho de cloud computing. Pr\u00e9-requisitos: Ethernet . [Tanenbaum - se\u00e7\u00f5es 2.2.2 Par tran\u00e7ado, 4.3.1 Cabeamento Ethernet, 4.3.8 Ethernet de gigabit].","title":"Objetivos:"},{"location":"roteiros/0.Cabeamento/#cloud-computing","text":"O kit cont\u00e9m os seguintes itens: Roteador TP-LINK TL-R470T+ Switch DLink DSG-1210-28 de 28 portas 6 hosts OBS: A senha do roteador est\u00e1 no invent\u00e1rio do seu kit e a do switch est\u00e1 no manual oficial.","title":"Cloud Computing"},{"location":"roteiros/0.Cabeamento/#passo-1-cabo-de-rede-patch-cord","text":"O primeiro deste exerc\u00edcio \u00e9 a confec\u00e7\u00e3o do cabo de rede para a conex\u00e3o de seu computador pessoal ao ambiente do seu kit. O padr\u00e3o que ser\u00e1 utilizado \u00e9 o ANSI/TIA/EIA 568 que foi desenvolvido em 1991 pela EIA (Electronics Industries Alliance) e pela TIA (Telecommunications Industry Association), para normatizar as liga\u00e7\u00f5es el\u00e9tricas/eletr\u00f4nicas de cabos de rede e sua conectoriza\u00e7\u00e3o. Em 1995 uma revis\u00e3o \u00e9 publicada a ANSI/TIA/EIA 568A.","title":"Passo 1 \u2013 Cabo de rede (Patch cord)"},{"location":"roteiros/0.Cabeamento/#lapidando-o-projeto","text":"","title":"Lapidando o projeto"},{"location":"roteiros/0.Cabeamento/#antes-de-iniciar-voce-deve-resetar-o-switch-e-o-roteador-do-seu-kit","text":"Agora realize as seguinte modifica\u00e7\u00f5es (se preciso, leia os manuais): Altere o IP do Roteador para 172.16.0.1/20. Altere o IP do Switch para 172.16.0.2/20. Modifique o DHCP server para utilizar a subrede 172.16.0.0/20.","title":"Antes de iniciar voc\u00ea deve \"resetar\" o switch e o roteador do seu KIT !!!!!!!"},{"location":"roteiros/0.Cabeamento/#passo-2-conexao-dos-hosts-e-roteador","text":"De Acordo com a imagem da topologia (primeira imagem), conecte os cabos de rede presentes em seu kit no switch, hosts e roteador; Utilize o cabo que voc\u00ea montou para interligar o seu notebook com o kit (conecte ele no switch);","title":"Passo 2 \u2013 conex\u00e3o dos hosts e roteador"},{"location":"roteiros/1.Bare_metal/","text":"Bare Metal \u00b6 Objetivos: \u00b6 Entender os conceitos b\u00e1sicos sobre uma plataforma de gerenciamento de hardware. Introduzir conceitos b\u00e1sicos sobre redes de computadores. Pr\u00e9-requisitos: Realizar a leitura sobre o MaaS. [ https://maas.io/ ]. Realizar a leitura sobre redes de computadores. [Tanenbaum - se\u00e7\u00f5es 1.4, 4.0 e 5.6] Info DIVIS\u00c3O DO ROTEIRO O Roteiro \u00e9 dividido em 2 partes principais. Criando a Infraestrutura (Nuvem Bare-metal) Usando a infraestrutura: Django em Nuvem Bare-Metal Material \u00b6 O grupo ir\u00e1 contar com os seguintes itens no kit: 1 NUC (main) com 10Gb e 1 SSD (120Gb) 1 NUC (server1) com 12Gb e 1 SSD (120Gb) 1 NUC (server2) com 16Gb e 2 SSD (120Gb+120Gb) 3 NUCs (server3, server4 e server5) com 32Gb e 2 SSD (120Gb+120Gb) 1 Switch DLink DSG-1210-28 de 24 portas 1 Roteador TP-Link TL-R470T+ Rede \u00b6 Atencao as modificacoes necess\u00e1rias apresentadas nos requisitos de projeto citados abaixo, modifique o que for necess\u00e1rio. Cada grupo tem a disposi\u00e7\u00e3o um ponto de rede (cabo preto) com sa\u00edda para a rede interna da faculdade. Requisitos de projeto: Sua rede dever\u00e1 estar segregada fisicamente da rede do Insper. Todos os equipamentos estar\u00e3o conectados e possuem acesso \u00e0 Internet. As NUCs server2 , server3 , server4 e server5 estar\u00e3o conectados \u00e0 rede com 2 (duas) interfaces de rede, uma interna e uma externa USB (NIC). A NUC main e a server1 estar\u00e3o conectadas \u00e0 rede com uma interface de rede interna, a padr\u00e3o do hardware. Tarefa: Confirme se as conex\u00f5es de rede feitas anteriormente est\u00e3o corretas. Utilize o diagrama fornecido no roteiro de cabeamento e as informacoes acima. \u00b6 Cada kit possui um IP de entrada, fornecido no invent\u00e1rio do kit. Exercise QUESTOES-1 Qual a topologia da sua rede? Quais outras topologias existem? Quais as consequ\u00eancias de utilizar um DNS externo (Por exemplo: 8.8.8.8) em uma rede privada? O Switch estava originalmente em qual rede? Quantos IPs tem essa rede? Quando acessou o roteador pela primeira vez ele estava na Classe C . Quantas classes existem e qual \u00e9 classe da rede do main? Senhas - IMPORTANTE \u00b6 Todas as senhas do seu sistema devem seguir o seguinte crit\u00e9rio: utilizar a palavra 'cloud' + a letra do kit min\u00fascula. Por exemplo: 'cloudz' \u00e9 a senha padr\u00e3o do kit Z. Usar a mesma senha para todos os servi\u00e7os que exigem cadastramento N\u00c3O alterar nenhuma senha que j\u00e1 esteja pr\u00e9-cadastrada. Exercise QUESTOES-2 Quantos IPs utiliz\u00e1veis est\u00e3o dispon\u00edveis na subrede 10.12.0.0/15? Todos os IP s\u00e3o utiliz\u00e1veis? Qual a diferen\u00e7a entre um IP p\u00fablico e um IP privado? Qual a classe utilizada na rede interna do Insper? E na sua rede? Criando a Infraestrutura (Nuvem Bare-metal) \u00b6 Consulte o diagrama abaixo \"H1 - Diagrama\" Instalando o Ubuntu \u00b6 Procure tutoriais de como instalar o Sistema Operacional Ubuntu server , utilize o pen drive da caixa do seu KIT. Instale o Ubuntu Server 22.04 LTS na NUC main: hostname: main login: cloud senha: (cloud + letra do kit) IP fixo: 172.16.0.3 Instalando o MaaS \u00b6 Verifique se consegue pingar '8.8.8.8'. Se n\u00e3o conseguir, descubra como rotear os pacotes corretamente. Verifique se consegue pingar ' www.google.com '. Se n\u00e3o conseguir, descubra como resolver as urls corretamente. $ sudo apt update && sudo apt upgrade -y V\u00e1 tomar um caf\u00e9. $ sudo snap install maas Tenho certeza que voc\u00ea n\u00e3o leu os pr\u00e9-requisitos, ao inv\u00e9s do caf\u00e9 d\u00e1 uma lida na documentacao pedida no comeco do roteiro $ sudo snap install maas-test-db Acessando sua maquina remotamente. \u00b6 faca o acesso utilizando SSH \u00b6 Dentro da rede Local \u00b6 ssh cloud@172.16.0.3 Configurando o MaaS \u00b6 Inicializando o MaaS: $ sudo maas init region+rack $ sudo maas createadmin use o login cloud use a senha padr\u00e3o da disciplina deixe a chave vazia Gerando um par de chaves para autentica\u00e7\u00e3o. $ ssh-keygen -t rsa use senha vazia dessa vez $ cat ./.ssh/id_rsa.pub copie a chave gerada Agora vamos acessar o Dashboard do MaaS: ele estar\u00e1 dispon\u00edvel em http://172.16.0.3:5240/MAAS . Entenda onde o servi\u00e7o esta rodando e fa\u00e7a o login configure um DNS Forwarder com o DNS do Insper (DNS Externo que o seu roteador enxerga). Importe as imagens do Ubuntu 22.04LTS, Ubuntu 20.04 LTS e Ubuntu 18.04 LTS . Fa\u00e7a o upload da chave copiada no terminal SSH. Em Settings | General: Global Kernel Parameters: net.ifnames=0 (sem espa\u00e7os) Chaveando o DHCP \u00b6 Explore as configura\u00e7\u00f5es do MaaS. Habilite o DHCP na subrede pelo MaaS Controller. ALTERE o Reserved Range para iniciar em 172.16.11.1 e acabar em 172.16.14.255. Deixe o DNS da subnet apontando para o DNS do Insper! Desabilitar o DHCP no roteador. Comissionando servidores \u00b6 O documento de invent\u00e1rio cont\u00e9m informacoes importantes e esta no Blackboard, na aba de grupos. Com a folha do invent\u00e1rio do Kit (blackboard), cadastre os hosts (machines) dispon\u00edveis. Altere a op\u00e7\u00e3o Power Type para Intel AMT e preencha segundo a tabela da folha. As NUCs ir\u00e3o comissionar automaticamente, realizando o boot via PXE na rede. hora do Ch\u00e1 , s\u00f3 aliviar o est\u00f4mago um pouco. Ch\u00e1 tamb\u00e9m tem cafe\u00edna. Todos os n\u00f3s devem aparecer com o status Ready . Verificar se as caracter\u00edsticas de hardware (cpu, mem\u00f3ria, SSD e rede) foram detectados com sucesso. Adicionar o Roteador como devices no Dashboard do MaaS Aten\u00e7\u00e3o : verificar se as interfaces de rede se chamam eth0 (placa rede padr\u00e3o com PXE) e eth1 (NIC usb). Verificar o Global Kernel Parameters, apagar o n\u00f3 e reiniciar o processo caso algo esteja errado . Exercise QUESTOES-3 Por que Desabilitar o DHCP do roteador? Descreva o processo PXE Boot? Qual a sua grande vantagem em um datacenter real? Analisando em um aspecto mais amplo, quais outras funcionalidades do MaaS podem ser \u00fateis no gerenciamento de bare metal ? Fazendo Acesso Remoto ao seu KIT \u00b6 De acordo com as aulas te\u00f3ricas, vamos realizar um NAT para permitir o acesso externo \"Rede Wi-fi Insper\" do seu computador ao servidor MAIN . A meta \u00e9 conseguir conectar no servidor principal \"main\" utilizando a porta 22. Libere tambem o acesso ao gerenciamento remoto do seu roteador criando uma regra de gest\u00e3o para a rede 0.0.0.0/0 Se n\u00e3o lembrar das aulas te\u00f3ricas, pesquise por como fazer NAT no Roteador do seu KIT. LINK-documentacao Usando a infraestrutura: \u00b6 Django em Nuvem Bare-Metal \u00b6 Primeiro Deploy \u00b6 Vamos realizar um deploy manual de uma aplica\u00e7\u00e3o simples em Django em nossa nuvem MaaS. Antes de come\u00e7ar, realize um pequeno ajuste no DNS server: Dentro da aba Subnets, clicar na subnet 172.16.0.0/20 e editar a Subnet summary colocando o DNS do Insper - 172.20.129.131 Primeira parte: Banco de Dados \u00b6 Postgres \u00e9 um servidor de banco de dados vers\u00e1til e de f\u00e1cil manejo. Muito usado em projetos Opensource. Acesse o Dashboard do MaaS e realize o deploy do Ubuntu 22.04 no server1. Acesse o terminal do server1 via SSH: $ sudo apt update $ sudo apt install postgresql postgresql-contrib -y Ainda no terminal do server1, crie agora um usu\u00e1rio para a aplica\u00e7\u00e3o: $ sudo su - postgres $ createuser -s cloud -W Usar a senha: cloud Crie um database para a aplica\u00e7\u00e3o: $ createdb -O cloud tasks Exponha o servi\u00e7o para acesso: $ nano /etc/postgresql/12/main/postgresql.conf Remova o coment\u00e1rio e substitua a string da linha para aceitar conex\u00f5es remotas: listen_addresses = '*' $ nano /etc/postgresql/12/main/pg_hba.conf Adicione a linha que libera qualquer m\u00e1quina dentro da subnet do kit: host all all 172.16.0.0/20 trust Saia do usu\u00e1rio postgres Libere o firewall: $ sudo ufw allow 5432/tcp Reinicie o servi\u00e7o: $ sudo systemctl restart postgresql Ser\u00e1 que \u00e9 poss\u00edvel automatizar esse processo Parte II: Aplica\u00e7\u00e3o Django \u00b6 De volta ao maas, vamos subir uma aplica\u00e7\u00e3o ORM Django pr\u00e9 produzida. No lugar de [login], utilize o usu\u00e1rio criado para administrar o MaaS. Pe\u00e7a uma m\u00e1quina direto do cli no terminal agora: $ maas login [login] http://172.16.0.3:5240/MAAS/ Buscar o token no dashboard dentro das configura\u00e7\u00f5es do usu\u00e1rio. Solicite a reserva da m\u00e1quina para o MaaS: $ maas [login] machines allocate name=server2 Anote o campo system_id do json resultante. Realize o deploy via linha de comando, usando o cli: $ maas [login] machine deploy [system_id] Caf\u00e9 ... Aguarde a m\u00e1quina finalizar e entre via ssh nela. No SSH do server2: $ git clone https://github.com/raulikeda/tasks.git Entre no diretorio tasks. $ ./install.sh reboot e aguarde Teste acessando o servi\u00e7o na porta 8080 no terminal do maas: $ wget http://[IP server2]:8080/admin/ Para acessar o servi\u00e7o no seu browser seria necess\u00e1rio fazer um NAT no roteador. Por\u00e9m podemos considerar esse servi\u00e7o como sendo tempor\u00e1rio e podemos usar uma outra forma de expor o servi\u00e7o para fora do kit usando SSH tunnel: Desconecte do SSH do maas Reconecte novamente usando: $ ssh cloud@10.103.0.X -L 8001:[IP server2]:8080 O comando acima ir\u00e1 criar um tunel do servi\u00e7o do server2 na porta 8080 para o seu localhost na porta 8001 usando a conex\u00e3o SSH. Note que \u00e9 importante que a porta 8001 n\u00e3o esteja sendo usada no seu computado. Acesse ent\u00e3o o endere\u00e7o no browser: http://localhost:8001/admin/ Login Django: cloud Senha Django: cloud Tome um tempo olhando o conte\u00fado do arquivo install.sh. Ele automatiza as tarefas de instala\u00e7\u00e3o usando shell script. Note que a utiliza\u00e7\u00e3o do maas-cli no terminal substitui a utiliza\u00e7\u00e3o do dashboard. Tome um tempo explorando: $ maas [login] help commands Caso tenha interesse na aplica\u00e7\u00e3o django: https://docs.djangoproject.com/pt-br/3.1/intro/tutorial01/ Exercise CheckPoint-1 De um print das Telas abaixo: 1. Do Dashboard do **MAAS** com as m\u00e1quinas. 1. Da aba images, com as imagens sincronizadas. 1. Da Aba de cada maquina(5x) mostrando os testes de hardware e commissioning com Status \"OK\" Finalizando \u00b6 Exercise QUESTOES-4 O que \u00e9 e como funciona o NAT? O que significa LTS? Por que isso importa para uma empresa? O que \u00e9 IPv6? Qual a import\u00e2ncia da migra\u00e7\u00e3o? A literatura preconiza que o Modelo de Rede Internet possui 4 camadas, quais s\u00e3o elas e quais camadas foram envolvidas nesse cap\u00edtulo? A literatura mais antiga discorre sobre o Modelo de Rede OSI de 7 camadas. Explique a diferen\u00e7a entre os dois modelos. O que \u00e9 um MAC address? O que \u00e9 um IP address? Como ele difere do MAC address? O que \u00e9 CIDR? Qual o papel da subrede? O que s\u00e3o DHCP, DNS e gateway? Conclus\u00e3o: SOMENTE PARA PENSAR \u00b6 Descreva como o MaaS poderia ser utilizado em um datacenter real (com muitos servidores) e como seria um processo alternativo sem essa ferramenta. Ainda, \u00e9 poss\u00edvel e *SIMPLES* realizar a implanta\u00e7\u00e3o de uma aplica\u00e7\u00e3o usando o MaaS?","title":"MAAS"},{"location":"roteiros/1.Bare_metal/#bare-metal","text":"","title":"Bare Metal"},{"location":"roteiros/1.Bare_metal/#objetivos","text":"Entender os conceitos b\u00e1sicos sobre uma plataforma de gerenciamento de hardware. Introduzir conceitos b\u00e1sicos sobre redes de computadores. Pr\u00e9-requisitos: Realizar a leitura sobre o MaaS. [ https://maas.io/ ]. Realizar a leitura sobre redes de computadores. [Tanenbaum - se\u00e7\u00f5es 1.4, 4.0 e 5.6] Info DIVIS\u00c3O DO ROTEIRO O Roteiro \u00e9 dividido em 2 partes principais. Criando a Infraestrutura (Nuvem Bare-metal) Usando a infraestrutura: Django em Nuvem Bare-Metal","title":"Objetivos:"},{"location":"roteiros/1.Bare_metal/#material","text":"O grupo ir\u00e1 contar com os seguintes itens no kit: 1 NUC (main) com 10Gb e 1 SSD (120Gb) 1 NUC (server1) com 12Gb e 1 SSD (120Gb) 1 NUC (server2) com 16Gb e 2 SSD (120Gb+120Gb) 3 NUCs (server3, server4 e server5) com 32Gb e 2 SSD (120Gb+120Gb) 1 Switch DLink DSG-1210-28 de 24 portas 1 Roteador TP-Link TL-R470T+","title":"Material"},{"location":"roteiros/1.Bare_metal/#rede","text":"Atencao as modificacoes necess\u00e1rias apresentadas nos requisitos de projeto citados abaixo, modifique o que for necess\u00e1rio. Cada grupo tem a disposi\u00e7\u00e3o um ponto de rede (cabo preto) com sa\u00edda para a rede interna da faculdade. Requisitos de projeto: Sua rede dever\u00e1 estar segregada fisicamente da rede do Insper. Todos os equipamentos estar\u00e3o conectados e possuem acesso \u00e0 Internet. As NUCs server2 , server3 , server4 e server5 estar\u00e3o conectados \u00e0 rede com 2 (duas) interfaces de rede, uma interna e uma externa USB (NIC). A NUC main e a server1 estar\u00e3o conectadas \u00e0 rede com uma interface de rede interna, a padr\u00e3o do hardware.","title":"Rede"},{"location":"roteiros/1.Bare_metal/#tarefa-confirme-se-as-conexoes-de-rede-feitas-anteriormente-estao-corretas-utilize-o-diagrama-fornecido-no-roteiro-de-cabeamento-e-as-informacoes-acima","text":"Cada kit possui um IP de entrada, fornecido no invent\u00e1rio do kit. Exercise QUESTOES-1 Qual a topologia da sua rede? Quais outras topologias existem? Quais as consequ\u00eancias de utilizar um DNS externo (Por exemplo: 8.8.8.8) em uma rede privada? O Switch estava originalmente em qual rede? Quantos IPs tem essa rede? Quando acessou o roteador pela primeira vez ele estava na Classe C . Quantas classes existem e qual \u00e9 classe da rede do main?","title":"Tarefa: Confirme se as conex\u00f5es de rede feitas anteriormente est\u00e3o corretas. Utilize o diagrama fornecido no roteiro de cabeamento e as informacoes acima."},{"location":"roteiros/1.Bare_metal/#senhas-importante","text":"Todas as senhas do seu sistema devem seguir o seguinte crit\u00e9rio: utilizar a palavra 'cloud' + a letra do kit min\u00fascula. Por exemplo: 'cloudz' \u00e9 a senha padr\u00e3o do kit Z. Usar a mesma senha para todos os servi\u00e7os que exigem cadastramento N\u00c3O alterar nenhuma senha que j\u00e1 esteja pr\u00e9-cadastrada. Exercise QUESTOES-2 Quantos IPs utiliz\u00e1veis est\u00e3o dispon\u00edveis na subrede 10.12.0.0/15? Todos os IP s\u00e3o utiliz\u00e1veis? Qual a diferen\u00e7a entre um IP p\u00fablico e um IP privado? Qual a classe utilizada na rede interna do Insper? E na sua rede?","title":"Senhas - IMPORTANTE"},{"location":"roteiros/1.Bare_metal/#criando-a-infraestrutura-nuvem-bare-metal","text":"Consulte o diagrama abaixo \"H1 - Diagrama\"","title":"Criando a Infraestrutura (Nuvem Bare-metal)"},{"location":"roteiros/1.Bare_metal/#instalando-o-ubuntu","text":"Procure tutoriais de como instalar o Sistema Operacional Ubuntu server , utilize o pen drive da caixa do seu KIT. Instale o Ubuntu Server 22.04 LTS na NUC main: hostname: main login: cloud senha: (cloud + letra do kit) IP fixo: 172.16.0.3","title":"Instalando o Ubuntu"},{"location":"roteiros/1.Bare_metal/#instalando-o-maas","text":"Verifique se consegue pingar '8.8.8.8'. Se n\u00e3o conseguir, descubra como rotear os pacotes corretamente. Verifique se consegue pingar ' www.google.com '. Se n\u00e3o conseguir, descubra como resolver as urls corretamente. $ sudo apt update && sudo apt upgrade -y V\u00e1 tomar um caf\u00e9. $ sudo snap install maas Tenho certeza que voc\u00ea n\u00e3o leu os pr\u00e9-requisitos, ao inv\u00e9s do caf\u00e9 d\u00e1 uma lida na documentacao pedida no comeco do roteiro $ sudo snap install maas-test-db","title":"Instalando o MaaS"},{"location":"roteiros/1.Bare_metal/#acessando-sua-maquina-remotamente","text":"","title":"Acessando sua maquina remotamente."},{"location":"roteiros/1.Bare_metal/#faca-o-acesso-utilizando-ssh","text":"","title":"faca o acesso utilizando SSH"},{"location":"roteiros/1.Bare_metal/#dentro-da-rede-local","text":"ssh cloud@172.16.0.3","title":"Dentro da rede Local"},{"location":"roteiros/1.Bare_metal/#configurando-o-maas","text":"Inicializando o MaaS: $ sudo maas init region+rack $ sudo maas createadmin use o login cloud use a senha padr\u00e3o da disciplina deixe a chave vazia Gerando um par de chaves para autentica\u00e7\u00e3o. $ ssh-keygen -t rsa use senha vazia dessa vez $ cat ./.ssh/id_rsa.pub copie a chave gerada Agora vamos acessar o Dashboard do MaaS: ele estar\u00e1 dispon\u00edvel em http://172.16.0.3:5240/MAAS . Entenda onde o servi\u00e7o esta rodando e fa\u00e7a o login configure um DNS Forwarder com o DNS do Insper (DNS Externo que o seu roteador enxerga). Importe as imagens do Ubuntu 22.04LTS, Ubuntu 20.04 LTS e Ubuntu 18.04 LTS . Fa\u00e7a o upload da chave copiada no terminal SSH. Em Settings | General: Global Kernel Parameters: net.ifnames=0 (sem espa\u00e7os)","title":"Configurando o MaaS"},{"location":"roteiros/1.Bare_metal/#chaveando-o-dhcp","text":"Explore as configura\u00e7\u00f5es do MaaS. Habilite o DHCP na subrede pelo MaaS Controller. ALTERE o Reserved Range para iniciar em 172.16.11.1 e acabar em 172.16.14.255. Deixe o DNS da subnet apontando para o DNS do Insper! Desabilitar o DHCP no roteador.","title":"Chaveando o DHCP"},{"location":"roteiros/1.Bare_metal/#comissionando-servidores","text":"O documento de invent\u00e1rio cont\u00e9m informacoes importantes e esta no Blackboard, na aba de grupos. Com a folha do invent\u00e1rio do Kit (blackboard), cadastre os hosts (machines) dispon\u00edveis. Altere a op\u00e7\u00e3o Power Type para Intel AMT e preencha segundo a tabela da folha. As NUCs ir\u00e3o comissionar automaticamente, realizando o boot via PXE na rede. hora do Ch\u00e1 , s\u00f3 aliviar o est\u00f4mago um pouco. Ch\u00e1 tamb\u00e9m tem cafe\u00edna. Todos os n\u00f3s devem aparecer com o status Ready . Verificar se as caracter\u00edsticas de hardware (cpu, mem\u00f3ria, SSD e rede) foram detectados com sucesso. Adicionar o Roteador como devices no Dashboard do MaaS Aten\u00e7\u00e3o : verificar se as interfaces de rede se chamam eth0 (placa rede padr\u00e3o com PXE) e eth1 (NIC usb). Verificar o Global Kernel Parameters, apagar o n\u00f3 e reiniciar o processo caso algo esteja errado . Exercise QUESTOES-3 Por que Desabilitar o DHCP do roteador? Descreva o processo PXE Boot? Qual a sua grande vantagem em um datacenter real? Analisando em um aspecto mais amplo, quais outras funcionalidades do MaaS podem ser \u00fateis no gerenciamento de bare metal ?","title":"Comissionando servidores"},{"location":"roteiros/1.Bare_metal/#fazendo-acesso-remoto-ao-seu-kit","text":"De acordo com as aulas te\u00f3ricas, vamos realizar um NAT para permitir o acesso externo \"Rede Wi-fi Insper\" do seu computador ao servidor MAIN . A meta \u00e9 conseguir conectar no servidor principal \"main\" utilizando a porta 22. Libere tambem o acesso ao gerenciamento remoto do seu roteador criando uma regra de gest\u00e3o para a rede 0.0.0.0/0 Se n\u00e3o lembrar das aulas te\u00f3ricas, pesquise por como fazer NAT no Roteador do seu KIT. LINK-documentacao","title":"Fazendo Acesso Remoto ao seu KIT"},{"location":"roteiros/1.Bare_metal/#usando-a-infraestrutura","text":"","title":"Usando a infraestrutura:"},{"location":"roteiros/1.Bare_metal/#django-em-nuvem-bare-metal","text":"","title":"Django em Nuvem Bare-Metal"},{"location":"roteiros/1.Bare_metal/#primeiro-deploy","text":"Vamos realizar um deploy manual de uma aplica\u00e7\u00e3o simples em Django em nossa nuvem MaaS. Antes de come\u00e7ar, realize um pequeno ajuste no DNS server: Dentro da aba Subnets, clicar na subnet 172.16.0.0/20 e editar a Subnet summary colocando o DNS do Insper - 172.20.129.131","title":"Primeiro Deploy"},{"location":"roteiros/1.Bare_metal/#primeira-parte-banco-de-dados","text":"Postgres \u00e9 um servidor de banco de dados vers\u00e1til e de f\u00e1cil manejo. Muito usado em projetos Opensource. Acesse o Dashboard do MaaS e realize o deploy do Ubuntu 22.04 no server1. Acesse o terminal do server1 via SSH: $ sudo apt update $ sudo apt install postgresql postgresql-contrib -y Ainda no terminal do server1, crie agora um usu\u00e1rio para a aplica\u00e7\u00e3o: $ sudo su - postgres $ createuser -s cloud -W Usar a senha: cloud Crie um database para a aplica\u00e7\u00e3o: $ createdb -O cloud tasks Exponha o servi\u00e7o para acesso: $ nano /etc/postgresql/12/main/postgresql.conf Remova o coment\u00e1rio e substitua a string da linha para aceitar conex\u00f5es remotas: listen_addresses = '*' $ nano /etc/postgresql/12/main/pg_hba.conf Adicione a linha que libera qualquer m\u00e1quina dentro da subnet do kit: host all all 172.16.0.0/20 trust Saia do usu\u00e1rio postgres Libere o firewall: $ sudo ufw allow 5432/tcp Reinicie o servi\u00e7o: $ sudo systemctl restart postgresql Ser\u00e1 que \u00e9 poss\u00edvel automatizar esse processo","title":"Primeira parte: Banco de Dados"},{"location":"roteiros/1.Bare_metal/#parte-ii-aplicacao-django","text":"De volta ao maas, vamos subir uma aplica\u00e7\u00e3o ORM Django pr\u00e9 produzida. No lugar de [login], utilize o usu\u00e1rio criado para administrar o MaaS. Pe\u00e7a uma m\u00e1quina direto do cli no terminal agora: $ maas login [login] http://172.16.0.3:5240/MAAS/ Buscar o token no dashboard dentro das configura\u00e7\u00f5es do usu\u00e1rio. Solicite a reserva da m\u00e1quina para o MaaS: $ maas [login] machines allocate name=server2 Anote o campo system_id do json resultante. Realize o deploy via linha de comando, usando o cli: $ maas [login] machine deploy [system_id] Caf\u00e9 ... Aguarde a m\u00e1quina finalizar e entre via ssh nela. No SSH do server2: $ git clone https://github.com/raulikeda/tasks.git Entre no diretorio tasks. $ ./install.sh reboot e aguarde Teste acessando o servi\u00e7o na porta 8080 no terminal do maas: $ wget http://[IP server2]:8080/admin/ Para acessar o servi\u00e7o no seu browser seria necess\u00e1rio fazer um NAT no roteador. Por\u00e9m podemos considerar esse servi\u00e7o como sendo tempor\u00e1rio e podemos usar uma outra forma de expor o servi\u00e7o para fora do kit usando SSH tunnel: Desconecte do SSH do maas Reconecte novamente usando: $ ssh cloud@10.103.0.X -L 8001:[IP server2]:8080 O comando acima ir\u00e1 criar um tunel do servi\u00e7o do server2 na porta 8080 para o seu localhost na porta 8001 usando a conex\u00e3o SSH. Note que \u00e9 importante que a porta 8001 n\u00e3o esteja sendo usada no seu computado. Acesse ent\u00e3o o endere\u00e7o no browser: http://localhost:8001/admin/ Login Django: cloud Senha Django: cloud Tome um tempo olhando o conte\u00fado do arquivo install.sh. Ele automatiza as tarefas de instala\u00e7\u00e3o usando shell script. Note que a utiliza\u00e7\u00e3o do maas-cli no terminal substitui a utiliza\u00e7\u00e3o do dashboard. Tome um tempo explorando: $ maas [login] help commands Caso tenha interesse na aplica\u00e7\u00e3o django: https://docs.djangoproject.com/pt-br/3.1/intro/tutorial01/ Exercise CheckPoint-1 De um print das Telas abaixo: 1. Do Dashboard do **MAAS** com as m\u00e1quinas. 1. Da aba images, com as imagens sincronizadas. 1. Da Aba de cada maquina(5x) mostrando os testes de hardware e commissioning com Status \"OK\"","title":"Parte II: Aplica\u00e7\u00e3o Django"},{"location":"roteiros/1.Bare_metal/#finalizando","text":"Exercise QUESTOES-4 O que \u00e9 e como funciona o NAT? O que significa LTS? Por que isso importa para uma empresa? O que \u00e9 IPv6? Qual a import\u00e2ncia da migra\u00e7\u00e3o? A literatura preconiza que o Modelo de Rede Internet possui 4 camadas, quais s\u00e3o elas e quais camadas foram envolvidas nesse cap\u00edtulo? A literatura mais antiga discorre sobre o Modelo de Rede OSI de 7 camadas. Explique a diferen\u00e7a entre os dois modelos. O que \u00e9 um MAC address? O que \u00e9 um IP address? Como ele difere do MAC address? O que \u00e9 CIDR? Qual o papel da subrede? O que s\u00e3o DHCP, DNS e gateway?","title":"Finalizando"},{"location":"roteiros/1.Bare_metal/#conclusao-somente-para-pensar","text":"Descreva como o MaaS poderia ser utilizado em um datacenter real (com muitos servidores) e como seria um processo alternativo sem essa ferramenta. Ainda, \u00e9 poss\u00edvel e *SIMPLES* realizar a implanta\u00e7\u00e3o de uma aplica\u00e7\u00e3o usando o MaaS?","title":"Conclus\u00e3o: SOMENTE PARA PENSAR"},{"location":"roteiros/2.Deployment/","text":"Deployment Orchestration \u00b6 Objetivos: Entender os conceitos b\u00e1sicos sobre uma plataforma de gerenciamento de aplica\u00e7\u00f5es distribu\u00eddas. Entender os conceitos b\u00e1sicos de comunica\u00e7\u00e3o entre aplica\u00e7\u00f5es e servi\u00e7os. Pr\u00e9-requisitos: Terminar o cap\u00edtulo anterior (Bare metal) Realizar a leitura sobre o Juju. [ https://jaas.ai/how-it-works ]. Realizar a leitura sobre redes de computadores. [Kavis - Cap. 6. Tanenbaum & Steen - Cap. 1 e Cap. 12] Info DIVIS\u00c3O DO ROTEIRO O Roteiro \u00e9 dividido em 3 partes principais. Entender a automac\u00e3o do Deploy - Utilizando ferramenta Ansible no Bare-metal Criando Infraestrutura para deploy com Juju (Deployment Orchestration) Utilizando a infraestrutura Bare Metal com o Juju - exemplo de deploy Wordpress Utilizando o Ansible - deploy automatizado de aplica\u00e7\u00e3o \u00b6 Vamos realizar a instala\u00e7\u00e3o da mesma aplica\u00e7\u00e3o de forma autom\u00e1tica, por exemplo podemos efetuar a instala\u00e7\u00e3o em diversos servers . Vamos ent\u00e3o utilizar novos conceitos e ferramentas: Exemplo - gerenciador de deploy Ansible ( https://www.ansible.com/ ) Caracter\u00edsticas: Idempotente no sentido de conseguir repetir todos os procedimentos sem afetar os estados intermedi\u00e1rios da insta\u00e7\u00e3o. F\u00e1cil de se lidar com um pool de m\u00e1quinas simultaneamente. Consegue realizar o provisionamento autom\u00e1tico de VMs e Containers (mas n\u00e3o metal). Tarefas: Pe\u00e7a o deploy no server3 para o maas via cli Agora no SSH do main: $ sudo apt install ansible $ wget https://raw.githubusercontent.com/raulikeda/tasks/master/tasks-install-playbook.yaml $ ansible-playbook tasks-install-playbook.yaml --extra-vars server=[IP server3] Exercise Check-point1: Teste o acesso criando mais um tunel na string de conex\u00e3o, caso esteja tudo certo, fa\u00e7a a tarefa abaixo De um print da tela do Dashboard do MAAS com as 3 Maquinas e seus respectivos IPs. Mantendo o tunel aberto, rode o comando WGET para acesso a aplicacao Django no server 2 e cole a sa\u00edda do comando. Mantendo o tunel aberto, rode o comando WGET para acesso a aplicacao Django no server 3 e cole a sa\u00edda do comando. Agora temos 2 aplica\u00e7\u00f5es django (server2 e server3) compartilhando o mesmo banco de dados (server1). Os motivos para fazermos isso s\u00e3o dois: Alta disponibilidade: se um node cair o outro est\u00e1 no ar. Load Balancing: podemos dividir a carga de acesso entre os n\u00f3s. Contudo seria ideal que tiv\u00e9ssemos apenas um ponto de entrada, ao inv\u00e9s de escolher manualmente ou chavear os IPs dos n\u00f3s. Balancamento de carga usando Proxy Reverso \u00b6 Para montar o ponto \u00fanico de entrada, utilizaremos uma aplica\u00e7\u00e3o de proxy reverso como load balancer. Voc\u00eas conseguem instalar o NGINX no n\u00f3 server4 como loadbalancer... Tutorial para fazer manual: https://www.digitalocean.com/community/tutorials/how-to-set-up-nginx-load-balancing Exercise Check-point2: Teste o acesso criando mais um tunel na string de conex\u00e3o, caso esteja tudo certo, fa\u00e7a a tarefa abaixo. De um print da tela do Dashboard do MAAS com as 4 Maquinas e seus respectivos IPs. Mantendo o tunel aberto, rode o comando WGET para acesso a aplicacao Django, porem agora o comando deve apontar para o load-balancer, cole a sa\u00edda do comando aqui. Exercise QUESTOES-1 Escreva aqui o seu roteiro de implanta\u00e7\u00e3o do NGINX. Explique o conceito por traz do Reverse Proxy. Voc\u00eas j\u00e1 fizeram algo parecido? Na instala\u00e7\u00e3o toda, voc\u00ea alocou 4 m\u00e1quinas f\u00edsicas, duas para o Django, uma para o Postgres e uma para o NGINX. Considerando que \u00e9 um Hardware pr\u00f3prio, ao contr\u00e1rio do modelo \"Public Cloud\", esse modelo de arquitetura \u00e9 bom ou ruim em termos de custos? Agora que voc\u00ea utilizou um gerenciador de deploy, vamos retormar a cria\u00e7\u00e3o de nuvem utilizando este novo conceito. Remova o deploy (release) de todos n\u00f3s no kit. Criando Infraestrutura para deploy com Juju \u00b6 Ansible \u00e9 um gerenciador de deploy que consegue lidar com a instala\u00e7\u00e3o e configura\u00e7\u00e3o de um conjunto de n\u00f3s pr\u00e9 reservados, mas n\u00e3o consegue realizar o provisionamento direto com o MaaS (gerenciador de Bare-metal). Para montar a nossa Cloud Privada, vamos utilizar outro orquestrador de deploy que integra com o MaaS. Antes de continuar, verifique se todas m\u00e1quinas (server1, server2, server3, server4 e server5) est\u00e3o Ready no MAAS. Fa\u00e7a o release das m\u00e1quinas Django e Postgres caso necess\u00e1rio. Acesse o main via SSH e instale o Juju $ sudo snap install juju --classic --channel=2.9/stable Verifique se o Juju enxerga o MaaS como um provedor de recursos $ juju clouds Caso n\u00e3o possua o MaaS como op\u00e7\u00e3o, deve adicion\u00e1-lo Criar um arquivo de configura\u00e7\u00e3o: maas-juju.yaml (aten\u00e7\u00e3o com a formata\u00e7\u00e3o) clouds: maas: type: maas auth-types: [oauth1] endpoint: http://192.168.0.3:5240/MAAS/ $ juju add-cloud maas maas-juju.yaml $ juju add-credential maas Obs: OAuth \u00e9 o API KEY gerado no MaaS (dentro do menu do usu\u00e1rio) Vamos criar agora o juju controller : $ juju bootstrap --bootstrap-series=jammy maas main --to server1 Para verificar o status do controller utilize: $ juju status Para acessar o Dashboard (via browser): $ juju gui Crie novamente um tunel SSH: $ ssh cloud@[IP Roteador] -L 8080:[IP do Juju GUI]:17070 Acesse do seu browser a url indicada no terminal, adaptando o endere\u00e7o IP. Ao contr\u00e1rio do Ansible, Juju necessita de uma m\u00e1quina exclusiva para controlar todo o deploy. Essa m\u00e1quina \u00e9 alocada automaticamente durante o bootstrap e controlar\u00e1 todo o deploy que faremos no pr\u00f3ximo roteiro. Ainda, assim como voc\u00ea usou o maas-cli na primeira implanta\u00e7\u00e3o, voc\u00ea usou o juju-cli para interagir com o servi\u00e7o. Exercise QUESTOES-2 Qual o S.O. utilizado na m\u00e1quina Juju? Quem o instalou? O Juju requisitou uma m\u00e1quina automaticamente para o MaaS via API. Por quais motivos ter uma API \u00e9 importante para uma aplica\u00e7\u00e3o? Utilizando a infraestrutura Bare Metal com o Juju \u00b6 Vamos utilizar o Juju para deploy de uma das arquiteturas abaixo. As aplica\u00e7\u00f5es que vamos utilizar s\u00e3o: Grafana junto com o Prometheus Wordpress junto com o MySQL Fique a vontade para pesquisar sobre elas e escolher a que mais lhe agradar. Deploy Grafana e Prometheus \u00b6 O Grafana \u00e9 uma plataforma de c\u00f3digo aberto que simplifica a apresenta\u00e7\u00e3o visual de dados, como gr\u00e1ficos e pain\u00e9is, facilitando a compreens\u00e3o em tempo real de sistemas e informa\u00e7\u00f5es. Para funcionar, o Grafana requer um banco de dados para armazenar configura\u00e7\u00f5es, metadados e informa\u00e7\u00f5es relacionadas \u00e0 exibi\u00e7\u00e3o de dados em seus pain\u00e9is e gr\u00e1ficos. Ele \u00e9 compat\u00edvel com v\u00e1rios bancos de dados, como Prometheus, MySQL, PostgreSQL, InfluxDB, SQLite3 e outros. Neste contexto, estamos utilizando o Prometheus como banco de dados, mas voc\u00ea tem a flexibilidade de escolher outro se preferir. Instale a aplica\u00e7\u00e3o charm para utilizarmos, vamos baixar o charm do Grafana do reposit\u00f3rio charm-hub. Charm O charm \u00e9 como um pacote que cont\u00e9m instru\u00e7\u00f5es sobre como instalar e configurar um aplicativo, como o Grafana . Voc\u00ea simplesmente escolhe o charm do Grafana, define algumas configura\u00e7\u00f5es e o Juju cuida do restante, tornando o processo de implanta\u00e7\u00e3o mais f\u00e1cil e consistente em ambientes de nuvem. Entenda melhor sobre o que \u00e9 o charm lendo a sua documenta\u00e7\u00e3o charm-hub . $ sudo snap install charm --channel=2.x/stable --classic Baixe o charm do https://charmhub.io/grafana usando o comando charm pull . $ charm pull grafana Tamb\u00e9m vamos utilizar o charm do Prometheus $ charm pull prometheus2 Agora \u00e9 s\u00f3 fazer o Deploy com o auxilio do JUJU \u00b6 Fa\u00e7a o deploy do charm prometheus2 , para fazer deploy do charm local, use juju deploy ./pasta Deploy do charm grafana \u00b6 Ao realizar o Deploy do grafana, acompanhe o processo utilizando o comando juju status Caso ocorra um erro durante a instala\u00e7\u00e3o ( hook failed: install ): - Devemos acessar o log da aplica\u00e7\u00e3o via o comando juju debug-log --replay --include grafana/2 * Nos logs voce encontrar\u00e1 mais informa\u00e7\u00f5es da causa do erro NO_PUBKEY * Ele ocorre, pois a chave GPG do reposit\u00f3rio do grafana n\u00e3o est\u00e1 no seu servidor, quando o juju tenta fazer apt-get update o sistema n\u00e3o consegue verificar a autenticidade do reposit\u00f3rio. * Para consertar devemos acessar o servidor do grafana e instalar a chave manualmente: * juju ssh grafana/2 * wget -q -O - https://packages.grafana.com/gpg.key | sudo apt-key add - * sudo apt-get update Ao rodar os comandos acima, a chave ser\u00e1 instalada no sistema. Aguarde alguns instantes e o processo de instala\u00e7\u00e3o do grafana seguir\u00e1 normalmente. Acompanhe o andamento usando o comando juju status . Integrando Grafana com Prometheus \u00b6 Utilize a documenta\u00e7\u00e3o encontrada no README do charm do grafana. Acesse o dashboard do Grafana do seu computador e verifique o funcionamento do sistema. Verifique se a integra\u00e7\u00e3o foi feita corretamente. Para isso crie um dashboard dentro do grafana e adicione uma visualiza\u00e7\u00e3o (deve aparecer o prometheus como source). Exercise Apenas se escolheu fazer o deploy do grafana Checkpoint-3 De um print da tela do Dashboard do MAAS com as Maquinas e seus respectivos IPs. De um print de tela do comando \"juju status\" depois que o Grafana estiver \"active\". De um print da tela do Dashboard do Grafana com o Prometheus aparecendo como source. Deploy Wordpress e MySQL \u00b6 O Wordpress \u00e9 uma plataforma de gerenciamento de conte\u00fado (CMS) de c\u00f3digo aberto, baseada em PHP e MySQL. Ele \u00e9 usado por mais de 60 milh\u00f5es de sites, incluindo 33,6% dos 10 milh\u00f5es de sites mais bem classificados. Ele oferece ferramentas poderosas que permitem aos usu\u00e1rios criar, editar e publicar conte\u00fado na web sem a necessidade de conhecimentos avan\u00e7ados em programa\u00e7\u00e3o. Para funcionar, o Wordpress requer um banco de dados para armazenar informa\u00e7\u00f5es relacionadas ao conte\u00fado do site. Ele \u00e9 compat\u00edvel com v\u00e1rios bancos de dados, como MySQL, MariaDB, PostgreSQL, SQLite e outros. Neste contexto, estamos utilizando o MySQL como banco de dados, mas voc\u00ea tem a flexibilidade de escolher outro se preferir. Instale a aplica\u00e7\u00e3o charm para utilizarmos, vamos baixar o charm do Wordpress do reposit\u00f3rio charm-hub. Charm O charm \u00e9 como um pacote que cont\u00e9m instru\u00e7\u00f5es sobre como instalar e configurar um aplicativo, como o Grafana . Voc\u00ea simplesmente escolhe o charm do Grafana, define algumas configura\u00e7\u00f5es e o Juju cuida do restante, tornando o processo de implanta\u00e7\u00e3o mais f\u00e1cil e consistente em ambientes de nuvem. Entenda melhor sobre o que \u00e9 o charm lendo a sua documenta\u00e7\u00e3o charm-hub . $ sudo snap install charm --channel=2.x/stable --classic Baixe o charm do https://charmhub.io/wordpress usando o comando charm pull . $ charm pull wordpress Tamb\u00e9m vamos utilizar um charm previamente modificado do MYSQL ...Fa\u00e7a o clone do reposit\u00f3rio GIT. $ git clone https://github.com/TiagoDemay/charm-mysql.git Agora \u00e9 s\u00f3 fazer o Deploy com o auxilio do JUJU \u00b6 Fa\u00e7a o deploy do charm charm-mysql , para fazer deploy do charm local, use juju deploy ./pasta Modifique o charm wordpress \u00b6 Dentro do diret\u00f3rio criado, edite o arquivo metadata.yaml : modifique para utilizar apenas Ubuntu Bionic Fa\u00e7a o deploy do charm wordpress alterado localmente , utilize a documenta\u00e7\u00e3o encontrada no README do charm do wordpress que voc\u00eas baixaram, pare antes do capitulo Scaled Down Usage for Personal Use Acompanhe o andamento usando o comando juju status , ap\u00f3s terminado, acesse o Wordpress do seu computador, e verifique o funcionamento do sistema Exercise Apenas se escolheu fazer o deploy do Wordpress Checkpoint-3 De um print da tela do Dashboard do MAAS com as Maquinas e seus respectivos IPs. De um print do comando \"juju status\" depois que o Wordpress estiver \"active\". Entre no Dashboard da aplicacao Wordpress. Para isso acesse a rede interna do KIT, plugando o cabo diretamente no switch. Instale a aplicacao !!!! ANOTE A SENHA e coloque o seu e-mail. De um print da tela do Dashboard do Wordpress que foi implantado. Limpeza de ambiente \u00b6 Limpe o deploy do Juju usando o command: juju destroy-controller main Exercise QUESTOES-3 Juju \u00e9 uma aplica\u00e7\u00e3o distribu\u00edda? E o MaaS? O que \u00e9 REST? Quais outras alternativas? O que \u00e9 SOAP? Quais outras alternativas? O que \u00e9 e o que faz um Deployment Orchestrator ? Cite outras aplica\u00e7\u00f5es que n\u00e3o usamos nesse roteiro. Como \u00e9 o o processo de intera\u00e7\u00e3o entre um servidor API REST e uma client application? Defina Aplica\u00e7\u00e3o Distribu\u00edda, Alta Disponibilidade e Load Balancing ? Conclus\u00e3o: SOMENTE PARA PENSAR \u00b6 O Ansible utilizou indiretamente o MaaS como provedor de recursos f\u00edsicos. O MaaS por sua vez forneceu o que havia dispon\u00edvel no rack. Voc\u00ea acha que seria necess\u00e1ria uma m\u00e1quina de 32Gb para rodar um Webserver ou um Load Balancer ? Extrapole a resposta para um Datacenter real, onde as m\u00e1quinas possuem configura\u00e7\u00f5es muito superiores. Como resolver esse problema?","title":"Computa\u00e7\u00e3o em Nuvem"},{"location":"roteiros/2.Deployment/#deployment-orchestration","text":"Objetivos: Entender os conceitos b\u00e1sicos sobre uma plataforma de gerenciamento de aplica\u00e7\u00f5es distribu\u00eddas. Entender os conceitos b\u00e1sicos de comunica\u00e7\u00e3o entre aplica\u00e7\u00f5es e servi\u00e7os. Pr\u00e9-requisitos: Terminar o cap\u00edtulo anterior (Bare metal) Realizar a leitura sobre o Juju. [ https://jaas.ai/how-it-works ]. Realizar a leitura sobre redes de computadores. [Kavis - Cap. 6. Tanenbaum & Steen - Cap. 1 e Cap. 12] Info DIVIS\u00c3O DO ROTEIRO O Roteiro \u00e9 dividido em 3 partes principais. Entender a automac\u00e3o do Deploy - Utilizando ferramenta Ansible no Bare-metal Criando Infraestrutura para deploy com Juju (Deployment Orchestration) Utilizando a infraestrutura Bare Metal com o Juju - exemplo de deploy Wordpress","title":"Deployment Orchestration"},{"location":"roteiros/2.Deployment/#utilizando-o-ansible-deploy-automatizado-de-aplicacao","text":"Vamos realizar a instala\u00e7\u00e3o da mesma aplica\u00e7\u00e3o de forma autom\u00e1tica, por exemplo podemos efetuar a instala\u00e7\u00e3o em diversos servers . Vamos ent\u00e3o utilizar novos conceitos e ferramentas: Exemplo - gerenciador de deploy Ansible ( https://www.ansible.com/ ) Caracter\u00edsticas: Idempotente no sentido de conseguir repetir todos os procedimentos sem afetar os estados intermedi\u00e1rios da insta\u00e7\u00e3o. F\u00e1cil de se lidar com um pool de m\u00e1quinas simultaneamente. Consegue realizar o provisionamento autom\u00e1tico de VMs e Containers (mas n\u00e3o metal). Tarefas: Pe\u00e7a o deploy no server3 para o maas via cli Agora no SSH do main: $ sudo apt install ansible $ wget https://raw.githubusercontent.com/raulikeda/tasks/master/tasks-install-playbook.yaml $ ansible-playbook tasks-install-playbook.yaml --extra-vars server=[IP server3] Exercise Check-point1: Teste o acesso criando mais um tunel na string de conex\u00e3o, caso esteja tudo certo, fa\u00e7a a tarefa abaixo De um print da tela do Dashboard do MAAS com as 3 Maquinas e seus respectivos IPs. Mantendo o tunel aberto, rode o comando WGET para acesso a aplicacao Django no server 2 e cole a sa\u00edda do comando. Mantendo o tunel aberto, rode o comando WGET para acesso a aplicacao Django no server 3 e cole a sa\u00edda do comando. Agora temos 2 aplica\u00e7\u00f5es django (server2 e server3) compartilhando o mesmo banco de dados (server1). Os motivos para fazermos isso s\u00e3o dois: Alta disponibilidade: se um node cair o outro est\u00e1 no ar. Load Balancing: podemos dividir a carga de acesso entre os n\u00f3s. Contudo seria ideal que tiv\u00e9ssemos apenas um ponto de entrada, ao inv\u00e9s de escolher manualmente ou chavear os IPs dos n\u00f3s.","title":"Utilizando o Ansible - deploy automatizado de aplica\u00e7\u00e3o"},{"location":"roteiros/2.Deployment/#balancamento-de-carga-usando-proxy-reverso","text":"Para montar o ponto \u00fanico de entrada, utilizaremos uma aplica\u00e7\u00e3o de proxy reverso como load balancer. Voc\u00eas conseguem instalar o NGINX no n\u00f3 server4 como loadbalancer... Tutorial para fazer manual: https://www.digitalocean.com/community/tutorials/how-to-set-up-nginx-load-balancing Exercise Check-point2: Teste o acesso criando mais um tunel na string de conex\u00e3o, caso esteja tudo certo, fa\u00e7a a tarefa abaixo. De um print da tela do Dashboard do MAAS com as 4 Maquinas e seus respectivos IPs. Mantendo o tunel aberto, rode o comando WGET para acesso a aplicacao Django, porem agora o comando deve apontar para o load-balancer, cole a sa\u00edda do comando aqui. Exercise QUESTOES-1 Escreva aqui o seu roteiro de implanta\u00e7\u00e3o do NGINX. Explique o conceito por traz do Reverse Proxy. Voc\u00eas j\u00e1 fizeram algo parecido? Na instala\u00e7\u00e3o toda, voc\u00ea alocou 4 m\u00e1quinas f\u00edsicas, duas para o Django, uma para o Postgres e uma para o NGINX. Considerando que \u00e9 um Hardware pr\u00f3prio, ao contr\u00e1rio do modelo \"Public Cloud\", esse modelo de arquitetura \u00e9 bom ou ruim em termos de custos? Agora que voc\u00ea utilizou um gerenciador de deploy, vamos retormar a cria\u00e7\u00e3o de nuvem utilizando este novo conceito. Remova o deploy (release) de todos n\u00f3s no kit.","title":"Balancamento de carga usando Proxy Reverso"},{"location":"roteiros/2.Deployment/#criando-infraestrutura-para-deploy-com-juju","text":"Ansible \u00e9 um gerenciador de deploy que consegue lidar com a instala\u00e7\u00e3o e configura\u00e7\u00e3o de um conjunto de n\u00f3s pr\u00e9 reservados, mas n\u00e3o consegue realizar o provisionamento direto com o MaaS (gerenciador de Bare-metal). Para montar a nossa Cloud Privada, vamos utilizar outro orquestrador de deploy que integra com o MaaS. Antes de continuar, verifique se todas m\u00e1quinas (server1, server2, server3, server4 e server5) est\u00e3o Ready no MAAS. Fa\u00e7a o release das m\u00e1quinas Django e Postgres caso necess\u00e1rio. Acesse o main via SSH e instale o Juju $ sudo snap install juju --classic --channel=2.9/stable Verifique se o Juju enxerga o MaaS como um provedor de recursos $ juju clouds Caso n\u00e3o possua o MaaS como op\u00e7\u00e3o, deve adicion\u00e1-lo Criar um arquivo de configura\u00e7\u00e3o: maas-juju.yaml (aten\u00e7\u00e3o com a formata\u00e7\u00e3o) clouds: maas: type: maas auth-types: [oauth1] endpoint: http://192.168.0.3:5240/MAAS/ $ juju add-cloud maas maas-juju.yaml $ juju add-credential maas Obs: OAuth \u00e9 o API KEY gerado no MaaS (dentro do menu do usu\u00e1rio) Vamos criar agora o juju controller : $ juju bootstrap --bootstrap-series=jammy maas main --to server1 Para verificar o status do controller utilize: $ juju status Para acessar o Dashboard (via browser): $ juju gui Crie novamente um tunel SSH: $ ssh cloud@[IP Roteador] -L 8080:[IP do Juju GUI]:17070 Acesse do seu browser a url indicada no terminal, adaptando o endere\u00e7o IP. Ao contr\u00e1rio do Ansible, Juju necessita de uma m\u00e1quina exclusiva para controlar todo o deploy. Essa m\u00e1quina \u00e9 alocada automaticamente durante o bootstrap e controlar\u00e1 todo o deploy que faremos no pr\u00f3ximo roteiro. Ainda, assim como voc\u00ea usou o maas-cli na primeira implanta\u00e7\u00e3o, voc\u00ea usou o juju-cli para interagir com o servi\u00e7o. Exercise QUESTOES-2 Qual o S.O. utilizado na m\u00e1quina Juju? Quem o instalou? O Juju requisitou uma m\u00e1quina automaticamente para o MaaS via API. Por quais motivos ter uma API \u00e9 importante para uma aplica\u00e7\u00e3o?","title":"Criando Infraestrutura para deploy com Juju"},{"location":"roteiros/2.Deployment/#utilizando-a-infraestrutura-bare-metal-com-o-juju","text":"Vamos utilizar o Juju para deploy de uma das arquiteturas abaixo. As aplica\u00e7\u00f5es que vamos utilizar s\u00e3o: Grafana junto com o Prometheus Wordpress junto com o MySQL Fique a vontade para pesquisar sobre elas e escolher a que mais lhe agradar.","title":"Utilizando a infraestrutura Bare Metal com o Juju"},{"location":"roteiros/2.Deployment/#deploy-grafana-e-prometheus","text":"O Grafana \u00e9 uma plataforma de c\u00f3digo aberto que simplifica a apresenta\u00e7\u00e3o visual de dados, como gr\u00e1ficos e pain\u00e9is, facilitando a compreens\u00e3o em tempo real de sistemas e informa\u00e7\u00f5es. Para funcionar, o Grafana requer um banco de dados para armazenar configura\u00e7\u00f5es, metadados e informa\u00e7\u00f5es relacionadas \u00e0 exibi\u00e7\u00e3o de dados em seus pain\u00e9is e gr\u00e1ficos. Ele \u00e9 compat\u00edvel com v\u00e1rios bancos de dados, como Prometheus, MySQL, PostgreSQL, InfluxDB, SQLite3 e outros. Neste contexto, estamos utilizando o Prometheus como banco de dados, mas voc\u00ea tem a flexibilidade de escolher outro se preferir. Instale a aplica\u00e7\u00e3o charm para utilizarmos, vamos baixar o charm do Grafana do reposit\u00f3rio charm-hub. Charm O charm \u00e9 como um pacote que cont\u00e9m instru\u00e7\u00f5es sobre como instalar e configurar um aplicativo, como o Grafana . Voc\u00ea simplesmente escolhe o charm do Grafana, define algumas configura\u00e7\u00f5es e o Juju cuida do restante, tornando o processo de implanta\u00e7\u00e3o mais f\u00e1cil e consistente em ambientes de nuvem. Entenda melhor sobre o que \u00e9 o charm lendo a sua documenta\u00e7\u00e3o charm-hub . $ sudo snap install charm --channel=2.x/stable --classic Baixe o charm do https://charmhub.io/grafana usando o comando charm pull . $ charm pull grafana Tamb\u00e9m vamos utilizar o charm do Prometheus $ charm pull prometheus2","title":"Deploy Grafana e Prometheus"},{"location":"roteiros/2.Deployment/#agora-e-so-fazer-o-deploy-com-o-auxilio-do-juju","text":"Fa\u00e7a o deploy do charm prometheus2 , para fazer deploy do charm local, use juju deploy ./pasta","title":"Agora \u00e9 s\u00f3 fazer o Deploy com o auxilio do JUJU"},{"location":"roteiros/2.Deployment/#deploy-do-charm-grafana","text":"Ao realizar o Deploy do grafana, acompanhe o processo utilizando o comando juju status Caso ocorra um erro durante a instala\u00e7\u00e3o ( hook failed: install ): - Devemos acessar o log da aplica\u00e7\u00e3o via o comando juju debug-log --replay --include grafana/2 * Nos logs voce encontrar\u00e1 mais informa\u00e7\u00f5es da causa do erro NO_PUBKEY * Ele ocorre, pois a chave GPG do reposit\u00f3rio do grafana n\u00e3o est\u00e1 no seu servidor, quando o juju tenta fazer apt-get update o sistema n\u00e3o consegue verificar a autenticidade do reposit\u00f3rio. * Para consertar devemos acessar o servidor do grafana e instalar a chave manualmente: * juju ssh grafana/2 * wget -q -O - https://packages.grafana.com/gpg.key | sudo apt-key add - * sudo apt-get update Ao rodar os comandos acima, a chave ser\u00e1 instalada no sistema. Aguarde alguns instantes e o processo de instala\u00e7\u00e3o do grafana seguir\u00e1 normalmente. Acompanhe o andamento usando o comando juju status .","title":"Deploy do charm grafana"},{"location":"roteiros/2.Deployment/#integrando-grafana-com-prometheus","text":"Utilize a documenta\u00e7\u00e3o encontrada no README do charm do grafana. Acesse o dashboard do Grafana do seu computador e verifique o funcionamento do sistema. Verifique se a integra\u00e7\u00e3o foi feita corretamente. Para isso crie um dashboard dentro do grafana e adicione uma visualiza\u00e7\u00e3o (deve aparecer o prometheus como source). Exercise Apenas se escolheu fazer o deploy do grafana Checkpoint-3 De um print da tela do Dashboard do MAAS com as Maquinas e seus respectivos IPs. De um print de tela do comando \"juju status\" depois que o Grafana estiver \"active\". De um print da tela do Dashboard do Grafana com o Prometheus aparecendo como source.","title":"Integrando Grafana com Prometheus"},{"location":"roteiros/2.Deployment/#deploy-wordpress-e-mysql","text":"O Wordpress \u00e9 uma plataforma de gerenciamento de conte\u00fado (CMS) de c\u00f3digo aberto, baseada em PHP e MySQL. Ele \u00e9 usado por mais de 60 milh\u00f5es de sites, incluindo 33,6% dos 10 milh\u00f5es de sites mais bem classificados. Ele oferece ferramentas poderosas que permitem aos usu\u00e1rios criar, editar e publicar conte\u00fado na web sem a necessidade de conhecimentos avan\u00e7ados em programa\u00e7\u00e3o. Para funcionar, o Wordpress requer um banco de dados para armazenar informa\u00e7\u00f5es relacionadas ao conte\u00fado do site. Ele \u00e9 compat\u00edvel com v\u00e1rios bancos de dados, como MySQL, MariaDB, PostgreSQL, SQLite e outros. Neste contexto, estamos utilizando o MySQL como banco de dados, mas voc\u00ea tem a flexibilidade de escolher outro se preferir. Instale a aplica\u00e7\u00e3o charm para utilizarmos, vamos baixar o charm do Wordpress do reposit\u00f3rio charm-hub. Charm O charm \u00e9 como um pacote que cont\u00e9m instru\u00e7\u00f5es sobre como instalar e configurar um aplicativo, como o Grafana . Voc\u00ea simplesmente escolhe o charm do Grafana, define algumas configura\u00e7\u00f5es e o Juju cuida do restante, tornando o processo de implanta\u00e7\u00e3o mais f\u00e1cil e consistente em ambientes de nuvem. Entenda melhor sobre o que \u00e9 o charm lendo a sua documenta\u00e7\u00e3o charm-hub . $ sudo snap install charm --channel=2.x/stable --classic Baixe o charm do https://charmhub.io/wordpress usando o comando charm pull . $ charm pull wordpress Tamb\u00e9m vamos utilizar um charm previamente modificado do MYSQL ...Fa\u00e7a o clone do reposit\u00f3rio GIT. $ git clone https://github.com/TiagoDemay/charm-mysql.git","title":"Deploy Wordpress e MySQL"},{"location":"roteiros/2.Deployment/#agora-e-so-fazer-o-deploy-com-o-auxilio-do-juju_1","text":"Fa\u00e7a o deploy do charm charm-mysql , para fazer deploy do charm local, use juju deploy ./pasta","title":"Agora \u00e9 s\u00f3 fazer o Deploy com o auxilio do JUJU"},{"location":"roteiros/2.Deployment/#modifique-o-charm-wordpress","text":"Dentro do diret\u00f3rio criado, edite o arquivo metadata.yaml : modifique para utilizar apenas Ubuntu Bionic Fa\u00e7a o deploy do charm wordpress alterado localmente , utilize a documenta\u00e7\u00e3o encontrada no README do charm do wordpress que voc\u00eas baixaram, pare antes do capitulo Scaled Down Usage for Personal Use Acompanhe o andamento usando o comando juju status , ap\u00f3s terminado, acesse o Wordpress do seu computador, e verifique o funcionamento do sistema Exercise Apenas se escolheu fazer o deploy do Wordpress Checkpoint-3 De um print da tela do Dashboard do MAAS com as Maquinas e seus respectivos IPs. De um print do comando \"juju status\" depois que o Wordpress estiver \"active\". Entre no Dashboard da aplicacao Wordpress. Para isso acesse a rede interna do KIT, plugando o cabo diretamente no switch. Instale a aplicacao !!!! ANOTE A SENHA e coloque o seu e-mail. De um print da tela do Dashboard do Wordpress que foi implantado.","title":"Modifique o charm wordpress"},{"location":"roteiros/2.Deployment/#limpeza-de-ambiente","text":"Limpe o deploy do Juju usando o command: juju destroy-controller main Exercise QUESTOES-3 Juju \u00e9 uma aplica\u00e7\u00e3o distribu\u00edda? E o MaaS? O que \u00e9 REST? Quais outras alternativas? O que \u00e9 SOAP? Quais outras alternativas? O que \u00e9 e o que faz um Deployment Orchestrator ? Cite outras aplica\u00e7\u00f5es que n\u00e3o usamos nesse roteiro. Como \u00e9 o o processo de intera\u00e7\u00e3o entre um servidor API REST e uma client application? Defina Aplica\u00e7\u00e3o Distribu\u00edda, Alta Disponibilidade e Load Balancing ?","title":"Limpeza de ambiente"},{"location":"roteiros/2.Deployment/#conclusao-somente-para-pensar","text":"O Ansible utilizou indiretamente o MaaS como provedor de recursos f\u00edsicos. O MaaS por sua vez forneceu o que havia dispon\u00edvel no rack. Voc\u00ea acha que seria necess\u00e1ria uma m\u00e1quina de 32Gb para rodar um Webserver ou um Load Balancer ? Extrapole a resposta para um Datacenter real, onde as m\u00e1quinas possuem configura\u00e7\u00f5es muito superiores. Como resolver esse problema?","title":"Conclus\u00e3o: SOMENTE PARA PENSAR"},{"location":"roteiros/3.Private_Cloud_Stack/","text":"Private cloud \u00b6 Objetivos Entender os conceitos b\u00e1sicos de Private Cloud. Aprofundar conceitos sobre redes virtuais SDN. Pr\u00e9-requisitos: Terminar o cap\u00edtulo anterior (Juju) Realizar a leitura sobre o Openstack. [ https://www.openstack.org/ ]. Realizar a leitura sobre o Openstack. [Jackson et al - Cap. 1 at\u00e9 Cap. 5] Info DIVIS\u00c3O DO ROTEIRO O Roteiro \u00e9 dividido em 2 partes principais. Criando a Infraestrutura (Nuvem VM) - Servidor Virtual Privado (VPS) Uso da Infraestrutura: Django na Nuvem VM criada Criando a Infraestrutura (Nuvem VM) - Servidor Virtual Privado (VPS) \u00b6 Nesse roteiro vamos instalar um conjunto de aplica\u00e7\u00f5es denominado Openstack que vai permitir distribuirmos virtual machines usando os n\u00f3s dispon\u00edveis no kit. At\u00e9 o momento usamos o mass para orquestrar o bare metal e o juju para cuidar do deployment de aplicacoes (exemplo Wordpress). E agora vamos utilizar o Openstack para criar VMs e distribuir os servi\u00e7os em todas as m\u00e1quinas kit com maior eficiencia. Instalando - Openstack Canonical Distro \u00b6 Fa\u00e7a o download do charm Openstack Base no maas: $ charm pull cs:openstack-base Dentro do diret\u00f3rio criado, edite o arquivo bundle.yaml : identifique quantas m\u00e1quinas ser\u00e3o alocadas. verifique cada um dos servi\u00e7os que ser\u00e3o instalados e em quais m\u00e1quinas. sete o nome do adaptador de rede, br-ex:eth1 na vari\u00e1vel data-port . Cuidado para n\u00e3o errar (seguir https://charmhub.io/openstack-base ) variables: openstack-origin: &openstack-origin cloud:focal-yoga data-port: &data-port br-ex:eth1 worker-multiplier: &worker-multiplier 0.25 osd-devices: &osd-devices /dev/sdb /dev/vdb expected-osd-count: &expected-osd-count 3 expected-mon-count: &expected-mon-count 3 Reservar (Allocate) a m\u00e1quina \"server2\" no maas. Instale o bundle customizado: $ juju deploy ./bundle.yaml Hora da leitura na documentacao pedida no comeco do roteiro Warning Provavelmente ocorreu um erro no deploy . ??? Conceito importante: Ao contr\u00e1rio do Ansible, Juju necessita de uma m\u00e1quina exclusiva para controlar todo o deploy. Essa m\u00e1quina \u00e9 alocada automaticamente durante o bootstrap e controlar\u00e1 todo o deploy. Logo voc\u00ea precisa fazer o bootstrap de um novo controlador no server1. Voc\u00eas j\u00e1 sabem o que fazer agora: utilizar o comando abaixo para ficar de olho no status do Juju: $ watch -n 2 -c \"juju status --color\" Enquanto aguarda a insta\u00e7\u00e3o at\u00e9 a indica\u00e7\u00e3o 'certificates' awaiting server certificate data e at\u00e9 que o servi\u00e7o Vault esteja bloqueado. Responda abaixo: Exercise QUESTOES-1 Conforme visto no arquivo de instala\u00e7\u00e3o, os servi\u00e7os s\u00e3o instalados usando LXD nos nodes. O que \u00e9 LXD? O que \u00e9 o bundle.yaml? Vault \u00e9 um servidor de secrets . Como ele funciona e para o que ele \u00e9 usado? Abrindo o cofre \u00b6 Para dar prosseguimento, precisamos instalar um certificado v\u00e1lido dentro do Vault, para isso precisamos fazer uma opera\u00e7\u00e3o de unseal : Instalando o cli do Vault e configurando-o: $ sudo snap install vault $ export VAULT_ADDR=\"http://<IP of vault unit>:8200\" Gerando : $ vault operator init -key-shares=5 -key-threshold=3 Voc\u00eas receber\u00e3o 5 Unseal Keys e 1 Initial Root Token . Copie e reserve. Removendo o selo, repita a opera\u00e7\u00e3o com 3 keys diferentes: $ vault operator unseal <Unseal Key> Autorizando o charm (esse passo precisa ser feito em 10 minutos): $ export VAULT_TOKEN=<Initial Root Token> $ vault token create -ttl=10m anote o token gerado pelo comando e use abaixo. $ juju run-action --wait vault/leader authorize-charm token=<token> Finalmente, gerando o certificado: $ juju run-action --wait vault/leader generate-root-ca Espere at\u00e9 TODOS os servicos ficarem com o Status \"active\". Configurando o Openstack \u00b6 Chegou a hora de configurar o servi\u00e7o que controla as VMs (Nova), os volumes de disco (Cinder) e a estrutura de rede virtual (Neutron). O primeiro passo \u00e9 carregar as vari\u00e1veis de ambiente e autenticar (Keystone) no sistema. Ainda, montaremos o nosso servidor de imagens (Glance), que utiliza o Object Storage (Ceph) para armazenamento. O sistema ainda conta com um dashboard (Horizon), um cluster de banco de dados (Mysql Inno Cluster) e um servidor de filas (RabbitMQ) como apoio. Usando como base a p\u00e1gina do charm instalado ( https://jaas.ai/openstack-base/ ), LEIA O DOCUMENTO INTEIRO ANTES DE INICIAR OS COMANDOS. \u00b6 Acesse o Horizon ( dashboard ) como administrador, e mantenha ele aberto durante todo o setup do openstack (para ver as mudan\u00e7as acontecendo!) \u00b6 Dica O Domain name \u00e9 : admin_domain Exercise CheckPoint-1 De um print das Telas abaixo: Do Dashboard do MAAS com as m\u00e1quinas. Da aba compute overview no OpenStack . Da aba compute instances no OpenStack . Da aba network topology no OpenStack . Pense na estrutura de rede do seu KIT (Altere os Ips dos exemplos de comandos caso necess\u00e1rio) \u00b6 Prestem muita aten\u00e7\u00e3o nos passos! N\u00e3o copie e cole comandos sem verificar os argumentos. Come\u00e7e a partir da se\u00e7\u00e3o Install the OpenStack clients Instale o client do Openstack no maas via snap. Carregue as credenciais em openrc e verifique os servi\u00e7os: $ openstack service list Fa\u00e7a pequenos ajustes na rede: $ juju config neutron-api enable-ml2-dns=\"true\" $ juju config neutron-api-plugin-ovn dns-servers=\"X.X.0.1\" Importe a imagem do Ubuntu Jammy. Voc\u00ea precisar\u00e1 procurar esta imagem. Configure a rede externa. Usar uma faixa de aloca\u00e7\u00e3o entre X.X.7.0 e X.X.8.255. A partir de agora voc\u00ea criara uma rede interna na sua n\u00favem privada, use os valores dados abaixo. \u00b6 Crie a rede interna e o roteador. Usar a subnet 192.169.0.0/24. N\u00e3o use DNS. Analise o comando: $ openstack flavor create --help Crie os flavors (instance type) - SEM ephemeral disk : m1.tiny: 1 vcpu/1Gb RAM/20Gb disk m1.small: 1 vcpus/2Gb RAM/20Gb disk m1.medium: 2 vcpus/4Gb RAM/20Gb disk m1.large: 4 vcpus/8Gb RAM/20Gb disk Importe (upload) um key-pair, usando public key (id_rsa.pub) do pr\u00f3prio MaaS. Acesse o Horizon ( dashboard ) como administrador: Adicione a libera\u00e7\u00e3o do SSH e ALL ICMP no security group default . Verifique se a topologia de rede faz sentido. Ela deve ser semelhante ao projeto da sua rede f\u00edsica, por\u00e9m com mais um n\u00edvel dentro. Essa rede n\u00e3o existe fisicamente, \u00e9 tudo virtual. Dispare uma inst\u00e2ncia m1.tiny com o nome client e sem Novo Volume . Aloque um floating IP para a inst\u00e2ncia. Teste a conex\u00e3o SSH! Em caso de erro, volte e verifique se as etapas anteriores est\u00e3o corretas. Exercise CheckPoint-2 De um print das Telas abaixo: Do Dashboard do MAAS com as m\u00e1quinas. Da aba compute overview no OpenStack . Da aba compute instances no OpenStack . Da aba network topology no OpenStack . Enumere as diferencas encontradas entre os prints das telas no Checkpoint1 e o Checkpoint-2. Explique como cada recurso foi criado. Escalando os n\u00f3s \u00b6 Vamos adicionar o openstack no cluster como n\u00f3 de computing e block storage . Verfique no Dashboard do MaaS se ainda h\u00e1 uma m\u00e1quina dispon\u00edvel (m\u00e1quina que reservamos/allocated). Fa\u00e7a o release da m\u00e1quina que est\u00e1 ALLOCATED (cuidado para n\u00e3o errar!) Instale o hypervisor, realizando o deploy na m\u00e1quina: $ juju add-unit nova-compute Anote o n\u00famero da m\u00e1quina adicionada no status e instale o block storage: $ juju add-unit --to <machine-id> ceph-osd Exercise QUESTOES-2 Fa\u00e7a um desenho de como \u00e9 a sua arquitetura de rede, desde a sua conex\u00e3o com o Insper at\u00e9 a inst\u00e2ncia alocada. O que \u00e9 um Hypervisor? Qual o hypervisor do Openstack, da AWS e da Azure? Uso da Infraestrutura: Django na Nuvem VM criada \u00b6 Agora conseguimos corrigir o erro apontado na conclus\u00e3o do H2, levantando a mesma aplica\u00e7\u00e3o django mas sem precisar sacrificar 4 m\u00e1quinas inteiras. Tarefa : Levantar a aplica\u00e7\u00e3o django do Roteiro1 at\u00e9 o Roteiro2 (com Nginx) em cima das maquinas virtuais do Openstack. TOPOLOGIA: Exercise Escreva um relat\u00f3rio dos passos utilizados. Anexe fotos e/ou diagramas contendo: arquitetura de rede do Django dentro do Openstack* ( Dica: use o dashboard do Openstack ), lista de VMs utilizadas com nome e IPs alocados, foto do Dashboard Django conectado na m\u00e1quina Nginx/LB. Exercise QUESTOES-3 Dado que voc\u00eas trabalharam com Nuvem P\u00fablica e com Nuvem Privada, descreva com detalhes como voc\u00ea montaria uma Nuvem H\u00edbrida. Como seria a troca de dados? \u00c9 poss\u00edvel somar todo o hardware dispon\u00edvel e disparar uma inst\u00e2ncia gigante (ex: mais mem\u00f3ria do que dispon\u00edvel na melhor m\u00e1quina)? Discorra sobre as possibilidades. Cite e explique pelo menos 2 circunst\u00e2ncias em que a Private Cloud \u00e9 mais vantajosa que a Public Cloud . Openstack \u00e9 um Sistema Operacional? Descreva seu prop\u00f3sito e cite as principais distribui\u00e7\u00f5es? Quais s\u00e3o os principais componentes dentro do Openstack? Descreva brevemente suas funcionalidades.","title":"Computa\u00e7\u00e3o em Nuvem"},{"location":"roteiros/3.Private_Cloud_Stack/#private-cloud","text":"Objetivos Entender os conceitos b\u00e1sicos de Private Cloud. Aprofundar conceitos sobre redes virtuais SDN. Pr\u00e9-requisitos: Terminar o cap\u00edtulo anterior (Juju) Realizar a leitura sobre o Openstack. [ https://www.openstack.org/ ]. Realizar a leitura sobre o Openstack. [Jackson et al - Cap. 1 at\u00e9 Cap. 5] Info DIVIS\u00c3O DO ROTEIRO O Roteiro \u00e9 dividido em 2 partes principais. Criando a Infraestrutura (Nuvem VM) - Servidor Virtual Privado (VPS) Uso da Infraestrutura: Django na Nuvem VM criada","title":"Private cloud"},{"location":"roteiros/3.Private_Cloud_Stack/#criando-a-infraestrutura-nuvem-vm-servidor-virtual-privado-vps","text":"Nesse roteiro vamos instalar um conjunto de aplica\u00e7\u00f5es denominado Openstack que vai permitir distribuirmos virtual machines usando os n\u00f3s dispon\u00edveis no kit. At\u00e9 o momento usamos o mass para orquestrar o bare metal e o juju para cuidar do deployment de aplicacoes (exemplo Wordpress). E agora vamos utilizar o Openstack para criar VMs e distribuir os servi\u00e7os em todas as m\u00e1quinas kit com maior eficiencia.","title":"Criando a Infraestrutura (Nuvem VM) - Servidor Virtual Privado (VPS)"},{"location":"roteiros/3.Private_Cloud_Stack/#instalando-openstack-canonical-distro","text":"Fa\u00e7a o download do charm Openstack Base no maas: $ charm pull cs:openstack-base Dentro do diret\u00f3rio criado, edite o arquivo bundle.yaml : identifique quantas m\u00e1quinas ser\u00e3o alocadas. verifique cada um dos servi\u00e7os que ser\u00e3o instalados e em quais m\u00e1quinas. sete o nome do adaptador de rede, br-ex:eth1 na vari\u00e1vel data-port . Cuidado para n\u00e3o errar (seguir https://charmhub.io/openstack-base ) variables: openstack-origin: &openstack-origin cloud:focal-yoga data-port: &data-port br-ex:eth1 worker-multiplier: &worker-multiplier 0.25 osd-devices: &osd-devices /dev/sdb /dev/vdb expected-osd-count: &expected-osd-count 3 expected-mon-count: &expected-mon-count 3 Reservar (Allocate) a m\u00e1quina \"server2\" no maas. Instale o bundle customizado: $ juju deploy ./bundle.yaml Hora da leitura na documentacao pedida no comeco do roteiro Warning Provavelmente ocorreu um erro no deploy . ??? Conceito importante: Ao contr\u00e1rio do Ansible, Juju necessita de uma m\u00e1quina exclusiva para controlar todo o deploy. Essa m\u00e1quina \u00e9 alocada automaticamente durante o bootstrap e controlar\u00e1 todo o deploy. Logo voc\u00ea precisa fazer o bootstrap de um novo controlador no server1. Voc\u00eas j\u00e1 sabem o que fazer agora: utilizar o comando abaixo para ficar de olho no status do Juju: $ watch -n 2 -c \"juju status --color\" Enquanto aguarda a insta\u00e7\u00e3o at\u00e9 a indica\u00e7\u00e3o 'certificates' awaiting server certificate data e at\u00e9 que o servi\u00e7o Vault esteja bloqueado. Responda abaixo: Exercise QUESTOES-1 Conforme visto no arquivo de instala\u00e7\u00e3o, os servi\u00e7os s\u00e3o instalados usando LXD nos nodes. O que \u00e9 LXD? O que \u00e9 o bundle.yaml? Vault \u00e9 um servidor de secrets . Como ele funciona e para o que ele \u00e9 usado?","title":"Instalando - Openstack Canonical Distro"},{"location":"roteiros/3.Private_Cloud_Stack/#abrindo-o-cofre","text":"Para dar prosseguimento, precisamos instalar um certificado v\u00e1lido dentro do Vault, para isso precisamos fazer uma opera\u00e7\u00e3o de unseal : Instalando o cli do Vault e configurando-o: $ sudo snap install vault $ export VAULT_ADDR=\"http://<IP of vault unit>:8200\" Gerando : $ vault operator init -key-shares=5 -key-threshold=3 Voc\u00eas receber\u00e3o 5 Unseal Keys e 1 Initial Root Token . Copie e reserve. Removendo o selo, repita a opera\u00e7\u00e3o com 3 keys diferentes: $ vault operator unseal <Unseal Key> Autorizando o charm (esse passo precisa ser feito em 10 minutos): $ export VAULT_TOKEN=<Initial Root Token> $ vault token create -ttl=10m anote o token gerado pelo comando e use abaixo. $ juju run-action --wait vault/leader authorize-charm token=<token> Finalmente, gerando o certificado: $ juju run-action --wait vault/leader generate-root-ca Espere at\u00e9 TODOS os servicos ficarem com o Status \"active\".","title":"Abrindo o cofre"},{"location":"roteiros/3.Private_Cloud_Stack/#configurando-o-openstack","text":"Chegou a hora de configurar o servi\u00e7o que controla as VMs (Nova), os volumes de disco (Cinder) e a estrutura de rede virtual (Neutron). O primeiro passo \u00e9 carregar as vari\u00e1veis de ambiente e autenticar (Keystone) no sistema. Ainda, montaremos o nosso servidor de imagens (Glance), que utiliza o Object Storage (Ceph) para armazenamento. O sistema ainda conta com um dashboard (Horizon), um cluster de banco de dados (Mysql Inno Cluster) e um servidor de filas (RabbitMQ) como apoio.","title":"Configurando o Openstack"},{"location":"roteiros/3.Private_Cloud_Stack/#usando-como-base-a-pagina-do-charm-instalado-httpsjaasaiopenstack-base-leia-o-documento-inteiro-antes-de-iniciar-os-comandos","text":"","title":"Usando como base a p\u00e1gina do charm instalado (https://jaas.ai/openstack-base/), LEIA O DOCUMENTO INTEIRO ANTES DE INICIAR OS COMANDOS."},{"location":"roteiros/3.Private_Cloud_Stack/#acesse-o-horizon-dashboard-como-administrador-e-mantenha-ele-aberto-durante-todo-o-setup-do-openstack-para-ver-as-mudancas-acontecendo","text":"Dica O Domain name \u00e9 : admin_domain Exercise CheckPoint-1 De um print das Telas abaixo: Do Dashboard do MAAS com as m\u00e1quinas. Da aba compute overview no OpenStack . Da aba compute instances no OpenStack . Da aba network topology no OpenStack .","title":"Acesse o Horizon (dashboard) como administrador, e mantenha ele aberto durante todo o setup do openstack (para ver as mudan\u00e7as acontecendo!)"},{"location":"roteiros/3.Private_Cloud_Stack/#pense-na-estrutura-de-rede-do-seu-kit-altere-os-ips-dos-exemplos-de-comandos-caso-necessario","text":"Prestem muita aten\u00e7\u00e3o nos passos! N\u00e3o copie e cole comandos sem verificar os argumentos. Come\u00e7e a partir da se\u00e7\u00e3o Install the OpenStack clients Instale o client do Openstack no maas via snap. Carregue as credenciais em openrc e verifique os servi\u00e7os: $ openstack service list Fa\u00e7a pequenos ajustes na rede: $ juju config neutron-api enable-ml2-dns=\"true\" $ juju config neutron-api-plugin-ovn dns-servers=\"X.X.0.1\" Importe a imagem do Ubuntu Jammy. Voc\u00ea precisar\u00e1 procurar esta imagem. Configure a rede externa. Usar uma faixa de aloca\u00e7\u00e3o entre X.X.7.0 e X.X.8.255.","title":"Pense na estrutura de rede do seu KIT (Altere os Ips dos exemplos de comandos caso necess\u00e1rio)"},{"location":"roteiros/3.Private_Cloud_Stack/#a-partir-de-agora-voce-criara-uma-rede-interna-na-sua-nuvem-privada-use-os-valores-dados-abaixo","text":"Crie a rede interna e o roteador. Usar a subnet 192.169.0.0/24. N\u00e3o use DNS. Analise o comando: $ openstack flavor create --help Crie os flavors (instance type) - SEM ephemeral disk : m1.tiny: 1 vcpu/1Gb RAM/20Gb disk m1.small: 1 vcpus/2Gb RAM/20Gb disk m1.medium: 2 vcpus/4Gb RAM/20Gb disk m1.large: 4 vcpus/8Gb RAM/20Gb disk Importe (upload) um key-pair, usando public key (id_rsa.pub) do pr\u00f3prio MaaS. Acesse o Horizon ( dashboard ) como administrador: Adicione a libera\u00e7\u00e3o do SSH e ALL ICMP no security group default . Verifique se a topologia de rede faz sentido. Ela deve ser semelhante ao projeto da sua rede f\u00edsica, por\u00e9m com mais um n\u00edvel dentro. Essa rede n\u00e3o existe fisicamente, \u00e9 tudo virtual. Dispare uma inst\u00e2ncia m1.tiny com o nome client e sem Novo Volume . Aloque um floating IP para a inst\u00e2ncia. Teste a conex\u00e3o SSH! Em caso de erro, volte e verifique se as etapas anteriores est\u00e3o corretas. Exercise CheckPoint-2 De um print das Telas abaixo: Do Dashboard do MAAS com as m\u00e1quinas. Da aba compute overview no OpenStack . Da aba compute instances no OpenStack . Da aba network topology no OpenStack . Enumere as diferencas encontradas entre os prints das telas no Checkpoint1 e o Checkpoint-2. Explique como cada recurso foi criado.","title":"A partir de agora voc\u00ea criara uma rede interna na sua n\u00favem privada, use os valores dados abaixo."},{"location":"roteiros/3.Private_Cloud_Stack/#escalando-os-nos","text":"Vamos adicionar o openstack no cluster como n\u00f3 de computing e block storage . Verfique no Dashboard do MaaS se ainda h\u00e1 uma m\u00e1quina dispon\u00edvel (m\u00e1quina que reservamos/allocated). Fa\u00e7a o release da m\u00e1quina que est\u00e1 ALLOCATED (cuidado para n\u00e3o errar!) Instale o hypervisor, realizando o deploy na m\u00e1quina: $ juju add-unit nova-compute Anote o n\u00famero da m\u00e1quina adicionada no status e instale o block storage: $ juju add-unit --to <machine-id> ceph-osd Exercise QUESTOES-2 Fa\u00e7a um desenho de como \u00e9 a sua arquitetura de rede, desde a sua conex\u00e3o com o Insper at\u00e9 a inst\u00e2ncia alocada. O que \u00e9 um Hypervisor? Qual o hypervisor do Openstack, da AWS e da Azure?","title":"Escalando os n\u00f3s"},{"location":"roteiros/3.Private_Cloud_Stack/#uso-da-infraestrutura-django-na-nuvem-vm-criada","text":"Agora conseguimos corrigir o erro apontado na conclus\u00e3o do H2, levantando a mesma aplica\u00e7\u00e3o django mas sem precisar sacrificar 4 m\u00e1quinas inteiras. Tarefa : Levantar a aplica\u00e7\u00e3o django do Roteiro1 at\u00e9 o Roteiro2 (com Nginx) em cima das maquinas virtuais do Openstack. TOPOLOGIA: Exercise Escreva um relat\u00f3rio dos passos utilizados. Anexe fotos e/ou diagramas contendo: arquitetura de rede do Django dentro do Openstack* ( Dica: use o dashboard do Openstack ), lista de VMs utilizadas com nome e IPs alocados, foto do Dashboard Django conectado na m\u00e1quina Nginx/LB. Exercise QUESTOES-3 Dado que voc\u00eas trabalharam com Nuvem P\u00fablica e com Nuvem Privada, descreva com detalhes como voc\u00ea montaria uma Nuvem H\u00edbrida. Como seria a troca de dados? \u00c9 poss\u00edvel somar todo o hardware dispon\u00edvel e disparar uma inst\u00e2ncia gigante (ex: mais mem\u00f3ria do que dispon\u00edvel na melhor m\u00e1quina)? Discorra sobre as possibilidades. Cite e explique pelo menos 2 circunst\u00e2ncias em que a Private Cloud \u00e9 mais vantajosa que a Public Cloud . Openstack \u00e9 um Sistema Operacional? Descreva seu prop\u00f3sito e cite as principais distribui\u00e7\u00f5es? Quais s\u00e3o os principais componentes dentro do Openstack? Descreva brevemente suas funcionalidades.","title":"Uso da Infraestrutura: Django na Nuvem VM criada"},{"location":"roteiros/4.IaC/","text":"SLA, DR e IaC \u00b6 Objetivos Entender os conceitos b\u00e1sicos Infraestrutura como c\u00f3digo. Entender os conceitos b\u00e1sicos sobre SLA e DR. Pr\u00e9-requisitos: Terminar o cap\u00edtulo anterior (Openstack) Realizar a leitura [Kavis - Cap 11 e Cap 13] Info DIVIS\u00c3O DO ROTEIRO O Roteiro \u00e9 dividido em 3 partes principais. Entendendo IaC - Vis\u00e3o Geral Criando a Infraestrutura utilizando IaC Criando um plano de Disaster Recovery e SLA (QUESTOES) IaC Vis\u00e3o geral \u00b6 Infraestrutura como c\u00f3digo (IaC) \u00e9 o gerenciamento e provisionamento de infraestrutura por meio de c\u00f3digo, em vez de processos manuais. Utilizando o IaC, \u00e9 poss\u00edvel criar arquivos de configura\u00e7\u00e3o que contenham especifica\u00e7\u00f5es de infraestrutura, o que facilita a edi\u00e7\u00e3o e distribui\u00e7\u00e3o das configura\u00e7\u00f5es. Tamb\u00e9m garante que voc\u00ea sempre forne\u00e7a o mesmo ambiente. Ao codificar e documentar suas especifica\u00e7\u00f5es de configura\u00e7\u00e3o, o IaC auxilia no gerenciamento de configura\u00e7\u00e3o e ajuda a evitar altera\u00e7\u00f5es de configura\u00e7\u00e3o n\u00e3o documentadas. O IaC evoluiu para lidar com a deriva ambiental em dutos de libera\u00e7\u00e3o. Sem o IaC, as equipes teriam que manter as configura\u00e7\u00f5es do ambiente de implanta\u00e7\u00e3o separadamente. Com o tempo, cada ambiente se torna um \"floco de neve\", uma configura\u00e7\u00e3o \u00fanica que n\u00e3o pode ser replicada automaticamente. Inconsist\u00eancias entre ambientes podem causar problemas de implanta\u00e7\u00e3o. O gerenciamento e a manuten\u00e7\u00e3o da infraestrutura envolvem processos manuais que s\u00e3o propensos a erros e dif\u00edceis de rastrear. Refor\u00e7ando \u00b6 O IaC evita a configura\u00e7\u00e3o manual e garante consist\u00eancia ao expressar o estado desejado do ambiente por meio de c\u00f3digo bem documentado em formatos como por exemplo o JSON. A implanta\u00e7\u00e3o de infraestrutura com IaC \u00e9 repet\u00edvel e evita problemas de tempo de execu\u00e7\u00e3o causados \u200b\u200bpor configura\u00e7\u00f5es quebradas ou depend\u00eancias ausentes. Para fazer altera\u00e7\u00f5es, voc\u00ea precisa editar a origem, n\u00e3o o destino . A idempot\u00eancia (a capacidade de uma determinada opera\u00e7\u00e3o produzir sempre o mesmo resultado) \u00e9 um princ\u00edpio fundamental da IaC. O comando deploy sempre define o ambiente de destino com a mesma configura\u00e7\u00e3o, independentemente do estado inicial do ambiente. A idempot\u00eancia \u00e9 alcan\u00e7ada configurando automaticamente os destinos existentes ou excluindo os destinos existentes e recriando novos ambientes. O que \u00e9 Terraform em Infraestrutura como C\u00f3digo? \u00b6 \u00c9 uma das possiveis ferramentas para IaC. O mercado de Infraestrutura como C\u00f3digo amadureceu ao longo dos anos. H\u00e1 uma grande variedade de ferramentas, oferecendo diferentes recursos. Terraform \u00e9 a infraestrutura da HashiCorp como ferramenta de c\u00f3digo. Ele permite que voc\u00ea defina recursos e infraestrutura em arquivos de configura\u00e7\u00e3o declarativos leg\u00edveis por humanos e gerencie o ciclo de vida de sua infraestrutura. O uso do Terraform tem v\u00e1rias vantagens em rela\u00e7\u00e3o ao gerenciamento manual de sua infraestrutura: O Terraform pode gerenciar a infraestrutura em v\u00e1rias plataformas de nuvem. A linguagem de configura\u00e7\u00e3o leg\u00edvel por humanos ajuda voc\u00ea a escrever c\u00f3digo de infraestrutura rapidamente. O estado do Terraform permite rastrear altera\u00e7\u00f5es de recursos em todas as suas implanta\u00e7\u00f5es. Voc\u00ea pode confirmar suas configura\u00e7\u00f5es no controle de vers\u00e3o para colaborar com seguran\u00e7a na infraestrutura. Para implantar infraestrutura com o Terraform: * Scope - Identifique a infraestrutura para o seu projeto. * Author - Escreva a configura\u00e7\u00e3o para sua infraestrutura. * Initialize - Instale os plugins que o Terraform precisa para gerenciar a infraestrutura. * Plan - Visualize as altera\u00e7\u00f5es que o Terraform far\u00e1 para corresponder \u00e0 sua configura\u00e7\u00e3o. * Apply - Fa\u00e7a as altera\u00e7\u00f5es planejadas. Instalar Terraform \u00b6 Ubuntu/Debian CentOS/RHEL Windows/FreeBSD/OpenBSD/Solaris macOS wget -O- https://apt.releases.hashicorp.com/gpg | gpg --dearmor | sudo tee /usr/share/keyrings/hashicorp-archive-keyring.gpg gpg --no-default-keyring --keyring /usr/share/keyrings/hashicorp-archive-keyring.gpg --fingerprint echo \"deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main\" | sudo tee /etc/apt/sources.list.d/hashicorp.list sudo apt update && sudo apt install terraform sudo yum install -y yum-utils sudo yum-config-manager --add-repo https://rpm.releases.hashicorp.com/RHEL/hashicorp.repo sudo yum -y install terraform Ir na pagina oficial e baixar o pacote bin\u00e1rio https://www.terraform.io/downloads brew tap hashicorp/tap brew install hashicorp/tap/terraform Criando a Infraestrutura utilizando IaC \u00b6 Agora vamos ver como isso funciona. At\u00e9 agora voc\u00ea acessou o dashboard ou utilizou a interface de linha de comando (CLI) para criar rede, subrede, instancia, roteador e outros recursos. Vamos criar a topologia abaixo via c\u00f3digo. O Terraform conta com arquivos .tf, que definem a infraestrutura. O Terraform sabe o que \u00e9 implantado por meio do arquivo de estado. Este estado \u00e9 armazenado por padr\u00e3o em um arquivo local chamado \u201cterraform.tfstate\u201d. Tamb\u00e9m pode ser armazenado remotamente, o que funciona melhor em um ambiente de equipe. O Terraform permite v\u00e1rios provedores, normalmente inicializados em um arquivo chamado provider.tf. A estrutura de pastas ficar\u00e1 conforme figura abaixo: Crie a estrutura Dentro da pasta terraform crie os arquivos abaixo: provider.tf # Terraform Openstack deployment # Author: Tiago Demay - tiagoaodc@insper.edu.br # Define required providers terraform { required_version = \">= 0.14.0\" required_providers { openstack = { source = \"terraform-provider-openstack/openstack\" version = \"~> 1.35.0\" } } } # Configure the OpenStack Provider provider \"openstack\" { cacert_file =\"/home/cloud/snap/openstackclients/common/root-ca.crt\" auth_url = \"https://192.168.0.120:5000/v3\" region = \"RegionOne\" user_name = \"admin\" # password = \"PASSWORD_USER\" } instance.tf resource \"openstack_compute_instance_v2\" \"instancia\" { name = \"basic\" image_name = \"bionic-amd64\" flavor_name = \"m1.small\" key_pair = \"mykey\" security_groups = [\"default\"] network { name = \"network_1\" } depends_on = [openstack_networking_network_v2.network_1] } network.tf resource \"openstack_networking_network_v2\" \"network_1\" { name = \"network_1\" admin_state_up = \"true\" } resource \"openstack_networking_subnet_v2\" \"subnet_1\" { network_id = \"${openstack_networking_network_v2.network_1.id}\" cidr = \"192.167.199.0/24\" } Info Alterar a variavel external_network_id = <\"ID_EXT_NETWORK\"> para o ID da sua rede externa, voc\u00ea pode encontrar esta informac\u00e3o, acessando o Dashboard do Openstack ou via CLI openstack router.tf resource \"openstack_networking_router_v2\" \"router_1\" { name = \"my_router\" admin_state_up = true external_network_id = <\"ID_EXT_NETWORK\"> } resource \"openstack_networking_router_interface_v2\" \"int_1\" { router_id = \"${openstack_networking_router_v2.router_1.id}\" subnet_id = \"${openstack_networking_subnet_v2.subnet_1.id}\" } Criando um plano de Disaster Recovery e SLA (QUESTOES) \u00b6 Exercise QUESTOES Qual o conceito por tr\u00e1s de Edge Computing? (Obs: N\u00e3o \u00e9 a rede de celular 2G) Voc\u00ea \u00e9 o CTO (Chief Technology Officer) de uma grande empresa com sede em v\u00e1rias capitais no Brasil e precisa implantar um sistema cr\u00edtico, de baixo custo e com dados sigilosos para a \u00e1rea operacional. Voc\u00ea escolheria Public Cloud ou Private Cloud? Agora explique para ao RH por que voc\u00ea precisa de um time de DevOps. Considerando o mesmo sistema cr\u00edtico, agora sua equipe dever\u00e1 planejar e implementar um ambiente resiliente e capaz de mitigar poss\u00edveis interrup\u00e7\u00f5es/indisponibilidades. Para isso, identifiquem quais s\u00e3o as principais amea\u00e7as que podem colocar sua infraestrutura em risco, e descreva as principais a\u00e7\u00f5es que possibilitem o restabelecimento de todas as aplica\u00e7\u00f5es de forma r\u00e1pida e organizada caso algum evento cause uma interrup\u00e7\u00e3o ou incidente de seguran\u00e7a. Para isso monte um plano de DR e HA que considere entre as a\u00e7\u00f5es: Mapeamento das principais amea\u00e7as que podem colocar em riscos o seu ambiente. Elenque e priorize as a\u00e7\u00f5es para a recupera\u00e7\u00e3o de seu ambiente em uma poss\u00edvel interrup\u00e7\u00e3o/desastre. Como sua equipe ir\u00e1 tratar a pol\u00edtica de backup? Considerando poss\u00edveis instabilidades e problemas, descreva como alta disponibilidade ser\u00e1 implementada em sua infraestrutura.","title":"Computa\u00e7\u00e3o em Nuvem"},{"location":"roteiros/4.IaC/#sla-dr-e-iac","text":"Objetivos Entender os conceitos b\u00e1sicos Infraestrutura como c\u00f3digo. Entender os conceitos b\u00e1sicos sobre SLA e DR. Pr\u00e9-requisitos: Terminar o cap\u00edtulo anterior (Openstack) Realizar a leitura [Kavis - Cap 11 e Cap 13] Info DIVIS\u00c3O DO ROTEIRO O Roteiro \u00e9 dividido em 3 partes principais. Entendendo IaC - Vis\u00e3o Geral Criando a Infraestrutura utilizando IaC Criando um plano de Disaster Recovery e SLA (QUESTOES)","title":"SLA, DR e IaC"},{"location":"roteiros/4.IaC/#iac-visao-geral","text":"Infraestrutura como c\u00f3digo (IaC) \u00e9 o gerenciamento e provisionamento de infraestrutura por meio de c\u00f3digo, em vez de processos manuais. Utilizando o IaC, \u00e9 poss\u00edvel criar arquivos de configura\u00e7\u00e3o que contenham especifica\u00e7\u00f5es de infraestrutura, o que facilita a edi\u00e7\u00e3o e distribui\u00e7\u00e3o das configura\u00e7\u00f5es. Tamb\u00e9m garante que voc\u00ea sempre forne\u00e7a o mesmo ambiente. Ao codificar e documentar suas especifica\u00e7\u00f5es de configura\u00e7\u00e3o, o IaC auxilia no gerenciamento de configura\u00e7\u00e3o e ajuda a evitar altera\u00e7\u00f5es de configura\u00e7\u00e3o n\u00e3o documentadas. O IaC evoluiu para lidar com a deriva ambiental em dutos de libera\u00e7\u00e3o. Sem o IaC, as equipes teriam que manter as configura\u00e7\u00f5es do ambiente de implanta\u00e7\u00e3o separadamente. Com o tempo, cada ambiente se torna um \"floco de neve\", uma configura\u00e7\u00e3o \u00fanica que n\u00e3o pode ser replicada automaticamente. Inconsist\u00eancias entre ambientes podem causar problemas de implanta\u00e7\u00e3o. O gerenciamento e a manuten\u00e7\u00e3o da infraestrutura envolvem processos manuais que s\u00e3o propensos a erros e dif\u00edceis de rastrear.","title":"IaC Vis\u00e3o geral"},{"location":"roteiros/4.IaC/#reforcando","text":"O IaC evita a configura\u00e7\u00e3o manual e garante consist\u00eancia ao expressar o estado desejado do ambiente por meio de c\u00f3digo bem documentado em formatos como por exemplo o JSON. A implanta\u00e7\u00e3o de infraestrutura com IaC \u00e9 repet\u00edvel e evita problemas de tempo de execu\u00e7\u00e3o causados \u200b\u200bpor configura\u00e7\u00f5es quebradas ou depend\u00eancias ausentes. Para fazer altera\u00e7\u00f5es, voc\u00ea precisa editar a origem, n\u00e3o o destino . A idempot\u00eancia (a capacidade de uma determinada opera\u00e7\u00e3o produzir sempre o mesmo resultado) \u00e9 um princ\u00edpio fundamental da IaC. O comando deploy sempre define o ambiente de destino com a mesma configura\u00e7\u00e3o, independentemente do estado inicial do ambiente. A idempot\u00eancia \u00e9 alcan\u00e7ada configurando automaticamente os destinos existentes ou excluindo os destinos existentes e recriando novos ambientes.","title":"Refor\u00e7ando"},{"location":"roteiros/4.IaC/#o-que-e-terraform-em-infraestrutura-como-codigo","text":"\u00c9 uma das possiveis ferramentas para IaC. O mercado de Infraestrutura como C\u00f3digo amadureceu ao longo dos anos. H\u00e1 uma grande variedade de ferramentas, oferecendo diferentes recursos. Terraform \u00e9 a infraestrutura da HashiCorp como ferramenta de c\u00f3digo. Ele permite que voc\u00ea defina recursos e infraestrutura em arquivos de configura\u00e7\u00e3o declarativos leg\u00edveis por humanos e gerencie o ciclo de vida de sua infraestrutura. O uso do Terraform tem v\u00e1rias vantagens em rela\u00e7\u00e3o ao gerenciamento manual de sua infraestrutura: O Terraform pode gerenciar a infraestrutura em v\u00e1rias plataformas de nuvem. A linguagem de configura\u00e7\u00e3o leg\u00edvel por humanos ajuda voc\u00ea a escrever c\u00f3digo de infraestrutura rapidamente. O estado do Terraform permite rastrear altera\u00e7\u00f5es de recursos em todas as suas implanta\u00e7\u00f5es. Voc\u00ea pode confirmar suas configura\u00e7\u00f5es no controle de vers\u00e3o para colaborar com seguran\u00e7a na infraestrutura. Para implantar infraestrutura com o Terraform: * Scope - Identifique a infraestrutura para o seu projeto. * Author - Escreva a configura\u00e7\u00e3o para sua infraestrutura. * Initialize - Instale os plugins que o Terraform precisa para gerenciar a infraestrutura. * Plan - Visualize as altera\u00e7\u00f5es que o Terraform far\u00e1 para corresponder \u00e0 sua configura\u00e7\u00e3o. * Apply - Fa\u00e7a as altera\u00e7\u00f5es planejadas.","title":"O que \u00e9 Terraform em Infraestrutura como C\u00f3digo?"},{"location":"roteiros/4.IaC/#instalar-terraform","text":"Ubuntu/Debian CentOS/RHEL Windows/FreeBSD/OpenBSD/Solaris macOS wget -O- https://apt.releases.hashicorp.com/gpg | gpg --dearmor | sudo tee /usr/share/keyrings/hashicorp-archive-keyring.gpg gpg --no-default-keyring --keyring /usr/share/keyrings/hashicorp-archive-keyring.gpg --fingerprint echo \"deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main\" | sudo tee /etc/apt/sources.list.d/hashicorp.list sudo apt update && sudo apt install terraform sudo yum install -y yum-utils sudo yum-config-manager --add-repo https://rpm.releases.hashicorp.com/RHEL/hashicorp.repo sudo yum -y install terraform Ir na pagina oficial e baixar o pacote bin\u00e1rio https://www.terraform.io/downloads brew tap hashicorp/tap brew install hashicorp/tap/terraform","title":"Instalar Terraform"},{"location":"roteiros/4.IaC/#criando-a-infraestrutura-utilizando-iac","text":"Agora vamos ver como isso funciona. At\u00e9 agora voc\u00ea acessou o dashboard ou utilizou a interface de linha de comando (CLI) para criar rede, subrede, instancia, roteador e outros recursos. Vamos criar a topologia abaixo via c\u00f3digo. O Terraform conta com arquivos .tf, que definem a infraestrutura. O Terraform sabe o que \u00e9 implantado por meio do arquivo de estado. Este estado \u00e9 armazenado por padr\u00e3o em um arquivo local chamado \u201cterraform.tfstate\u201d. Tamb\u00e9m pode ser armazenado remotamente, o que funciona melhor em um ambiente de equipe. O Terraform permite v\u00e1rios provedores, normalmente inicializados em um arquivo chamado provider.tf. A estrutura de pastas ficar\u00e1 conforme figura abaixo: Crie a estrutura Dentro da pasta terraform crie os arquivos abaixo: provider.tf # Terraform Openstack deployment # Author: Tiago Demay - tiagoaodc@insper.edu.br # Define required providers terraform { required_version = \">= 0.14.0\" required_providers { openstack = { source = \"terraform-provider-openstack/openstack\" version = \"~> 1.35.0\" } } } # Configure the OpenStack Provider provider \"openstack\" { cacert_file =\"/home/cloud/snap/openstackclients/common/root-ca.crt\" auth_url = \"https://192.168.0.120:5000/v3\" region = \"RegionOne\" user_name = \"admin\" # password = \"PASSWORD_USER\" } instance.tf resource \"openstack_compute_instance_v2\" \"instancia\" { name = \"basic\" image_name = \"bionic-amd64\" flavor_name = \"m1.small\" key_pair = \"mykey\" security_groups = [\"default\"] network { name = \"network_1\" } depends_on = [openstack_networking_network_v2.network_1] } network.tf resource \"openstack_networking_network_v2\" \"network_1\" { name = \"network_1\" admin_state_up = \"true\" } resource \"openstack_networking_subnet_v2\" \"subnet_1\" { network_id = \"${openstack_networking_network_v2.network_1.id}\" cidr = \"192.167.199.0/24\" } Info Alterar a variavel external_network_id = <\"ID_EXT_NETWORK\"> para o ID da sua rede externa, voc\u00ea pode encontrar esta informac\u00e3o, acessando o Dashboard do Openstack ou via CLI openstack router.tf resource \"openstack_networking_router_v2\" \"router_1\" { name = \"my_router\" admin_state_up = true external_network_id = <\"ID_EXT_NETWORK\"> } resource \"openstack_networking_router_interface_v2\" \"int_1\" { router_id = \"${openstack_networking_router_v2.router_1.id}\" subnet_id = \"${openstack_networking_subnet_v2.subnet_1.id}\" }","title":"Criando a Infraestrutura utilizando IaC"},{"location":"roteiros/4.IaC/#criando-um-plano-de-disaster-recovery-e-sla-questoes","text":"Exercise QUESTOES Qual o conceito por tr\u00e1s de Edge Computing? (Obs: N\u00e3o \u00e9 a rede de celular 2G) Voc\u00ea \u00e9 o CTO (Chief Technology Officer) de uma grande empresa com sede em v\u00e1rias capitais no Brasil e precisa implantar um sistema cr\u00edtico, de baixo custo e com dados sigilosos para a \u00e1rea operacional. Voc\u00ea escolheria Public Cloud ou Private Cloud? Agora explique para ao RH por que voc\u00ea precisa de um time de DevOps. Considerando o mesmo sistema cr\u00edtico, agora sua equipe dever\u00e1 planejar e implementar um ambiente resiliente e capaz de mitigar poss\u00edveis interrup\u00e7\u00f5es/indisponibilidades. Para isso, identifiquem quais s\u00e3o as principais amea\u00e7as que podem colocar sua infraestrutura em risco, e descreva as principais a\u00e7\u00f5es que possibilitem o restabelecimento de todas as aplica\u00e7\u00f5es de forma r\u00e1pida e organizada caso algum evento cause uma interrup\u00e7\u00e3o ou incidente de seguran\u00e7a. Para isso monte um plano de DR e HA que considere entre as a\u00e7\u00f5es: Mapeamento das principais amea\u00e7as que podem colocar em riscos o seu ambiente. Elenque e priorize as a\u00e7\u00f5es para a recupera\u00e7\u00e3o de seu ambiente em uma poss\u00edvel interrup\u00e7\u00e3o/desastre. Como sua equipe ir\u00e1 tratar a pol\u00edtica de backup? Considerando poss\u00edveis instabilidades e problemas, descreva como alta disponibilidade ser\u00e1 implementada em sua infraestrutura.","title":"Criando um plano de Disaster Recovery e SLA (QUESTOES)"},{"location":"roteiros/5.K8s/","text":"Containers e K8s \u00b6 Objetivos Entender os conceitos b\u00e1sicos sobre Cont\u00eaineres e seus Orquestradores. Instalar o Octavia no Openstack Integrar o Openstack e o Kubernetes Pr\u00e9-requisitos: Terminar o cap\u00edtulo anterior (SLA,DR e IaC) Realizar a leitura sobre o Docker. [ https://docs.docker.com/engine/docker-overview/ ]. Realizar a leitura sobre o Kubernetes. [ https://kubernetes.io/docs/concepts/ ]. Realizar a leitura do Octavia. [ https://docs.openstack.org/octavia/latest/ ]. Realizar a leitura do Barbican. [ https://docs.openstack.org/barbican/latest/ ]. Realizar a leitura dos Charms. [ https://jaas.ai/vault , https://jaas.ai/octavia , https://jaas.ai/barbican ]. Info DIVIS\u00c3O DO ROTEIRO O Roteiro \u00e9 dividido em 3 partes principais. Entendendo tipos de implantacoes - Vis\u00e3o Geral Adicionando Octavia (Load Balancer) na Nuvem privada(Openstack) Utilizando Docker e Kubernetes Voce chegou a um roteiro avancado, este Roteiro envolve a resolucao de problemas de implantacao, esperamos que voc\u00ea esteja preparado. \u00b6 TARGET \u00b6 DO INICIO DO ROTEIRO 1 ATE ONDE CHEGAMOS NO FIM DESTE ROTEIRO \u00b6 Tipo de implantacoes \u00b6 Tradicional \u00b6 Inicialmente, as organiza\u00e7\u00f5es executavam aplicativos em servidores f\u00edsicos. Os limites de recursos n\u00e3o podem ser definidos para aplicativos em servidores f\u00edsicos, o que causa problemas de aloca\u00e7\u00e3o de recursos. Por exemplo, se v\u00e1rios aplicativos estiverem sendo executados em um servidor f\u00edsico, pode haver uma situa\u00e7\u00e3o em que um aplicativo consuma mais recursos, resultando em um desempenho insatisfat\u00f3rio de outros aplicativos. A solu\u00e7\u00e3o para isso \u00e9 executar cada aplicativo em um servidor f\u00edsico diferente. Mas isso n\u00e3o aumentou porque os recursos s\u00e3o subutilizados e \u00e9 caro para as organiza\u00e7\u00f5es manter muitos servidores f\u00edsicos. Virtualizada \u00b6 Como solu\u00e7\u00e3o, a virtualiza\u00e7\u00e3o foi introduzida. Ele permite que voc\u00ea execute v\u00e1rias m\u00e1quinas virtuais (VMs) na CPU de um \u00fanico servidor f\u00edsico. A virtualiza\u00e7\u00e3o permite que os aplicativos sejam isolados entre VMs e fornece um n\u00edvel de seguran\u00e7a que as informa\u00e7\u00f5es de um aplicativo n\u00e3o podem ser acessadas livremente por outro aplicativo. A virtualiza\u00e7\u00e3o permite uma melhor utiliza\u00e7\u00e3o dos recursos em servidores f\u00edsicos e uma melhor escalabilidade, pois os aplicativos podem ser facilmente adicionados ou atualizados, os custos de hardware s\u00e3o reduzidos e muito mais. Com a virtualiza\u00e7\u00e3o, voc\u00ea pode apresentar um conjunto de recursos f\u00edsicos como um cluster de m\u00e1quinas virtuais descart\u00e1veis. Cada VM \u00e9 uma m\u00e1quina completa, executando todos os componentes, incluindo seu pr\u00f3prio sistema operacional, sobre hardware virtualizado. Conteinerizada \u00b6 Os cont\u00eaineres s\u00e3o pacotes leves do c\u00f3digo do seu aplicativo, juntamente com depend\u00eancias, como vers\u00f5es espec\u00edficas de tempos de execu\u00e7\u00e3o de linguagem de programa\u00e7\u00e3o e bibliotecas necess\u00e1rias para executar seus servi\u00e7os de software. Os cont\u00eaineres facilitam o compartilhamento de recursos de CPU, mem\u00f3ria, armazenamento e rede no n\u00edvel dos sistemas operacionais e oferecem um mecanismo de empacotamento l\u00f3gico no qual os aplicativos podem ser abstra\u00eddos do ambiente em que realmente s\u00e3o executados. Os cont\u00eaineres virtualizam no n\u00edvel do sistema operacional enquanto as VMs virtualizam no n\u00edvel do hardware Instalando e Configurando o Octavia (Loadbalancer para Openstack) \u00b6 No servidor Main: Fa\u00e7a o download do arquivo loadbalancer-octavia.yaml no Github openstack-charmers/openstack-bundles Entre na pasta openstack Vamos pedir pro juju aplicar as modificacoes do bundle customizado com o overlay. juju deploy ./bundle.yaml --overlay loadbalancer-octavia.yaml Voc\u00eas j\u00e1 sabem o que fazer agora, Ler a documentacao sobre K8S e Docker, mas de olho no status do Juju. \u00b6 Agora vamos criar os certificados necess\u00e1rios. mkdir -p demoCA/newcerts touch demoCA/index.txt touch demoCA/index.txt.attr openssl genpkey -algorithm RSA -aes256 -pass pass:foobar -out issuing_ca_key.pem openssl req -x509 -passin pass:foobar -new -nodes -key issuing_ca_key.pem \\ -config /etc/ssl/openssl.cnf \\ -subj \"/C=US/ST=Somestate/O=Org/CN=www.example.com\" \\ -days 30 \\ -out issuing_ca.pem openssl genpkey -algorithm RSA -aes256 -pass pass:foobar -out controller_ca_key.pem openssl req -x509 -passin pass:foobar -new -nodes \\ -key controller_ca_key.pem \\ -config /etc/ssl/openssl.cnf \\ -subj \"/C=US/ST=Somestate/O=Org/CN=www.example.com\" \\ -days 30 \\ -out controller_ca.pem openssl req \\ -newkey rsa:2048 -nodes -keyout controller_key.pem \\ -subj \"/C=US/ST=Somestate/O=Org/CN=www.example.com\" \\ -out controller.csr openssl ca -passin pass:foobar -config /etc/ssl/openssl.cnf \\ -cert controller_ca.pem -keyfile controller_ca_key.pem \\ -create_serial -batch \\ -in controller.csr -days 30 -out controller_cert.pem cat controller_cert.pem controller_key.pem > controller_cert_bundle.pem Abra o cofre VAULT novamente... \u00b6 Adicionando variavel de ambiente VAULT: export VAULT_ADDR=\"http://<IP of vault unit>:8200\" Removendo o selo, repita a opera\u00e7\u00e3o com 3 keys diferentes: vault operator unseal <Unseal Key> Autorizando o charm: export VAULT_TOKEN=<Initial Root Token> vault token create -ttl=10m Anote o token gerado pelo comando e use abaixo: juju run-action --wait vault/leader authorize-charm token=<token> juju run-action --wait vault/leader generate-root-ca Ainda no Servidor main , vamos aumentar alguns limites: openstack quota set --cores 100 [ID do Projeto] openstack quota set --instances 100 [ID do Projeto] Configurando o Octavia com as alteracoes \u00b6 Passo1 juju config octavia \\ lb-mgmt-issuing-cacert=\"$(base64 issuing_ca.pem)\" \\ lb-mgmt-issuing-ca-private-key=\"$(base64 issuing_ca_key.pem)\" \\ lb-mgmt-issuing-ca-key-passphrase=foobar \\ lb-mgmt-controller-cacert=\"$(base64 controller_ca.pem)\" \\ lb-mgmt-controller-cert=\"$(base64 controller_cert_bundle.pem)\" Passo2 juju config octavia loadbalancer-topology=ACTIVE_STANDBY spare-pool-size=4 juju run-action --wait glance-simplestreams-sync/0 sync-images \u00b6 Hold your breath! \u00b6 Criando imagem \u00b6 Passo1 juju run-action --wait octavia-diskimage-retrofit/leader retrofit-image \u00b6 Passo2 openstack image list openstack image set --tag octavia-diskimage-retrofit --tag octavia-amphora [id amphora image] juju run-action --wait octavia/0 configure-resources No cap\u00edtulo 3, foi realizada a implanta\u00e7\u00e3o do Openstack no hardware dispon\u00edvel. Al\u00e9m de VMs, o Openstack consegue tamb\u00e9m manipular containers, tal qual o MaaS e o Juju. Contudo o grande problema \u00e9 que n\u00e3o basta apenas criar e destruir um container, \u00e9 preciso administrar uma complexa arquitetura, monitorando e controlando um conjunto de containers que representam uma implanta\u00e7\u00e3o de um sistema. WebServer \u00b6 Criar uma inst\u00e2ncia m1.small com IP p\u00fablico no Openstack, nomea-la como juju-openstack Acessar a instancia criada Vamos criar um WebServer em NodeJS Criar o arquivo ~/hello-node/server.js #!/usr/bin/env nodejs var http = require('http'); var os = require('os'); var handleRequest = function(request, response) { console.log('Received request for URL: ' + request.url); response.writeHead(200); response.end('{ \"host\": ' + os.hostname() + ', \"message\": \"Hello World!\"}'); }; var www = http.createServer(handleRequest); www.listen(8080); console.log('Server running at http://localhost:8080/'); Testar o WebServer rodando localmente no terminal. sudo apt install nodejs ./server.js Exercise CheckPoint-1 WebServer De um print das Telas abaixo: Da aba network topology no OpenStack . Das regras do Security Group utilizado Da Aba do navegador com o WebServer Rodando. Instalar o Docker \u00b6 Arquitetura Docker sudo apt-get update sudo apt install build-essential apt-transport-https curl curl -fsSL https://get.docker.com | sh - sudo usermod -aG docker $USER newgrp docker docker version docker run hello-world Criar uma um arquivo ~/hello-node/Dockerfile que dar\u00e1 origem ao container FROM node:6.9.2 EXPOSE 8080 COPY server.js . CMD node server.js Montar a imagem local (Cria um container com esta aplicacao webserver) docker build -t hello-node:v1 ./hello-node/ Rodar o container com a imagem criada. docker container run hello-node:v1 Exercise CheckPoint-2 Docker De um print das Telas abaixo: WebServer Rodando no navegador. Docker Hub \u00b6 Criar individualmente um login na https://hub.docker.com/ \u2022 Fazer o login no Docker \u2022 Aplicar a tag na imagem e dar o push do Docker Hub \u2022 Para mais detalhes docker --help Exercise QUESTOES-1 O que \u00e9 Docker Swarm? O que \u00e9 Docker Registry? O que \u00e9 Docker Engine? Kubernetes aka k8s \u00b6 Para facilitar o deploy do Kubernetes vamos utilizar uma \"velha conhecida\". Deja-vu (Juju Reborn) \u00b6 O Dashboard do Openstack possui alguns termos (region, instance type, security group, etc) que s\u00e3o semelhantes ao da AWS. Como visto anteriormente, Juju consegue operar sobre Public Cloud, Private Cloud, Bare-metal e Container. Para o setup ficar completo, agora vamos utilizar o Juju sobre o Openstack. Dicas Documentacao - adicionar Openstack como cloud Documentacao - adicionar integrador obrigat\u00f3rio Bundle modificado do Kubernetes-core Acesse a inst\u00e2ncia m1.tiny criada no in\u00edcio do roteiro. Fazer a instala\u00e7\u00e3o do Juju. Adicione o Openstack como Cloud Provider no Juju. Fazer o deploy do Kubernetes-core Instalar kubectl no cliente via snap. sudo snap install kubectl --classic Verificar a configura\u00e7\u00e3o do Kubernetes via kubectl kubectl cluster-info Caso tenha problemas ver: documentacao-kubernetes Configurar o kubectl proxy para utiliza\u00e7\u00e3o externa na porta 8080. Acessar o Dashboard. Fazendo um Deploy \u00b6 Fazer o deploy da imagem docker criada na sess\u00e3o anterior kubectl run hello-node --image=[user]/hello-node:v1 --port=8080 Verificar no terminal: kubectl get all Verificar o deploy status no Dashboard Expandir o deploy para 5 r\u00e9plicas do pod Exercise CheckPoint-3 Dashboard Kubernetes De um print das Telas abaixo: Do dashboard Kubernetes com as 5 replicas Acessando o Deploy \u00b6 Criar um servi\u00e7o que ir\u00e1 expor o deploy Alternativa I - ClusterIP com Ingress \u00b6 kubectl expose deployment hello-node --type=ClusterIP Criar o arquivo ingress.yaml apiVersion: extensions/v1beta1 kind: Ingress metadata: name: hello-node-ingress spec: rules: - host: hello-node.[ip do kubernetes-worker].xip.io http: paths: - path: / backend: serviceName: hello-node servicePort: 8080 * Aplicar arquivo ingress ao K8s kubectl create -f ingress.yaml Exercise CheckPoint-4 Expose Service De um print das Telas abaixo: Do comando -> kubectl get all Alternativa II - NodePort \u00b6 kubectl expose deployment hello-node --type=NodePort Verificar qual porta foi designada e liberar o security group do worker juju run --unit kubernetes-worker/[# worker] \"open-port [porta]\" Exercise CheckPoint-4 Acessar o deploy De um print das Telas abaixo: Do comando -> kubectl get all WebServer Rodando no navegador utilizando a porta aberta. Alterando o deploy \u00b6 Alterar o arquivo server.js Montar uma nova imagem com tag v2 e fa\u00e7a um push Fazer um deploy de um pod de testes Testar as altera\u00e7\u00f5es Fazer a implanta\u00e7\u00e3o imediata em produ\u00e7\u00e3o: kubectl set image deployment/hello-node hello-node=[user]/hello-node:v2 Exercise CheckPoint-5 Modificacao De um print das Telas abaixo: Do comando -> kubectl get all WebServer modificado Rodando no navegador utilizando a porta aberta. Conclus\u00e3o: SOMENTE PARA PENSAR \u00b6 Voc\u00ea desempenhou uma implanta\u00e7\u00e3o em tempo real usando Kubernetes e DockerHub. Como seria uma arquitetura de Continuous Integration/Continuous Delivery (CI/CD) real utilizando Kubernetes?","title":"Computa\u00e7\u00e3o em Nuvem"},{"location":"roteiros/5.K8s/#containers-e-k8s","text":"Objetivos Entender os conceitos b\u00e1sicos sobre Cont\u00eaineres e seus Orquestradores. Instalar o Octavia no Openstack Integrar o Openstack e o Kubernetes Pr\u00e9-requisitos: Terminar o cap\u00edtulo anterior (SLA,DR e IaC) Realizar a leitura sobre o Docker. [ https://docs.docker.com/engine/docker-overview/ ]. Realizar a leitura sobre o Kubernetes. [ https://kubernetes.io/docs/concepts/ ]. Realizar a leitura do Octavia. [ https://docs.openstack.org/octavia/latest/ ]. Realizar a leitura do Barbican. [ https://docs.openstack.org/barbican/latest/ ]. Realizar a leitura dos Charms. [ https://jaas.ai/vault , https://jaas.ai/octavia , https://jaas.ai/barbican ]. Info DIVIS\u00c3O DO ROTEIRO O Roteiro \u00e9 dividido em 3 partes principais. Entendendo tipos de implantacoes - Vis\u00e3o Geral Adicionando Octavia (Load Balancer) na Nuvem privada(Openstack) Utilizando Docker e Kubernetes","title":"Containers e K8s"},{"location":"roteiros/5.K8s/#voce-chegou-a-um-roteiro-avancado-este-roteiro-envolve-a-resolucao-de-problemas-de-implantacao-esperamos-que-voce-esteja-preparado","text":"","title":"Voce chegou a um roteiro avancado, este Roteiro envolve a resolucao de problemas de implantacao, esperamos que voc\u00ea esteja preparado."},{"location":"roteiros/5.K8s/#target","text":"","title":"TARGET"},{"location":"roteiros/5.K8s/#do-inicio-do-roteiro-1-ate-onde-chegamos-no-fim-deste-roteiro","text":"","title":"DO INICIO DO ROTEIRO 1 ATE ONDE CHEGAMOS NO FIM DESTE ROTEIRO"},{"location":"roteiros/5.K8s/#tipo-de-implantacoes","text":"","title":"Tipo de implantacoes"},{"location":"roteiros/5.K8s/#tradicional","text":"Inicialmente, as organiza\u00e7\u00f5es executavam aplicativos em servidores f\u00edsicos. Os limites de recursos n\u00e3o podem ser definidos para aplicativos em servidores f\u00edsicos, o que causa problemas de aloca\u00e7\u00e3o de recursos. Por exemplo, se v\u00e1rios aplicativos estiverem sendo executados em um servidor f\u00edsico, pode haver uma situa\u00e7\u00e3o em que um aplicativo consuma mais recursos, resultando em um desempenho insatisfat\u00f3rio de outros aplicativos. A solu\u00e7\u00e3o para isso \u00e9 executar cada aplicativo em um servidor f\u00edsico diferente. Mas isso n\u00e3o aumentou porque os recursos s\u00e3o subutilizados e \u00e9 caro para as organiza\u00e7\u00f5es manter muitos servidores f\u00edsicos.","title":"Tradicional"},{"location":"roteiros/5.K8s/#virtualizada","text":"Como solu\u00e7\u00e3o, a virtualiza\u00e7\u00e3o foi introduzida. Ele permite que voc\u00ea execute v\u00e1rias m\u00e1quinas virtuais (VMs) na CPU de um \u00fanico servidor f\u00edsico. A virtualiza\u00e7\u00e3o permite que os aplicativos sejam isolados entre VMs e fornece um n\u00edvel de seguran\u00e7a que as informa\u00e7\u00f5es de um aplicativo n\u00e3o podem ser acessadas livremente por outro aplicativo. A virtualiza\u00e7\u00e3o permite uma melhor utiliza\u00e7\u00e3o dos recursos em servidores f\u00edsicos e uma melhor escalabilidade, pois os aplicativos podem ser facilmente adicionados ou atualizados, os custos de hardware s\u00e3o reduzidos e muito mais. Com a virtualiza\u00e7\u00e3o, voc\u00ea pode apresentar um conjunto de recursos f\u00edsicos como um cluster de m\u00e1quinas virtuais descart\u00e1veis. Cada VM \u00e9 uma m\u00e1quina completa, executando todos os componentes, incluindo seu pr\u00f3prio sistema operacional, sobre hardware virtualizado.","title":"Virtualizada"},{"location":"roteiros/5.K8s/#conteinerizada","text":"Os cont\u00eaineres s\u00e3o pacotes leves do c\u00f3digo do seu aplicativo, juntamente com depend\u00eancias, como vers\u00f5es espec\u00edficas de tempos de execu\u00e7\u00e3o de linguagem de programa\u00e7\u00e3o e bibliotecas necess\u00e1rias para executar seus servi\u00e7os de software. Os cont\u00eaineres facilitam o compartilhamento de recursos de CPU, mem\u00f3ria, armazenamento e rede no n\u00edvel dos sistemas operacionais e oferecem um mecanismo de empacotamento l\u00f3gico no qual os aplicativos podem ser abstra\u00eddos do ambiente em que realmente s\u00e3o executados. Os cont\u00eaineres virtualizam no n\u00edvel do sistema operacional enquanto as VMs virtualizam no n\u00edvel do hardware","title":"Conteinerizada"},{"location":"roteiros/5.K8s/#instalando-e-configurando-o-octavia-loadbalancer-para-openstack","text":"No servidor Main: Fa\u00e7a o download do arquivo loadbalancer-octavia.yaml no Github openstack-charmers/openstack-bundles Entre na pasta openstack Vamos pedir pro juju aplicar as modificacoes do bundle customizado com o overlay. juju deploy ./bundle.yaml --overlay loadbalancer-octavia.yaml","title":"Instalando e Configurando o Octavia (Loadbalancer para Openstack)"},{"location":"roteiros/5.K8s/#voces-ja-sabem-o-que-fazer-agora-ler-a-documentacao-sobre-k8s-e-docker-mas-de-olho-no-status-do-juju","text":"Agora vamos criar os certificados necess\u00e1rios. mkdir -p demoCA/newcerts touch demoCA/index.txt touch demoCA/index.txt.attr openssl genpkey -algorithm RSA -aes256 -pass pass:foobar -out issuing_ca_key.pem openssl req -x509 -passin pass:foobar -new -nodes -key issuing_ca_key.pem \\ -config /etc/ssl/openssl.cnf \\ -subj \"/C=US/ST=Somestate/O=Org/CN=www.example.com\" \\ -days 30 \\ -out issuing_ca.pem openssl genpkey -algorithm RSA -aes256 -pass pass:foobar -out controller_ca_key.pem openssl req -x509 -passin pass:foobar -new -nodes \\ -key controller_ca_key.pem \\ -config /etc/ssl/openssl.cnf \\ -subj \"/C=US/ST=Somestate/O=Org/CN=www.example.com\" \\ -days 30 \\ -out controller_ca.pem openssl req \\ -newkey rsa:2048 -nodes -keyout controller_key.pem \\ -subj \"/C=US/ST=Somestate/O=Org/CN=www.example.com\" \\ -out controller.csr openssl ca -passin pass:foobar -config /etc/ssl/openssl.cnf \\ -cert controller_ca.pem -keyfile controller_ca_key.pem \\ -create_serial -batch \\ -in controller.csr -days 30 -out controller_cert.pem cat controller_cert.pem controller_key.pem > controller_cert_bundle.pem","title":"Voc\u00eas j\u00e1 sabem o que fazer agora, Ler a documentacao sobre K8S e Docker, mas de olho no status do Juju."},{"location":"roteiros/5.K8s/#abra-o-cofre-vault-novamente","text":"Adicionando variavel de ambiente VAULT: export VAULT_ADDR=\"http://<IP of vault unit>:8200\" Removendo o selo, repita a opera\u00e7\u00e3o com 3 keys diferentes: vault operator unseal <Unseal Key> Autorizando o charm: export VAULT_TOKEN=<Initial Root Token> vault token create -ttl=10m Anote o token gerado pelo comando e use abaixo: juju run-action --wait vault/leader authorize-charm token=<token> juju run-action --wait vault/leader generate-root-ca Ainda no Servidor main , vamos aumentar alguns limites: openstack quota set --cores 100 [ID do Projeto] openstack quota set --instances 100 [ID do Projeto]","title":"Abra o cofre VAULT novamente..."},{"location":"roteiros/5.K8s/#configurando-o-octavia-com-as-alteracoes","text":"Passo1 juju config octavia \\ lb-mgmt-issuing-cacert=\"$(base64 issuing_ca.pem)\" \\ lb-mgmt-issuing-ca-private-key=\"$(base64 issuing_ca_key.pem)\" \\ lb-mgmt-issuing-ca-key-passphrase=foobar \\ lb-mgmt-controller-cacert=\"$(base64 controller_ca.pem)\" \\ lb-mgmt-controller-cert=\"$(base64 controller_cert_bundle.pem)\" Passo2 juju config octavia loadbalancer-topology=ACTIVE_STANDBY spare-pool-size=4 juju run-action --wait glance-simplestreams-sync/0 sync-images","title":"Configurando o Octavia com as alteracoes"},{"location":"roteiros/5.K8s/#_1","text":"","title":""},{"location":"roteiros/5.K8s/#hold-your-breath","text":"","title":"Hold your breath!"},{"location":"roteiros/5.K8s/#criando-imagem","text":"Passo1 juju run-action --wait octavia-diskimage-retrofit/leader retrofit-image","title":"Criando imagem"},{"location":"roteiros/5.K8s/#_2","text":"Passo2 openstack image list openstack image set --tag octavia-diskimage-retrofit --tag octavia-amphora [id amphora image] juju run-action --wait octavia/0 configure-resources No cap\u00edtulo 3, foi realizada a implanta\u00e7\u00e3o do Openstack no hardware dispon\u00edvel. Al\u00e9m de VMs, o Openstack consegue tamb\u00e9m manipular containers, tal qual o MaaS e o Juju. Contudo o grande problema \u00e9 que n\u00e3o basta apenas criar e destruir um container, \u00e9 preciso administrar uma complexa arquitetura, monitorando e controlando um conjunto de containers que representam uma implanta\u00e7\u00e3o de um sistema.","title":""},{"location":"roteiros/5.K8s/#webserver","text":"Criar uma inst\u00e2ncia m1.small com IP p\u00fablico no Openstack, nomea-la como juju-openstack Acessar a instancia criada Vamos criar um WebServer em NodeJS Criar o arquivo ~/hello-node/server.js #!/usr/bin/env nodejs var http = require('http'); var os = require('os'); var handleRequest = function(request, response) { console.log('Received request for URL: ' + request.url); response.writeHead(200); response.end('{ \"host\": ' + os.hostname() + ', \"message\": \"Hello World!\"}'); }; var www = http.createServer(handleRequest); www.listen(8080); console.log('Server running at http://localhost:8080/'); Testar o WebServer rodando localmente no terminal. sudo apt install nodejs ./server.js Exercise CheckPoint-1 WebServer De um print das Telas abaixo: Da aba network topology no OpenStack . Das regras do Security Group utilizado Da Aba do navegador com o WebServer Rodando.","title":"WebServer"},{"location":"roteiros/5.K8s/#instalar-o-docker","text":"Arquitetura Docker sudo apt-get update sudo apt install build-essential apt-transport-https curl curl -fsSL https://get.docker.com | sh - sudo usermod -aG docker $USER newgrp docker docker version docker run hello-world Criar uma um arquivo ~/hello-node/Dockerfile que dar\u00e1 origem ao container FROM node:6.9.2 EXPOSE 8080 COPY server.js . CMD node server.js Montar a imagem local (Cria um container com esta aplicacao webserver) docker build -t hello-node:v1 ./hello-node/ Rodar o container com a imagem criada. docker container run hello-node:v1 Exercise CheckPoint-2 Docker De um print das Telas abaixo: WebServer Rodando no navegador.","title":"Instalar o Docker"},{"location":"roteiros/5.K8s/#docker-hub","text":"Criar individualmente um login na https://hub.docker.com/ \u2022 Fazer o login no Docker \u2022 Aplicar a tag na imagem e dar o push do Docker Hub \u2022 Para mais detalhes docker --help Exercise QUESTOES-1 O que \u00e9 Docker Swarm? O que \u00e9 Docker Registry? O que \u00e9 Docker Engine?","title":"Docker Hub"},{"location":"roteiros/5.K8s/#kubernetes-aka-k8s","text":"Para facilitar o deploy do Kubernetes vamos utilizar uma \"velha conhecida\".","title":"Kubernetes aka k8s"},{"location":"roteiros/5.K8s/#deja-vu-juju-reborn","text":"O Dashboard do Openstack possui alguns termos (region, instance type, security group, etc) que s\u00e3o semelhantes ao da AWS. Como visto anteriormente, Juju consegue operar sobre Public Cloud, Private Cloud, Bare-metal e Container. Para o setup ficar completo, agora vamos utilizar o Juju sobre o Openstack. Dicas Documentacao - adicionar Openstack como cloud Documentacao - adicionar integrador obrigat\u00f3rio Bundle modificado do Kubernetes-core Acesse a inst\u00e2ncia m1.tiny criada no in\u00edcio do roteiro. Fazer a instala\u00e7\u00e3o do Juju. Adicione o Openstack como Cloud Provider no Juju. Fazer o deploy do Kubernetes-core Instalar kubectl no cliente via snap. sudo snap install kubectl --classic Verificar a configura\u00e7\u00e3o do Kubernetes via kubectl kubectl cluster-info Caso tenha problemas ver: documentacao-kubernetes Configurar o kubectl proxy para utiliza\u00e7\u00e3o externa na porta 8080. Acessar o Dashboard.","title":"Deja-vu (Juju Reborn)"},{"location":"roteiros/5.K8s/#fazendo-um-deploy","text":"Fazer o deploy da imagem docker criada na sess\u00e3o anterior kubectl run hello-node --image=[user]/hello-node:v1 --port=8080 Verificar no terminal: kubectl get all Verificar o deploy status no Dashboard Expandir o deploy para 5 r\u00e9plicas do pod Exercise CheckPoint-3 Dashboard Kubernetes De um print das Telas abaixo: Do dashboard Kubernetes com as 5 replicas","title":"Fazendo um Deploy"},{"location":"roteiros/5.K8s/#acessando-o-deploy","text":"Criar um servi\u00e7o que ir\u00e1 expor o deploy","title":"Acessando o Deploy"},{"location":"roteiros/5.K8s/#alternativa-i-clusterip-com-ingress","text":"kubectl expose deployment hello-node --type=ClusterIP Criar o arquivo ingress.yaml apiVersion: extensions/v1beta1 kind: Ingress metadata: name: hello-node-ingress spec: rules: - host: hello-node.[ip do kubernetes-worker].xip.io http: paths: - path: / backend: serviceName: hello-node servicePort: 8080 * Aplicar arquivo ingress ao K8s kubectl create -f ingress.yaml Exercise CheckPoint-4 Expose Service De um print das Telas abaixo: Do comando -> kubectl get all","title":"Alternativa I - ClusterIP com Ingress"},{"location":"roteiros/5.K8s/#alternativa-ii-nodeport","text":"kubectl expose deployment hello-node --type=NodePort Verificar qual porta foi designada e liberar o security group do worker juju run --unit kubernetes-worker/[# worker] \"open-port [porta]\" Exercise CheckPoint-4 Acessar o deploy De um print das Telas abaixo: Do comando -> kubectl get all WebServer Rodando no navegador utilizando a porta aberta.","title":"Alternativa II - NodePort"},{"location":"roteiros/5.K8s/#alterando-o-deploy","text":"Alterar o arquivo server.js Montar uma nova imagem com tag v2 e fa\u00e7a um push Fazer um deploy de um pod de testes Testar as altera\u00e7\u00f5es Fazer a implanta\u00e7\u00e3o imediata em produ\u00e7\u00e3o: kubectl set image deployment/hello-node hello-node=[user]/hello-node:v2 Exercise CheckPoint-5 Modificacao De um print das Telas abaixo: Do comando -> kubectl get all WebServer modificado Rodando no navegador utilizando a porta aberta.","title":"Alterando o deploy"},{"location":"roteiros/5.K8s/#conclusao-somente-para-pensar","text":"Voc\u00ea desempenhou uma implanta\u00e7\u00e3o em tempo real usando Kubernetes e DockerHub. Como seria uma arquitetura de Continuous Integration/Continuous Delivery (CI/CD) real utilizando Kubernetes?","title":"Conclus\u00e3o: SOMENTE PARA PENSAR"},{"location":"roteiros/README-openstackBase/","text":"Basic OpenStack cloud \u00b6 This openstack-base bundle deploys a base OpenStack cloud. Its major elements include: Ubuntu 20.04 LTS (Focal) OpenStack Yoga Ceph Quincy Cloud services consist of Compute, Network, Block Storage, Object Storage, Identity, Image, and Dashboard. Note : Modifications will typically need to be made to this bundle for it to work in your environment. Requirements \u00b6 The bundle is primarily designed to work with MAAS as a backing cloud for Juju. The MAAS cluster must have a minimum of four nodes: one for the Juju controller, with at least 1 CPU and 4 GiB memory three (ideally identical) for the actual cloud, with minimum resources being: 8 GiB memory enough CPU cores to support your workload two disks two cabled network interfaces The first disk is used for the node's operating system, and the second is for Ceph storage. The first network interface is used for communication between cloud services (East/West traffic), and the second is for network traffic between the cloud and all external networks (North/South traffic). Pro tip : A single network interface will suffice if an Open vSwitch bridge is used on each of the nodes (MAAS v.2.9.2 required). Note : The smaller controller node can be targeted via Juju constraints at controller-creation time. Topology \u00b6 3 MAAS nodes, with each hosting one of the following: Ceph storage Nova Compute NTP LXD containers for the following (distributed among the 3 MAAS nodes): Ceph monitors (x3) Ceph RADOS Gateway Cinder Glance Horizon Keystone MySQL8 (x3) Neutron Nova Cloud Controller OVN (x3) Placement RabbitMQ Vault Download the bundle \u00b6 If not already done, clone the openstack-bundles repository: git clone https://github.com/openstack-charmers/openstack-bundles The stable and development bundles are found under the stable/openstack-base and development directories respectively. Overlay bundles are available under stable/overlays . See the Juju documentation on overlay bundles . Modify the bundle \u00b6 If using the stable openstack-base bundle, the file to modify is stable/openstack-base/bundle.yaml . Tip : Keep the master branch of the repository pristine and create a working branch to contain your modifications. A variables: section is used for conveniently setting values in one place. The third column contains the actual values. variables: openstack-origin: &openstack-origin cloud:focal-yoga data-port: &data-port br-ex:eno2 worker-multiplier: &worker-multiplier 0.25 osd-devices: &osd-devices /dev/sdb /dev/vdb expected-osd-count: &expected-osd-count 3 expected-mon-count: &expected-mon-count 3 See the Install OpenStack page in the OpenStack Charms Deployment Guide for help on understanding the variables (the first column). Network spaces \u00b6 If you're using MAAS and it contains network spaces you will need to bind them to the applications being deployed. One way of doing this is with the openstack-base-spaces-overlay.yaml overlay bundle. Like the main bundle file, it will likely require tailoring: variables: public-space: &public-space public-space See the Juju documentation on network spaces . Containerless \u00b6 If you do not want to run containers you will need to undo the placement directives that point to containers. One way of doing this is with the openstack-base-virt-overlay.yaml overlay bundle. MAAS cloud, Juju controller, and model \u00b6 Ensure that the MAAS cluster has been added to Juju as a cloud and that a Juju controller has been created for that cloud. See the Juju documentation for guidance: Using MAAS with Juju . Assuming the controller is called 'maas-controller', create a model called, say, 'openstack' and give it the appropriate default series (e.g. focal): juju add-model -c maas-controller --config default-series=focal openstack Now ensure that the new model is the current model: juju switch maas-controller:openstack Deploy the cloud \u00b6 To install OpenStack, if you're using the spaces overlay: juju deploy ./bundle.yaml --overlay ./openstack-base-spaces-overlay.yaml Otherwise, simply do: juju deploy ./bundle.yaml If you're using a custom overlay (to override elements in earlier bundles) simply append it to the command: juju deploy ./bundle.yaml --overlay ./custom-overlay.yaml juju deploy ./bundle.yaml --overlay ./openstack-base-spaces-overlay.yaml --overlay ./custom-overlay.yaml Note : Here it is assumed, for the sake of brevity, that the YAML files are in the current working directory. Issue TLS certificates \u00b6 This bundle uses Vault to issue TLS certificates to services, and some post-deployment steps are needed in order for it to work. Failure to complete them, for example, will leave the OVN deployment with the following message (in juju status ): 'ovsdb-*' incomplete, 'certificates' awaiting server certificate data See to the Vault charm README for instructions. Install the OpenStack clients \u00b6 You'll need the OpenStack clients in order to manage your cloud from the command line. Install them now: sudo snap install openstackclients Access the cloud \u00b6 Confirm that you can access the cloud from the command line: source ~/openstack-bundles/stable/openstack-base/openrc openstack service list You should get a listing of all registered cloud services. Import an image \u00b6 You'll need to import an image into Glance in order to create instances. First download a boot image, like Focal amd64: curl http://cloud-images.ubuntu.com/focal/current/focal-server-cloudimg-amd64.img \\ --output ~/cloud-images/focal-amd64.img Now import the image and call it 'focal-amd64': openstack image create --public --container-format bare \\ --disk-format qcow2 --file ~/cloud-images/focal-amd64.img \\ focal-amd64 Images for other Ubuntu releases and architectures can be obtained in a similar way. For the ARM 64-bit (arm64) architecture you will need to configure the image to boot in UEFI mode: curl http://cloud-images.ubuntu.com/focal/current/focal-server-cloudimg-amd64.img \\ --output ~/cloud-images/focal-arm64.img openstack image create --public --container-format bare \\ --disk-format qcow2 --property hw_firmware_type=uefi \\ --file ~/cloud-images/focal-arm64.img \\ focal-arm64 Configure networking \u00b6 For the purposes of a quick test, we'll set up an external network and a shared router ('provider-router') that will be used by all tenants for public access to instances. For an example private cloud, create a network ('ext_net'): openstack network create --external \\ --provider-network-type flat --provider-physical-network physnet1 \\ ext_net When creating the external subnet ('ext_subnet') the actual values used will depend on the environment that the second network interface (on all nodes) is connected to: openstack subnet create --network ext_net --no-dhcp \\ --gateway 10.0.0.1 --subnet-range 10.0.0.0/21 \\ --allocation-pool start=10.0.0.10,end=10.0.0.200 \\ ext_subnet Note : For a public cloud the ports would be connected to a publicly addressable part of the internet. We'll also need an internal network ('int_net'), subnet ('int_subnet'), and router ('provider-router'): openstack network create int_net openstack subnet create --network int_net --dns-nameserver 8.8.8.8 \\ --gateway 192.168.0.1 --subnet-range 192.168.0.0/24 \\ --allocation-pool start=192.168.0.10,end=192.168.0.200 \\ int_subnet openstack router create provider-router openstack router set --external-gateway ext_net provider-router openstack router add subnet provider-router int_subnet See the Neutron documentation for more information. Create a flavor \u00b6 Create at least one flavor to define a hardware profile for new instances. Here we create one called 'm1.small': openstack flavor create --ram 2048 --disk 20 --ephemeral 20 m1.small Make sure that your MAAS nodes can accommodate the flavor's resources. Import an SSH keypair \u00b6 An SSH keypair needs to be imported into the cloud in order to access your instances. Generate one first if you do not yet have one. This command creates a passphraseless keypair (remove the -N option to avoid that): ssh-keygen -q -N '' -f ~/cloud-keys/id_mykey To import a keypair: openstack keypair create --public-key ~/cloud-keys/id_mykey.pub mykey Configure security groups \u00b6 To allow ICMP (ping) and SSH traffic to flow to cloud instances create corresponding rules for each existing security group: for i in $(openstack security group list | awk '/default/{ print $2 }'); do openstack security group rule create $i --protocol icmp --remote-ip 0.0.0.0/0; openstack security group rule create $i --protocol tcp --remote-ip 0.0.0.0/0 --dst-port 22; done You only need to perform this step once. Create an instance \u00b6 Create a Focal amd64 instance called 'focal-1': openstack server create --image focal-amd64 --flavor m1.small \\ --key-name mykey --network int_net \\ focal-1 Assign a floating IP address \u00b6 Request and assign a floating IP address to the new instance: FLOATING_IP=$(openstack floating ip create -f value -c floating_ip_address ext_net) openstack server add floating ip focal-1 $FLOATING_IP Log in to an instance \u00b6 Log in to the new instance: ssh -i ~/cloud-keys/id_mykey ubuntu@$FLOATING_IP The below commands are a good start to troubleshooting if something goes wrong: openstack console log show focal-1 openstack server show focal-1 Access the cloud dashboard \u00b6 To access the dashboard (Horizon) first obtain its IP address: juju status --format=yaml openstack-dashboard | grep public-address | awk '{print $2}' | head -1 In this example, the address is '10.0.0.30'. The password can be queried from Keystone: juju run --unit keystone/leader leader-get admin_passwd The dashboard URL then becomes: http://10.0.0.30/horizon The final credentials needed to log in are: User Name: admin Password: *************** Domain: admin_domain VM consoles \u00b6 Enable a remote access protocol such as novnc (or spice ) if you want to connect to VM consoles from within the dashboard: juju config nova-cloud-controller console-access-protocol=novnc Further reading \u00b6 The below resources are recommended for further reading: [What is OpenStack?]: for an overview of the OpenStack project OpenStack Administrator Guides : for upstream OpenStack administrative help OpenStack Charms Deployment Guide : for charm usage information","title":"Basic OpenStack cloud"},{"location":"roteiros/README-openstackBase/#basic-openstack-cloud","text":"This openstack-base bundle deploys a base OpenStack cloud. Its major elements include: Ubuntu 20.04 LTS (Focal) OpenStack Yoga Ceph Quincy Cloud services consist of Compute, Network, Block Storage, Object Storage, Identity, Image, and Dashboard. Note : Modifications will typically need to be made to this bundle for it to work in your environment.","title":"Basic OpenStack cloud"},{"location":"roteiros/README-openstackBase/#requirements","text":"The bundle is primarily designed to work with MAAS as a backing cloud for Juju. The MAAS cluster must have a minimum of four nodes: one for the Juju controller, with at least 1 CPU and 4 GiB memory three (ideally identical) for the actual cloud, with minimum resources being: 8 GiB memory enough CPU cores to support your workload two disks two cabled network interfaces The first disk is used for the node's operating system, and the second is for Ceph storage. The first network interface is used for communication between cloud services (East/West traffic), and the second is for network traffic between the cloud and all external networks (North/South traffic). Pro tip : A single network interface will suffice if an Open vSwitch bridge is used on each of the nodes (MAAS v.2.9.2 required). Note : The smaller controller node can be targeted via Juju constraints at controller-creation time.","title":"Requirements"},{"location":"roteiros/README-openstackBase/#topology","text":"3 MAAS nodes, with each hosting one of the following: Ceph storage Nova Compute NTP LXD containers for the following (distributed among the 3 MAAS nodes): Ceph monitors (x3) Ceph RADOS Gateway Cinder Glance Horizon Keystone MySQL8 (x3) Neutron Nova Cloud Controller OVN (x3) Placement RabbitMQ Vault","title":"Topology"},{"location":"roteiros/README-openstackBase/#download-the-bundle","text":"If not already done, clone the openstack-bundles repository: git clone https://github.com/openstack-charmers/openstack-bundles The stable and development bundles are found under the stable/openstack-base and development directories respectively. Overlay bundles are available under stable/overlays . See the Juju documentation on overlay bundles .","title":"Download the bundle"},{"location":"roteiros/README-openstackBase/#modify-the-bundle","text":"If using the stable openstack-base bundle, the file to modify is stable/openstack-base/bundle.yaml . Tip : Keep the master branch of the repository pristine and create a working branch to contain your modifications. A variables: section is used for conveniently setting values in one place. The third column contains the actual values. variables: openstack-origin: &openstack-origin cloud:focal-yoga data-port: &data-port br-ex:eno2 worker-multiplier: &worker-multiplier 0.25 osd-devices: &osd-devices /dev/sdb /dev/vdb expected-osd-count: &expected-osd-count 3 expected-mon-count: &expected-mon-count 3 See the Install OpenStack page in the OpenStack Charms Deployment Guide for help on understanding the variables (the first column).","title":"Modify the bundle"},{"location":"roteiros/README-openstackBase/#network-spaces","text":"If you're using MAAS and it contains network spaces you will need to bind them to the applications being deployed. One way of doing this is with the openstack-base-spaces-overlay.yaml overlay bundle. Like the main bundle file, it will likely require tailoring: variables: public-space: &public-space public-space See the Juju documentation on network spaces .","title":"Network spaces"},{"location":"roteiros/README-openstackBase/#containerless","text":"If you do not want to run containers you will need to undo the placement directives that point to containers. One way of doing this is with the openstack-base-virt-overlay.yaml overlay bundle.","title":"Containerless"},{"location":"roteiros/README-openstackBase/#maas-cloud-juju-controller-and-model","text":"Ensure that the MAAS cluster has been added to Juju as a cloud and that a Juju controller has been created for that cloud. See the Juju documentation for guidance: Using MAAS with Juju . Assuming the controller is called 'maas-controller', create a model called, say, 'openstack' and give it the appropriate default series (e.g. focal): juju add-model -c maas-controller --config default-series=focal openstack Now ensure that the new model is the current model: juju switch maas-controller:openstack","title":"MAAS cloud, Juju controller, and model"},{"location":"roteiros/README-openstackBase/#deploy-the-cloud","text":"To install OpenStack, if you're using the spaces overlay: juju deploy ./bundle.yaml --overlay ./openstack-base-spaces-overlay.yaml Otherwise, simply do: juju deploy ./bundle.yaml If you're using a custom overlay (to override elements in earlier bundles) simply append it to the command: juju deploy ./bundle.yaml --overlay ./custom-overlay.yaml juju deploy ./bundle.yaml --overlay ./openstack-base-spaces-overlay.yaml --overlay ./custom-overlay.yaml Note : Here it is assumed, for the sake of brevity, that the YAML files are in the current working directory.","title":"Deploy the cloud"},{"location":"roteiros/README-openstackBase/#issue-tls-certificates","text":"This bundle uses Vault to issue TLS certificates to services, and some post-deployment steps are needed in order for it to work. Failure to complete them, for example, will leave the OVN deployment with the following message (in juju status ): 'ovsdb-*' incomplete, 'certificates' awaiting server certificate data See to the Vault charm README for instructions.","title":"Issue TLS certificates"},{"location":"roteiros/README-openstackBase/#install-the-openstack-clients","text":"You'll need the OpenStack clients in order to manage your cloud from the command line. Install them now: sudo snap install openstackclients","title":"Install the OpenStack clients"},{"location":"roteiros/README-openstackBase/#access-the-cloud","text":"Confirm that you can access the cloud from the command line: source ~/openstack-bundles/stable/openstack-base/openrc openstack service list You should get a listing of all registered cloud services.","title":"Access the cloud"},{"location":"roteiros/README-openstackBase/#import-an-image","text":"You'll need to import an image into Glance in order to create instances. First download a boot image, like Focal amd64: curl http://cloud-images.ubuntu.com/focal/current/focal-server-cloudimg-amd64.img \\ --output ~/cloud-images/focal-amd64.img Now import the image and call it 'focal-amd64': openstack image create --public --container-format bare \\ --disk-format qcow2 --file ~/cloud-images/focal-amd64.img \\ focal-amd64 Images for other Ubuntu releases and architectures can be obtained in a similar way. For the ARM 64-bit (arm64) architecture you will need to configure the image to boot in UEFI mode: curl http://cloud-images.ubuntu.com/focal/current/focal-server-cloudimg-amd64.img \\ --output ~/cloud-images/focal-arm64.img openstack image create --public --container-format bare \\ --disk-format qcow2 --property hw_firmware_type=uefi \\ --file ~/cloud-images/focal-arm64.img \\ focal-arm64","title":"Import an image"},{"location":"roteiros/README-openstackBase/#configure-networking","text":"For the purposes of a quick test, we'll set up an external network and a shared router ('provider-router') that will be used by all tenants for public access to instances. For an example private cloud, create a network ('ext_net'): openstack network create --external \\ --provider-network-type flat --provider-physical-network physnet1 \\ ext_net When creating the external subnet ('ext_subnet') the actual values used will depend on the environment that the second network interface (on all nodes) is connected to: openstack subnet create --network ext_net --no-dhcp \\ --gateway 10.0.0.1 --subnet-range 10.0.0.0/21 \\ --allocation-pool start=10.0.0.10,end=10.0.0.200 \\ ext_subnet Note : For a public cloud the ports would be connected to a publicly addressable part of the internet. We'll also need an internal network ('int_net'), subnet ('int_subnet'), and router ('provider-router'): openstack network create int_net openstack subnet create --network int_net --dns-nameserver 8.8.8.8 \\ --gateway 192.168.0.1 --subnet-range 192.168.0.0/24 \\ --allocation-pool start=192.168.0.10,end=192.168.0.200 \\ int_subnet openstack router create provider-router openstack router set --external-gateway ext_net provider-router openstack router add subnet provider-router int_subnet See the Neutron documentation for more information.","title":"Configure networking"},{"location":"roteiros/README-openstackBase/#create-a-flavor","text":"Create at least one flavor to define a hardware profile for new instances. Here we create one called 'm1.small': openstack flavor create --ram 2048 --disk 20 --ephemeral 20 m1.small Make sure that your MAAS nodes can accommodate the flavor's resources.","title":"Create a flavor"},{"location":"roteiros/README-openstackBase/#import-an-ssh-keypair","text":"An SSH keypair needs to be imported into the cloud in order to access your instances. Generate one first if you do not yet have one. This command creates a passphraseless keypair (remove the -N option to avoid that): ssh-keygen -q -N '' -f ~/cloud-keys/id_mykey To import a keypair: openstack keypair create --public-key ~/cloud-keys/id_mykey.pub mykey","title":"Import an SSH keypair"},{"location":"roteiros/README-openstackBase/#configure-security-groups","text":"To allow ICMP (ping) and SSH traffic to flow to cloud instances create corresponding rules for each existing security group: for i in $(openstack security group list | awk '/default/{ print $2 }'); do openstack security group rule create $i --protocol icmp --remote-ip 0.0.0.0/0; openstack security group rule create $i --protocol tcp --remote-ip 0.0.0.0/0 --dst-port 22; done You only need to perform this step once.","title":"Configure security groups"},{"location":"roteiros/README-openstackBase/#create-an-instance","text":"Create a Focal amd64 instance called 'focal-1': openstack server create --image focal-amd64 --flavor m1.small \\ --key-name mykey --network int_net \\ focal-1","title":"Create an instance"},{"location":"roteiros/README-openstackBase/#assign-a-floating-ip-address","text":"Request and assign a floating IP address to the new instance: FLOATING_IP=$(openstack floating ip create -f value -c floating_ip_address ext_net) openstack server add floating ip focal-1 $FLOATING_IP","title":"Assign a floating IP address"},{"location":"roteiros/README-openstackBase/#log-in-to-an-instance","text":"Log in to the new instance: ssh -i ~/cloud-keys/id_mykey ubuntu@$FLOATING_IP The below commands are a good start to troubleshooting if something goes wrong: openstack console log show focal-1 openstack server show focal-1","title":"Log in to an instance"},{"location":"roteiros/README-openstackBase/#access-the-cloud-dashboard","text":"To access the dashboard (Horizon) first obtain its IP address: juju status --format=yaml openstack-dashboard | grep public-address | awk '{print $2}' | head -1 In this example, the address is '10.0.0.30'. The password can be queried from Keystone: juju run --unit keystone/leader leader-get admin_passwd The dashboard URL then becomes: http://10.0.0.30/horizon The final credentials needed to log in are: User Name: admin Password: *************** Domain: admin_domain","title":"Access the cloud dashboard"},{"location":"roteiros/README-openstackBase/#vm-consoles","text":"Enable a remote access protocol such as novnc (or spice ) if you want to connect to VM consoles from within the dashboard: juju config nova-cloud-controller console-access-protocol=novnc","title":"VM consoles"},{"location":"roteiros/README-openstackBase/#further-reading","text":"The below resources are recommended for further reading: [What is OpenStack?]: for an overview of the OpenStack project OpenStack Administrator Guides : for upstream OpenStack administrative help OpenStack Charms Deployment Guide : for charm usage information","title":"Further reading"}]}